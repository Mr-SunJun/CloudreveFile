{"version":3,"sources":["component/Modals/AddTag.js"],"names":["useStyles","makeStyles","theme","contentFix","padding","wrapper","margin","spacing","position","buttonProgress","color","palette","secondary","light","top","left","marginTop","marginLeft","content","display","textField","scroll","overflowX","dialogContent","pathSelect","AddTag","props","name","useTheme","t","useTranslation","React","useState","value","setValue","loading","setLoading","alignment","text","filename","tagName","directoryName","path","input","setInput","pathSelectDialog","setPathSelectDialog","selectedPath","setSelectedPath","setSelectedPathName","dispatch","useDispatch","ToggleSnackbar","useCallback","vertical","horizontal","msg","toggleSnackbar","classes","open","onClose","aria-labelledby","fullWidth","id","presentPath","selected","onSelect","folder","onClick","disabled","onChange","event","newValue","variant","aria-label","label","className","target","API","post","expression","icon","then","response","onSuccess","type","data","catch","error","message","size"],"mappings":"wXAwCMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,QAAS,sBAEbC,QAAS,CACLC,OAAQJ,EAAMK,QAAQ,GACtBC,SAAU,YAEdC,eAAgB,CACZC,MAAOR,EAAMS,QAAQC,UAAUC,MAC/BL,SAAU,WACVM,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,IAEjBC,QAAS,CACLd,QAAS,EACTY,UAAW,GAEfA,UAAW,CACPA,UAAWd,EAAMK,QAAQ,GACzBY,QAAS,SAEbC,UAAW,CACPJ,UAAWd,EAAMK,QAAQ,IAE7Bc,OAAQ,CACJC,UAAW,QAEfC,cAAe,CACXP,UAAWd,EAAMK,QAAQ,IAE7BiB,WAAY,CACRR,UAAWd,EAAMK,QAAQ,GACzBY,QAAS,YAKJ,IACO,IACR,IACO,IACL,IACO,IACN,IACO,IACR,IACO,IACR,IACO,IACL,IAGA,SAASM,EAAOC,GAC3B,IA0C2BC,EA1CrBzB,EAAQ0B,cACNC,EAAMC,cAAND,EAER,EAA0BE,IAAMC,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BH,IAAMC,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCL,IAAMC,SAAS,UAAjD,mBAAOK,EAAP,KACA,GADA,KAC0BN,IAAMC,SAAS9B,EAAMS,QAAQ2B,KAAK1B,YAA5D,mBAAOF,EAAP,KACA,GADA,KAC0BqB,IAAMC,SAAS,CACrCO,SAAU,GACVC,QAAS,GACTC,cAAc,GACdC,KAAM,OAJV,mBAAOC,EAAP,KAAcC,EAAd,KAMA,EAAgDb,IAAMC,UAAS,GAA/D,mBAAOa,EAAP,KAAyBC,EAAzB,KACA,EAAwCd,mBAAS,IAAjD,mBAAOe,EAAP,KAAqBC,EAArB,KAEA,EAAgDhB,mBAAS,IAAzD,mBAAyBiB,IAAzB,WAiCMC,GAAWC,cACXC,GAAiBC,uBACnB,SAACC,EAAUC,EAAYC,EAAK9C,GAA5B,OACIwC,GAASO,YAAeH,EAAUC,EAAYC,EAAK9C,MACvD,CAACwC,KAwECQ,GAAU1D,IAEhB,OACI,kBAAC,IAAD,CACI2D,KAAMjC,EAAMiC,KACZC,QAASlC,EAAMkC,QACfC,kBAAgB,oBAChBC,WAAS,GAET,kBAAC,IAAD,CACIH,KAAMd,EACNe,QAAS,kBAAMd,GAAoB,IACnCe,kBAAgB,qBAEhB,kBAAC,IAAD,CAAaE,GAAG,qBACXlC,EAAE,qCAEP,kBAAC,IAAD,CACImC,YAAY,IACZC,SAAU,GACVC,SAhIM,SAACC,GACnB,IAAMzB,EACc,MAAhByB,EAAOzB,KACDyB,EAAOzB,KAAOyB,EAAOxC,KACrBwC,EAAOzB,KAAO,IAAMyB,EAAOxC,KACrCqB,EAAgBN,GAChBO,GAAoBkB,EAAOxC,SA6HnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQyC,QAAS,kBAAMtB,GAAoB,KACtCjB,EAAE,kBAEP,kBAAC,IAAD,CACIuC,QApCD,WACfxB,EAAS,2BACFD,GADC,IAEJD,KAAuB,OAAjBK,EAAwB,IAAMA,KAExCD,GAAoB,IAgCJpC,MAAM,UACN2D,SAA2B,KAAjBtB,GAETlB,EAAE,gBAKf,kBAAC,IAAD,CAAQrB,SAAS,UACb,kBAAC,IAAD,CACIyB,MAAOA,EACPqC,SA3IK,SAACC,EAAOC,GACzBtC,EAASsC,IA2IGC,QAAQ,YACRC,aAAW,2BAEX,kBAAC,IAAD,CAAKC,MAAO9C,EAAE,qDAGX,IAAVI,GACG,kBAAC,IAAD,CAAe2C,UAAWlB,GAAQnC,eAC9B,kBAAC,IAAD,CACIoD,MAAO9C,EAAE,+CACTkC,GAAG,cACH9B,MAAOU,EAAK,cACZ2B,UAxIO3C,EAwIqB,gBAxIZ,SAAC4C,GACjC3B,EAAS,2BACFD,GADC,kBAEHhB,EAAO4C,EAAMM,OAAO5C,WAsIT6B,WAAS,EACTc,UAAWlB,GAAQtC,aAI/B,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAQgD,QAAS1C,EAAMkC,SAAU/B,EAAE,kBACnC,yBAAK+C,UAAWlB,GAAQrD,SACpB,kBAAC,IAAD,CACI+D,QA/EL,WACG,IAAVnC,GA3BJG,GAAW,GAEX0C,IAAIC,KAAK,cAAe,CACpBC,WAAYrC,EAAMJ,SAClBZ,KAAMgB,EAAMH,QACZ9B,MAAOA,EACPuE,KAAM5C,IAEL6C,MAAK,SAACC,GACH/C,GAAW,GACXV,EAAMkC,UACNlC,EAAM0D,UAAU,CACZC,KAAM,EACN1D,KAAMgB,EAAMH,QACZ9B,MAAOA,EACPuE,KAAM5C,EACN0B,GAAIoB,EAASG,UAGpBC,OAAM,SAACC,GACJpC,GAAe,MAAO,QAASoC,EAAMC,QAAS,YAEjDP,MAAK,WACF9C,GAAW,QAlDnBA,GAAW,GAEX0C,IAAIC,KAAK,YAAa,CAClBrC,KAAMC,EAAMD,KACZf,KAAMgB,EAAMH,UAEX0C,MAAK,SAACC,GACH/C,GAAW,GACXV,EAAMkC,UACNlC,EAAM0D,UAAU,CACZC,KAAM,EACN1D,KAAMgB,EAAMH,QACZwC,WAAYrC,EAAMD,KAClBhC,MAAOR,EAAMS,QAAQ2B,KAAK1B,UAC1BqE,KAAM,qBACNlB,GAAIoB,EAASG,UAGpBC,OAAM,SAACC,GACJpC,GAAe,MAAO,QAASoC,EAAMC,QAAS,YAEjDP,MAAK,WACF9C,GAAW,QA+GH1B,MAAM,UACN2D,SACIlC,GACW,IAAVF,IACuB,KAAnBU,EAAMJ,UACe,KAAlBI,EAAMH,UACH,IAAVP,IACsB,KAAlBU,EAAMH,SAAiC,KAAfG,EAAMD,OAGtCb,EAAE,aACFM,GACG,kBAAC,IAAD,CACIuD,KAAM,GACNd,UAAWlB,GAAQjD","file":"static/js/12.40ca1778.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    useTheme,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport {\n    Circle,\n    CircleOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    Triangle,\n} from \"mdi-material-ui\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    content: {\n        padding: 0,\n        marginTop: 0,\n    },\n    marginTop: {\n        marginTop: theme.spacing(2),\n        display: \"block\",\n    },\n    textField: {\n        marginTop: theme.spacing(1),\n    },\n    scroll: {\n        overflowX: \"auto\",\n    },\n    dialogContent: {\n        marginTop: theme.spacing(2),\n    },\n    pathSelect: {\n        marginTop: theme.spacing(2),\n        display: \"flex\",\n    },\n}));\n\nconst icons = {\n    Circle: <Circle />,\n    CircleOutline: <CircleOutline />,\n    Heart: <Heart />,\n    HeartOutline: <HeartOutline />,\n    Hexagon: <Hexagon />,\n    HexagonOutline: <HexagonOutline />,\n    Hexagram: <Hexagram />,\n    HexagramOutline: <HexagramOutline />,\n    Rhombus: <Rhombus />,\n    RhombusOutline: <RhombusOutline />,\n    Square: <Square />,\n    SquareOutline: <SquareOutline />,\n    Triangle: <Triangle />,\n};\n\nexport default function AddTag(props) {\n    const theme = useTheme();\n    const { t } = useTranslation();\n\n    const [value, setValue] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [alignment, setAlignment] = React.useState(\"Circle\");\n    const [color, setColor] = React.useState(theme.palette.text.secondary);\n    const [input, setInput] = React.useState({\n        filename: \"\",\n        tagName: \"\",\n        directoryName:\"\",\n        path: \"/\",\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleIconChange = (event, newAlignment) => {\n        if (newAlignment) {\n            setAlignment(newAlignment);\n        }\n    };\n\n    const handleColorChange = (event, newAlignment) => {\n        if (newAlignment) {\n            setColor(newAlignment);\n        }\n    };\n\n    const handleInputChange = (name) => (event) => {\n        setInput({\n            ...input,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitNewLink = () => {\n        setLoading(true);\n\n        API.post(\"/tag/link\", {\n            path: input.path,\n            name: input.tagName,\n        })\n            .then((response) => {\n                setLoading(false);\n                props.onClose();\n                props.onSuccess({\n                    type: 1,\n                    name: input.tagName,\n                    expression: input.path,\n                    color: theme.palette.text.secondary,\n                    icon: \"FolderHeartOutline\",\n                    id: response.data,\n                });\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitNewTag = () => {\n        setLoading(true);\n\n        API.post(\"/tag/filter\", {\n            expression: input.filename,\n            name: input.tagName,\n            color: color,\n            icon: alignment,\n        })\n            .then((response) => {\n                setLoading(false);\n                props.onClose();\n                props.onSuccess({\n                    type: 0,\n                    name: input.tagName,\n                    color: color,\n                    icon: alignment,\n                    id: response.data,\n                });\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n    const submit = () => {\n        if (value === 0) {\n            submitNewTag();\n        } else {\n            submitNewLink();\n        }\n    };\n    const selectPath = () => {\n        setInput({\n            ...input,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\n        });\n        setPathSelectDialog(false);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"navbar.addTagDialog.selectFolder\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        {t(\"common:cancel\")}\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        {t(\"common:ok\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label={t(\"navbar.addTagDialog.directory.createDirectory\")} />\n                </Tabs>\n            </AppBar>\n            {value === 0 && (\n                <DialogContent className={classes.dialogContent}>\n                    <TextField\n                        label={t(\"navbar.addTagDialog.directory.directoryName\")}\n                        id=\"filled-name\"\n                        value={input[\"directoryName\"]}\n                        onChange={handleInputChange(\"directoryName\")}\n                        fullWidth\n                        className={classes.textField}\n                    />\n                </DialogContent>\n            )}\n            <DialogActions>\n                {/* 侧边栅栏，列表按钮出发 */}\n                <Button onClick={props.onClose}>{t(\"common:cancel\")}</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submit}\n                        color=\"primary\"\n                        disabled={\n                            loading ||\n                            (value === 0 &&\n                                (input.filename === \"\" ||\n                                    input.tagName === \"\")) ||\n                            (value === 1 &&\n                                (input.tagName === \"\" || input.path === \"\"))\n                        }\n                    >\n                        {t(\"common:ok\")}\n                        {loading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}"],"sourceRoot":""}