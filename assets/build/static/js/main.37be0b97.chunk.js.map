{"version":3,"sources":["hooks/fileSubtitle.js","component/Placeholder/TextLoading.js","redux/explorer/reducer.ts","middleware/Api.ts","component/Dial/AutoHidden.js","services/navigate.ts","services/file.ts","redux/explorer/async.ts","utils/page.ts","middleware/Auth.ts","redux/explorer/index.ts","i18n.ts","component/Uploader/core/utils/pool.ts","component/Uploader/core/utils/validator.ts","component/Uploader/core/utils/request.ts","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","component/Modals/CreateShare.js","component/Modals/OptionSelector.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/DirectoryDownload.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/Modals/RemoteDownload.js","component/Modals/Delete.js","component/FileManager/Modals.js","utils/index.js","component/Viewer/Text.js","component/Viewer/Code.js","component/Uploader/core/errors/index.ts","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Uploader/core/utils/helper.ts","component/Uploader/core/utils/index.ts","component/Navbar/SearchBar.js","utils/zip.js","utils/api.ts","utils/filesystem.ts","redux/explorer/action.ts","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/FileManager/ImgPreview.js","component/Uploader/core/types.ts","component/Uploader/core/uploader/base.ts","component/Uploader/core/logger.ts","component/Uploader/core/api/index.ts","component/Uploader/core/index.ts","component/Uploader/core/uploader/chunk.ts","component/Uploader/core/uploader/local.ts","component/Uploader/core/uploader/remote.ts","component/Uploader/core/uploader/onedrive.ts","component/Uploader/core/uploader/oss.ts","component/Uploader/core/uploader/qiniu.ts","component/Uploader/core/uploader/cos.ts","component/Uploader/core/uploader/upyun.ts","component/Uploader/core/uploader/s3.ts","component/Uploader/core/uploader/placeholder.ts","component/Dial/Create.js","component/Uploader/Popup/TaskDetail.js","component/Uploader/Popup/UploadTask.js","component/Uploader/UseUpload.js","component/Modals/ConcurrentOption.js","component/Uploader/Popup/MoreActions.js","component/Uploader/Popup/TaskList.js","component/Placeholder/DropFile.js","component/Uploader/Uploader.js","config.ts","redux/viewUpdate/action.ts","utils/datetime.js","component/FileManager/TypeIcon.js","serviceWorker.js","middleware/AuthRoute.js","middleware/NoAuthRoute.js","component/Share/NotFound.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","component/FileManager/FileName.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/DnD/Scrolling.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","hooks/pagination.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/PaginationItem.js","component/FileManager/Pagination.js","component/FileManager/FileManager.js","component/Viewer/SelectMenu.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/AppQRCode.js","component/Setting/AppPromotion.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","component/FileManager/MusicPlayer.js","component/Viewer/Epub.js","App.js","middleware/Init.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","component/Placeholder/Nothing.js","component/FileManager/PathSelector.js"],"names":["UseFileSubTitle","query","math","location","dispatch","useDispatch","useState","title","setTitle","path","setPath","SetSubTitle","useCallback","changeSubTitle","useEffect","pathHelper","isSharePage","pathname","get","split","length","params","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","className","TextLoading","useTheme","classes","palette","type","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selected","selectProps","isMultiple","withFolder","withFile","withSourceEnabled","lastSelect","file","id","name","size","date","create_date","index","shiftSelectedIds","imgPreview","first","other","audioPreview","playingName","paused","isOpen","fileSave","sideBarOpen","checkSelectedProps","forEach","value","source_enabled","explorer","state","action","Object","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","includes","search","keywords","searchPath","undefined","open","currentPolicy","policy","baseURL","getBaseURL","getPreviewURL","isShare","shareID","fileID","encodeURIComponent","instance","axios","create","withCredentials","AppError","message","code","error","i18next","exists","ns","t","stack","Error","interceptors","response","use","rawData","data","Auth","signout","window","href","msg","Promise","reject","AutoHidden","children","enable","hide","element","hidden","setHidden","prev","scrollY","lastUpdate","addEventListener","e","currentTarget","current","scrollTop","handleNavigation","in","share","a","apiURL","key","API","getDownloadURL","reqURL","downloadPath","put","askForOption","options","getState","resolve","dialog","setOptionModal","onClose","callback","option","statusHelper","isHomePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","parse","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","oldUser","SetPreference","preference","GetPreference","GetPreferenceWithDefault","defaultVal","actions","reducers","setNavigator","navigatorLoading","navigateTo","navigator","setPagination","viewUpdate","pagination","page","navigateUp","pathSplit","pop","newPath","join","drawerToggleAction","dragAndDrop","changeViewMethod","method","toggleDaylightMode","changeContextMenu","menuType","setNavigatorLoadingStatus","status","setNavigatorError","openCreateFolderDialog","openCreateFileDialog","setUserPopover","anchor","setShareUserPopover","openRenameDialog","openResaveDialog","openMoveDialog","openRemoveDialog","openShareDialog","applyThemes","setSessionStatus","openMusicDialog","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","openLoadingDialog","text","closeAllModals","toggleSnackbar","vertical","horizontal","color","setModalsLoading","refreshFileList","searchMyFile","showImgPreivew","showAudioPreview","audioPreviewSetIsOpen","audioPreviewSetPlaying","refreshStorage","saveFile","setSiteConfig","config","openDirectoryDownloadDialog","downloading","log","done","i18n","ChainedBackend","LanguageDetector","initReactI18next","init","fallbackLng","debug","load","defaultNS","interpolation","escapeValue","backend","backends","LocalStorageBackend","Backend","backendOptions","expirationTime","queryStringParams","v","ASSETS_VERSION","loadPath","on","lng","document","documentElement","setAttribute","languages","displayName","Pool","limit","queue","processing","uploader","push","check","item","this","findIndex","task","dst","ProcessingTaskDuplicatedError","release","run","then","err","processingNum","availableNum","Math","max","slice","checkers","allowedSuffix","ext","FileValidateError","maxSize","validate","c","CancelToken","baseConfig","transformResponse","TransformResponseError","cdBackendConfig","request","url","catch","isCancel","RequestCanceledError","HTTPError","requestAPI","icon","opacity","DarkModeSwitcher","position","useTranslation","ThemeType","useSelector","siteConfig","ToggleThemeMode","isDayLight","isDark","placement","classNames","onClick","sideButton","marginRight","sortOptions","paginationOption","SubActions","isSmall","inherit","keyPrefix","viewMethod","explorerViewMethod","shareInfo","pageSize","OpenLoadingDialog","ChangeSortMethod","changeSortMethod","SetShareUserPopover","ChangePageSize","changePageSize","anchorSort","setAnchorSort","anchorPagination","setAnchorPagination","selectedIndex","setSelectedIndex","handlePaginationChange","s","toggleViewMethod","newMethod","fontSize","anchorEl","Boolean","map","toString","parseInt","event","0","1","2","3","4","5","6","7","handleMenuItemClick","nick","creator","style","height","src","widthAnimation","shareUrl","minWidth","wrapper","margin","spacing","buttonProgress","secondary","light","top","left","flexCenter","alignItems","noFlex","display","scoreCalc","marginTop","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","ToggleSnackbar","lastSubmit","useRef","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","handleExpand","panel","isExpanded","handleCheck","setTimeout","aria-labelledby","maxWidth","fullWidth","onChange","aria-controls","button","primary","checked","variant","htmlFor","endAdornment","aria-label","random","substr","edge","onMouseDown","preventDefault","onIcon","offIcon","labelWidth","labelId","num","marginLeft","onFocus","select","autoFocus","inputProps","readonly","label","link","clipboard","writeText","submitFormBody","is_dir","post","disabled","modalsLoading","OptionSelector","modals","dividers","component","o","description","fab","right","bottom","zIndex","badge","fabProgress","green","buttonSuccess","SaveButton","buttonClassname","clsx","avatar","blue","loadingContainer","loading","LoadingDialog","loadingText","Dialog","DialogContent","DialogContentText","CircularProgress","contentFix","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","SetModalsLoading","RefreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","Trans","i18nKey","components","DialogActions","Button","dirs","items","src_dir","DirectoryDownloadDialog","logRef","autoScroll","setAutoScroll","previousLog","usePrevious","next","timer","setTimer","useInterval","scrollIntoView","behavior","block","TextField","ref","multiline","FormControlLabel","control","Checkbox","previous","cancelDirectoryDownload","DecompressDialog","SubmitDecompressTask","submitDecompressTask","CompressDialog","fileName","setFileName","SubmitCompressTask","submitCompressTask","formGroup","marginBottom","forumInput","flexGrow","RemoteDownload","selectPathOpen","setSelectPathOpen","downloadTo","setDownloadTo","setUrl","useMediaQuery","torrent","placeholder","InputProps","startAdornment","InputAdornment","input","FolderOpenOutlined","failed","r","details","pathBack","form","Delete","user","force","setForce","unlink","setUnlink","group","advanceDelete","FormControl","FormLabel","FormGroup","Tooltip","delete","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","purchaseCallback","handleInputChange","setState","newNameSuffix","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","dragMove","scoreHandler","Download","downloaded","submitMove","patch","DragSelectedPath","doMove","submitRename","new_name","submitCreateNewFolder","submitCreateNewFile","setMoveTarget","copySource","getSource","createNewFolder","onSubmit","createNewFile","copy","move","remove","remoteDownload","remoteDownloadTorrent","decompress","compress","directoryDownloading","directoryDownloadDone","directoryDownloadLog","Component","Modals","connect","withRouter","withTranslation","sizeToString","bytes","i","floor","pow","toFixed","fixUrlHash","setGetParameter","paramName","paramValue","indexOf","prefix","substring","suffix","history","pushState","changeThemeColor","querySelector","bufferDecode","Uint8Array","from","atob","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","folders","filePath","hex2bin","hex","padStart","basename","pathList","filename","fileNameNoExt","lastIndexOf","randomStr","result","characters","charactersLength","charAt","getNumber","base","conditions","isMac","platform","toUpperCase","isMobileSafari","ua","userAgent","iOS","match","webkit","vhCheck","vh","innerHeight","setProperty","removeI18nCache","keys","removeItem","getSelectItemStyles","personName","fontWeight","typography","fontWeightRegular","fontWeightMedium","layout","up","player","borderRadius","shape","overflowX","TextViewer","setContent","setStatus","setLoading","useRouteMatch","$vm","createRef","useLocation","URLSearchParams","useParams","requestURL","responseType","textdata","Buffer","toBase64","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","$img2Url","console","elevation","language","onSave","toolbar","h1","h2","h3","h4","img","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","wordWrap","setWordWrap","extension","codePreviewSuffix","Array","Set","k","fallback","readOnly","extraEditorClassName","UploaderErrorName","RETRY_ERROR_LIST","FailedCreateUploadSession","HTTPRequestFailed","LocalChunkUploadFailed","SlaveChunkUploadFailed","RequestCanceled","ProcessingTaskDuplicated","FailedTransformResponse","RETRY_CODE_LIST","UploaderError","field","InvalidFile","supported","UnknownPolicyError","UnknownPolicyType","APIError","appError","CreateUploadSessionError","DeleteUploadSessionError","FailedDeleteUploadSession","axiosErr","LocalChunkUploadError","chunkIndex","SlaveChunkUploadError","OneDriveChunkError","OneDriveChunkUploadFailed","retryAfterSeconds","retryAfter","OneDriveEmptyFileSelected","OneDriveEmptyFile","OneDriveFinishUploadError","FailedFinishOneDriveUpload","S3LikeChunkError","S3LikeChunkUploadFailed","getElementsByTagName","innerHTML","S3LikeFinishUploadError","QiniuChunkError","QiniuChunkUploadFailed","QiniuFinishUploadError","FailedFinishQiniuUpload","COSUploadError","COSPostUploadFailed","COSUploadCallbackError","COSUploadCallbackFailed","UpyunUploadError","UpyunPostUploadFailed","S3LikeUploadCallbackError","S3LikeUploadCallbackFailed","parseError","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","openURL","sigOut","reload","Popover","transformOrigin","visitorMenu","Divider","MenuItem","ListItemIcon","registerEnabled","header","largeAvatarContainer","Avatar","largeAvatar","Typography","noWrap","nickname","user_name","Chip","UserAvatarPopover","userPopoverAnchorEl","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","IconButton","Home","UserAvatar","ListItem","MuiListItem","NavbarCompoment","handleDrawerToggle","mobileOpen","openDownload","startDownload","openDirectoryDownload","startDirectoryDownload","archiveDownload","startBatchDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","paddingList","iconFix","process","browser","test","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","isPreviewable","openPreview","showDirectoryPicker","isSecureContext","disableClickAway","audioPreviewPlayingName","audioPreviewOpen","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerPaperDesktop","drawerOpen","drawerClose","Navbar","loadUploader","audioPreviewIsOpen","withTheme","flexShrink","drawerDesktop","mixins","flexDirection","justifyContent","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","nested","paddingLeft","extendedIcon","addButton","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","getChunks","chunkByteSize","chunks","count","ceil","chunk","sumChunk","reduce","loaded","getResumeCtxKey","setResumeCtx","logger","ctxKey","warn","WriteCtxFailed","removeResumeCtx","RemoveCtxFailed","cleanupResumeCtx","getResumeCtx","localInfoString","ReadCtxFailed","localInfo","InvalidCtxData","session","Date","now","CtxExpired","listResumeCtx","res","len","OBJtoXML","obj","xml","isArray","array","getFileInput","isFolder","createElement","multiple","body","appendChild","pathJoin","parts","sep","part","RegExp","trimPrefix","getDirectoryUploadDst","relPath","webkitRelativePath","fsPath","readEntriesPromise","directoryReader","readEntries","readFilePromise","fileReader","readAllDirectoryEntries","entries","getAllFileEntries","dataTransferItemList","fileEntries","webkitGetAsEntry","getAsFile","entry","shift","isFile","fullPath","isDirectory","createReader","isFileDrop","dataTransfer","types","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","fade","common","white","pointerEvents","paddingTop","paddingRight","paddingBottom","Crc32","crc","table","offset","prototype","j","getDataHelper","byteLength","uint8","view","DataView","buffer","ZIP","underlyingSource","ctrl","activeZipObject","closed","files","filenames","encoder","TextEncoder","activeZipIndex","processNextChunk","closeZip","zipWriter","enqueue","fileLike","TypeError","trim","lastModified","directory","endsWith","nameBuf","encode","zipObject","level","comment","compressedLength","uncompressedLength","writeHeader","setUint16","setUint32","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","set","writeFooter","footer","indexFilename","setUint8","zipObj","read","outputData","append","stream","getReader","ReadableStream","start","pull","getPreviewPath","walk","f","objects","subs","getFileSystemDirectoryPaths","handle","parent","paths","fileSystemHandle","FileSystemFileHandle","createFileSystemDirectory","cur","getDirectoryHandle","saveFileToFileSystemDirectory","dir","getFileHandle","createWritable","writable","write","verifyFileSystemRWPermission","fileHandle","opts","mode","queryPermission","requestPermission","directoryDownloadAbortController","setFileList","setDirList","setSortMethod","setSideBar","setCurrentPolicy","removeSelectedTargets","addSelectedTargets","setLastSelect","setShiftSelectedIds","sortMethodFuncs","sizePos","b","sizeRes","namePos","localeCompare","numeric","ignorePunctuation","nameRev","timePos","timeRev","modifyTimePos","modifyTimeRev","selectAll","updateFileList","sortMethod","x","sortFunc","sort","total","toggleObjectInfoSidebar","closeContextMenu","serverSideBatchDownload","router","postBody","shareDownload","allowArchiveDownload","fileStream","streamSaver","createWriteStream","readableZipStream","previewPath","fetch","cache","WritableStream","pipeTo","abort","AbortController","startIn","fsPaths","duplicates","updateLog","signal","blob","getViewerURL","viewer","openViewer","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","all","begin","min","end","newShiftSelected","encodings","encoding","encodingRequired","allOptions","batchGetSource","sourceBatch","openTorrentDownload","openParentFolder","StorageBarCompoment","percent","used","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","groupName","UserInfo","backgroundImage","backgroundSize","minHeight","transform","hiddenButton","subMenu","overFlow","whiteSpace","paddingSummary","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","Folder","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","p","NavigateTo","onSuccess","tag","newTags","expression","IconComponent","getIcon","ImagPreviewComponent","photoIndex","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","PolicyType","TaskType","Status","Logger","allowLevel","args","getPrintPrefix","createUploadSession","req","cancel","cancelToken","localUploadChunk","sessionID","onProgress","headers","onUploadProgress","progressEvent","slaveUploadChunk","credential","Authorization","oneDriveUploadChunk","range","finishOneDriveUpload","s3LikeUploadChunk","etag","s3LikeFinishUpload","isOss","PartNumber","ETag","validateStatus","qiniuDriveUploadChunk","upToken","authorization","qiniuFinishUpload","partNumber","cosFormUploadChunk","keyTime","ak","bodyFormData","FormData","cosUploadCallback","upyunFormUploadChunk","s3LikeUploadCallback","resumePolicy","local","remote","qiniu","oss","onedrive","s3","Base","manager","child","added","subscriber","progress","lastTime","startTime","subscribe","transit","initialized","setError","queued","pool","preparing","cachedInfo","utils","policy_id","last_modified","token","resumed","chunkProgress","upload","afterUpload","finished","cancelUploadSession","canceled","reset","deleteUploadSession","onTransition","newStatus","onError","onMsg","Retryable","fromCache","SelectType","Chunk","initBeforeUploadChunks","updateLocalCache","uploadChunk","chunkSize","notifyResumeProgress","getProgressInfoItem","Local","chunkInfo","updateChunkProgress","Remote","uploadURLs","OneDrive","rangeEnd","sendRange","innererror","alignChunkOffset","chunkOffset","rangeStatus","expectedStart","nextExpectedRanges","newChunkOffset","finishing","OSS","completeURL","Qiniu","chunkRes","COS","Upyun","ResumeHint","resumable","UploadManager","fileInput","directoryInput","currentPath","changeConcurrentLimit","newLimit","File","NoPolicySelected","onchange","ev","fileSelectCallback","click","resumeTasks","tasks","dispatchUploader","resumeHint","cleanupSessions","Event","onFileDroppedIn","onDropLeave","uploaders","onDropFileAdded","logLevel","concurrentLimit","dropZone","onDropOver","cos","upyun","S3","acceptVal","removeAttribute","UploadButton","setOpen","setQueued","OpenNewFolderDialog","OpenNewFileDialog","Queued","uploadClicked","openFileList","circularProgress","useMemo","totalSize","processedSize","taskListOpen","Badge","badgeContent","invisible","Backdrop","SpeedDial","tooltipTitle","SpeedDialIcon","openIcon","FabProps","ariaLabel","SpeedDialAction","tooltipOpen","Directory","infoTitle","infoValue","wordBreak","TaskDetail","navigateToDst","Link","datetime","locale","Grid","xs","progressContent","progressContainer","listAction","successStatus","errorStatus","disabledBadge","dstLink","fileNameContainer","getSpeedText","speed","speedAvg","useSpeedAvg","displayedSpeed","getErrMsg","errMsg","Message","UploadTask","useAvgSpeed","onCancel","onRefresh","taskHover","setTaskHover","startLoadedRef","setProgress","durationTotal","resAvg","retry","useUpload","fullScreen","statusText","uploaded","percentage","resumeLabel","continueLabel","progressBar","lighten","darken","taskDetail","u","stopRipple","stopPropagation","secondaryAction","show","onTouchStart","fileIcon","TypeIcon","isUpload","newExpanded","onMouseOver","ListItemText","ConcurrentOptionDialog","setCount","InputLabel","Input","step","MoreActions","uploadManager","deleteTask","setUseAvgSpeed","setFilter","sorter","setSorter","cleanFinished","retryFailed","concurrentDialog","setConcurrentDialog","RefreshStorage","listItems","tooltip","divider","Replay","ClearAll","Menu","enterNextDelay","dense","val","Transition","forwardRef","Slide","direction","rootOverwrite","flex","popup","inset","paddingZero","dialogContent","maxHeight","virtualList","expandIcon","shortest","expandIconExpanded","sorters","reverse","filters","ongoing","TaskList","taskList","setUploaders","setAnchorEl","refreshList","setRefreshList","reason","Fade","currentList","Nothing","increaseViewportBy","itemContent","classnames","TransitionComponent","disableEnforceFocus","hideBackdrop","disableBackdropClick","disableScrollLock","Accordion","AppBar","Toolbar","disableGutters","MoreHoriz","AccordionDetails","createStyles","backdrop","DropFileBackground","totalProgressCollector","lastProgressStart","Uploader","setTaskListOpen","dropBgOpen","setDropBgOpen","processed","totalProgress","setTotalProgress","fileSelectCounter","openFileSelector","folderSelectCounter","openFolderSelector","enableUploader","taskAdded","original","onToast","setPolicy","unfinished","setInterval","msDocPreviewSuffix","subtitleSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","epubSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","zip","excute","android","python","epub","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","setWopiExts","exts","setSubtitle","setShareInfo","selectLanguage","changeLanguage","dayjs","extend","utc","timezone","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","preferTimeZone","refreshTimeZone","formatLocalTime","time","tz","toDate","formatParams","year","month","day","hour","minute","second","validateTimeZone","format","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","MenuBook","fileSuffix","getColor","getColorValue","iconClassName","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","AuthRoute","rest","render","to","NoAuthRoute","emptyContainer","emptyInfoBig","Notice","primaryColor","secondaryColor","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaInputContainer","required","autoComplete","captchaImageContainer","captchaImage","alt","ReCAPTCHA","handleExpired","bind","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","onExpired","onErrored","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","removeChild","elem","childProps","defaultProps","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","captchaContainer","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","ret","ticket","randstr","isValidate","submit","cursor","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","normal","captchaParamsRef","CaptchaRender","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","ApplyThemes","SetSessionStatus","afterLogin","Paper","login","userName","Password","EmailOutlined","VpnKeyOutlined","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","RouterLink","Fingerprint","VpnKey","highlight","FileName","highlightClassName","searchWords","autoEscape","textToHighlight","SmallIconCompoment","nextState","nextContext","isSelectedCurrent","isSelectedNext","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","boxSizing","FileIconCompoment","showPicIcon","thumb","picPreview","noDrag","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","userDrag","active","isActive","isempty","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","renderMenuItems","visibleCount","condition","allowRemoteDownload","menuOpen","anchorReference","anchorPosition","Unarchive","Archive","InfoOutlined","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","hover","userSelect","FolderDropWarpper","isListView","useDrop","accept","drop","collect","isOver","canDrop","useDragScrolling","isScrolling","goDown","isScrollEnd","offsetHeight","scrollHeight","requestAnimationFrame","goUp","throttleOnDragOver","throttle","isMouseOnTop","isMouseOnDown","addEventListenerForWindow","removeEventListenerForWindow","removeEventListener","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","StartDownload","SelectFile","handleIconClick","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","rootTable","typeHeader","errorBox","errorMsg","flexFix","upButton","clickAway","rootShare","visuallyHidden","clip","gridContainer","gridTemplateColumns","gridItem","DELETE_FILE","SELECT_ALL_SHOWED","SELECT_ALL","DESELECT_ALL","Explorer","navigatorErrorMsg","navigatorError","OpenRemoveDialog","ChangeContextMenu","SelectAll","page_size","page_number","startIndex","usePagination","showView","listView","TableHead","TableSortLabel","TableBody","normalView","data-clickAway","dataset","clickaway","allowChanges","expandMore","textTransform","PathButton","inputRef","more","last","DropDownItem","setActiveStatus","DropDown","clearTimeout","shouldClose","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","navigateToPath","max_size","file_type","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","drawerDesktopOpen","overflowInitLock","hasOverflowingChildren","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","ListLoading","drawerContainer","placeContent","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setTarget","setDetails","propsItem","d","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","query_date","Hidden","Clear","Drawer","gutterBottom","CustomPaginationItem","PaginationItem","PaginationFooter","SetPagination","Pagination","renderItem","FileManager","DndProvider","HTML5Backend","DragLayer","SelectMenu","showIcon","Artplayer","externalPlayers","actionButton","VideoViewer","art","setArt","setFiles","subtitles","setSubtitles","playlist","setPlaylist","subtitleOpen","setSubtitleOpen","subtitleSelected","setSubtitleSelected","playlistOpen","setPlaylistOpen","externalPlayerOpen","setExternalPlayerOpen","autoHeight","pictureInPictureEnabled","playing","pip","pause","newURL","subtitle","switchUrl","switchSubtitle","switch","fileNameMatch","flip","setting","playbackRate","aspectRatio","hotkey","fullscreen","fullscreenWeb","whitelist","moreVideoAttr","playsInline","lang","getInstance","startIcon","Subtitles","PlaylistPlay","Launch","sub","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","cardAction","SearchResult","tGlobal","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","sm","Select","Card","CardHeader","subheader","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","md","CardActions","disableActionSpacing","VisibilityOff","MyShare","scroll","SelectFileDialog","filesCopy","row","iconContainer","borderInlineStart","contentSide","iconMultiple","subFile","subFileName","subFileIcon","subFileSize","subFilePercent","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","context","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","subFileList","processStyle","completedLength","subFileCell","newIndex","newFiles","gid","indexes","deleteFile","HighlightOff","Table","TableRow","CardContent","LinearProgress","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","node","FinishedCard","getTaskError","task_status","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","previousDownloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","openResave","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","ignore","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","iframe","DocViewer","setSession","setFile","shareOpened","modalLoading","CloseAllModals","OpenShareDialog","access_token","replaceAll","resolvedLanguage","handlePostMessage","origin","MessageId","frameholder","getElementById","office_frame","access_token_ttl","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","qrcode","AppQRCode","clearInterval","Box","PhoneSkeleton","xmlns","enableBackground","viewBox","fill","strokeMiterlimit","strokeWidth","cx","cy","phoneContainer","marginX","perspective","transformStyle","perspectiveOrigin","phoneFrame","phoneImage","bold","frameContainer","grid","ol","paddingInlineStart","li","AppPromotion","effect","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","appPromotion","app_promotion","account","ID","CreatedAt","Name","Root","Readonly","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","TableContainer","align","accountCopy","toggleAccountReadonly","deleteAccount","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","List","fingerprint","ListItemSecondaryAction","credentialCreationOptions","excludeCredentials","attestationObject","add","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","uid","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","themes","changeView","loadSetting","useGravatar","changeNick","uploadAvatar","formData","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","newMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","Schedule","Translate","webdav","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","MusicPlayerComponent","currentIndex","currentTime","progressText","looptype","myAudioRef","newItem","handleItemClick","backgroundPlay","bindEvents","ele","readyPlay","loopnext","timeUpdate","unbindEvents","play","formatTime","isNaN","playOrPaues","isPlay","changeLoopType","lt","handleProgress","idx","Slider","slider_root","justify","Repeat","RepeatOne","Shuffle","MusicPlayer","ReactReader","m","EpubViewer","currentLocation","setLocation","fileUrl","locationChanged","epubcifi","epubInitOptions","openAs","showToc","PDFViewer","App","themeConfig","prefersDarkMode","prefer","createMuiTheme","overrides","MuiButton","MuiTab","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","initUserConfig","store","defaultTheme","wopi_exts","preferListMethod","share_view_method","home_view_method","music","resave","doNavigate","currntPath","defaultStatus","rawStore","configCache","InitSiteConfig","siteICPId","QQLogin","black","contrastText","hint","bgSelected","emptyIcon","ErrorBoundary","hasError","errorInfo","componentStack","Admin","hash","contentType","ready","unregister","checkValidServiceWorker","alert","waiting","postMessage","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","thunk","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","emptyInfoSmall","PathSelectorCompoment","selectedTarget","toBeLoad","back","api","unshift","displayNames","handleSelect","selector","primaryTypographyProps","showActionIcon","buttonIcon","iconWhite","actionIcon"],"mappings":"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","file":"static/js/main.37be0b97.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { changeSubTitle } from \"../redux/viewUpdate/action\";\nimport pathHelper from \"../utils/page\";\n\nexport default function UseFileSubTitle(query, math, location) {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState(\"\");\n    const [path, setPath] = useState(\"\");\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            setPath(query.get(\"p\"));\n            SetSubTitle(path[path.length - 1]);\n            setTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n            setTitle(query.get(\"name\"));\n            setPath(query.get(\"share_path\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    return { title, path };\n}\n","import React from \"react\";\nimport { Code } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10,\n        },\n    },\n}));\n\nconst MyLoader = (props) => (\n    <Code\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction TextLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default TextLoading;\n","/* eslint-disable no-case-declarations */\nimport { AnyAction } from \"redux\";\nimport { CloudreveFile } from \"../../types\";\nimport { Policy } from \"../../component/Uploader/core/types\";\n\ninterface SelectProps {\n    isMultiple: boolean;\n    withFolder: boolean;\n    withFile: boolean;\n    withSourceEnabled: boolean;\n}\n\nexport interface ExplorerState {\n    dndSignal: boolean;\n    dndTarget: any;\n    dndSource: any;\n    fileList: CloudreveFile[];\n    dirList: CloudreveFile[];\n    selected: CloudreveFile[];\n    selectProps: SelectProps;\n    lastSelect: {\n        file: CloudreveFile;\n        index: number;\n    };\n    shiftSelectedIds: string[];\n    imgPreview: {\n        first: CloudreveFile;\n        other: [];\n    };\n    audioPreview: {\n        first: CloudreveFile;\n        other: [];\n        playingName: any;\n        paused: boolean;\n        isOpen: boolean;\n    };\n    search?: {\n        keywords: string;\n        searchPath: string;\n    };\n    fileSave: boolean;\n    sideBarOpen: boolean;\n    currentPolicy?: Policy;\n}\n\nexport const initState: ExplorerState = {\n    dndSignal: false,\n    dndTarget: null,\n    dndSource: null,\n    fileList: [],\n    dirList: [],\n    selected: [],\n    selectProps: {\n        isMultiple: false,\n        withFolder: false,\n        withFile: false,\n        withSourceEnabled: false,\n    },\n    lastSelect: {\n        file: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        index: -1,\n    },\n    shiftSelectedIds: [],\n    imgPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n    },\n    audioPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n        playingName: null,\n        paused: false,\n        isOpen: false,\n    },\n    fileSave: false,\n    sideBarOpen: false,\n};\n\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\n    const isMultiple = selected.length > 1;\n    let withFolder = false;\n    let withFile = false;\n    let withSourceEnabled = false;\n    selected.forEach((value) => {\n        if (value.type === \"dir\") {\n            withFolder = true;\n            withSourceEnabled = true;\n        } else if (value.type === \"file\") {\n            withFile = true;\n            if (value.source_enabled) {\n                withSourceEnabled = true;\n            }\n        }\n    });\n    return {\n        isMultiple,\n        withFolder,\n        withFile,\n        withSourceEnabled,\n    };\n};\n\nconst explorer = (\n    state: ExplorerState = initState,\n    action: AnyAction\n): ExplorerState => {\n    switch (action.type) {\n        case \"DRAG_AND_DROP\":\n            return Object.assign({}, state, {\n                dndSignal: !state.dndSignal,\n                dndTarget: action.target,\n                dndSource: action.source,\n            });\n        case \"SET_FILE_LIST\":\n            return Object.assign({}, state, {\n                fileList: action.list,\n            });\n        case \"SET_DIR_LIST\":\n            return Object.assign({}, state, {\n                dirList: action.list,\n            });\n        case \"ADD_SELECTED_TARGETS\":\n            const addedSelected = [...state.selected, ...action.targets];\n            return Object.assign({}, state, {\n                selected: addedSelected,\n                selectProps: checkSelectedProps(addedSelected),\n            });\n        case \"SET_SELECTED_TARGET\":\n            const newSelected = action.targets;\n            return Object.assign({}, state, {\n                selected: newSelected,\n                selectProps: checkSelectedProps(newSelected),\n            });\n        case \"RMOVE_SELECTED_TARGETS\":\n            const { fileIds } = action;\n            const filteredSelected = state.selected.filter((file) => {\n                return !fileIds.includes(file.id);\n            });\n            return Object.assign({}, state, {\n                selected: filteredSelected,\n                selectProps: checkSelectedProps(filteredSelected),\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n                search: {\n                    keywords: action.keywords,\n                    searchPath: action.path,\n                },\n            });\n        case \"SHOW_IMG_PREIVEW\":\n            return Object.assign({}, state, {\n                imgPreview: {\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"SHOW_AUDIO_PREVIEW\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_IS_OPEN\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    isOpen: action.isOpen,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_PLAYING\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    playingName: action.playingName,\n                    paused: action.paused,\n                },\n            });\n        case \"SAVE_FILE\":\n            return {\n                ...state,\n                fileSave: !state.fileSave,\n            };\n        case \"SET_LAST_SELECT\":\n            const { file, index } = action;\n            return {\n                ...state,\n                lastSelect: {\n                    file,\n                    index,\n                },\n            };\n        case \"SET_SHIFT_SELECTED_IDS\":\n            const { shiftSelectedIds } = action;\n            return {\n                ...state,\n                shiftSelectedIds,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                    withSourceEnabled: false,\n                },\n                search: undefined,\n            };\n        case \"SET_SIDE_BAR\":\n            return {\n                ...state,\n                sideBarOpen: action.open,\n            };\n        case \"SET_CURRENT_POLICY\":\n            return {\n                ...state,\n                currentPolicy: action.policy,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default explorer;\n","import axios from \"axios\";\nimport Auth from \"./Auth\";\nimport i18next from \"../i18n\";\n\nexport const baseURL = \"/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nexport const getPreviewURL = (\n    isShare: boolean,\n    shareID: any,\n    fileID: any,\n    path: any\n): string => {\n    return (\n        getBaseURL() +\n        (isShare\n            ? \"/share/preview/\" +\n              shareID +\n              (path !== \"\" ? \"?path=\" + encodeURIComponent(path) : \"\")\n            : \"/file/preview/\" + fileID)\n    );\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n});\n\nexport class AppError extends Error {\n    constructor(message: string | undefined, public code: any, error: any) {\n        super(message);\n        this.code = code;\n        if (i18next.exists(`errors.${code}`, { ns: \"common\" })) {\n            this.message = i18next.t(`errors.${code}`, {\n                ns: \"common\",\n                message,\n            });\n        } else if (i18next.exists(`errors.${code}`, { ns: \"dashboard\" })) {\n            this.message = i18next.t(`errors.${code}`, {\n                ns: \"dashboard\",\n                message,\n            });\n        } else {\n            this.message =\n                message || i18next.t(\"unknownError\", { ns: \"common\" });\n        }\n\n        this.message +=\n            error && !this.message.includes(error) ? ` (${error})` : \"\";\n        this.stack = new Error().stack;\n    }\n}\n\ninstance.interceptors.response.use(\n    function (response: any) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // Login expired\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href =\n                    \"/login?redirect=\" +\n                    encodeURIComponent(\n                        window.location.pathname + window.location.search\n                    );\n            }\n\n            // Non-admin\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/home\";\n            }\n            throw new AppError(\n                response.rawData.msg,\n                response.rawData.code,\n                response.rawData.error\n            );\n        }\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n","import React, { useEffect, useState } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction AutoHidden({ children, enable, hide = false, element = null }) {\n    const [hidden, setHidden] = useState(false);\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        const handleNavigation = (e) => {\n            const window = e.currentTarget;\n            const current = element ? element.scrollTop : window.scrollY;\n\n            if (prev > current) {\n                if (lastUpdate - current > show) {\n                    lastUpdate = current;\n                    setHidden(false);\n                }\n            } else if (prev < current) {\n                if (current - lastUpdate > show) {\n                    lastUpdate = current;\n                    setHidden(true);\n                }\n            }\n            prev = current;\n        };\n        if (enable) {\n            const target = element ? element : window;\n            target.addEventListener(\"scroll\", (e) => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable]);\n\n    return <Zoom in={!hidden && !hide}>{children}</Zoom>;\n}\n\nexport default AutoHidden;\n","import API from \"../middleware/Api\";\n\nexport async function list(\n    path: string,\n    share: any,\n    keywords: string,\n    searchPath: string\n): Promise<any> {\n    let apiURL = \"\";\n    if (share) {\n        if (keywords === \"\") {\n            apiURL = \"/share/list/\" + share.key;\n        } else {\n            apiURL = `/share/search/${share.key}/`;\n        }\n    } else {\n        if (keywords === \"\") {\n            apiURL = \"/directory\";\n        } else {\n            apiURL = \"/file/search/\";\n        }\n    }\n\n    path = keywords === \"\" ? path : keywords;\n    apiURL = apiURL + encodeURIComponent(path);\n    if (searchPath) {\n        apiURL = `${apiURL}?path=${encodeURIComponent(searchPath)}`;\n    }\n    return API.get(apiURL);\n}\n","import API from \"../middleware/Api\";\n\nexport async function getDownloadURL(file: any): Promise<any> {\n    let reqURL = \"\";\n    if (file.key) {\n        const downloadPath =\n            file.path === \"/\"\n                ? file.path + file.name\n                : file.path + \"/\" + file.name;\n        reqURL =\n            \"/share/download/\" +\n            file.key +\n            \"?path=\" +\n            encodeURIComponent(downloadPath);\n    } else {\n        reqURL = \"/file/download/\" + file.id;\n    }\n\n    return API.put(reqURL);\n}\n","import { ThunkAction } from \"redux-thunk\";\nimport { setOptionModal } from \"../viewUpdate/action\";\nimport i18next from \"../../i18n\";\n\nexport const askForOption = (\n    options: any,\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        return new Promise<void>((resolve, reject) => {\n            const dialog = {\n                open: true,\n                title: title,\n                options: options,\n            };\n            dispatch(\n                setOptionModal({\n                    ...dialog,\n                    onClose: () => {\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                        reject(i18next.t(\"fileManager.userDenied\"));\n                    },\n                    callback: (option: any) => {\n                        resolve(option);\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                    },\n                })\n            );\n        });\n    };\n};\n","const statusHelper = {\n    isHomePage(path: string) {\n        return path === \"/home\";\n    },\n    isSharePage(path: string) {\n        return path && path.startsWith(\"/s/\");\n    },\n    isAdminPage(path: string) {\n        return path && path.startsWith(\"/admin\");\n    },\n    isLoginPage(path: string) {\n        return path && path.startsWith(\"/login\");\n    },\n    isMobile() {\n        return window.innerWidth < 600;\n    },\n};\nexport default statusHelper;\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb: any) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser() {\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\n    },\n    SetUser(newUser: any) {\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    Check(): boolean {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null) {\n            return !Auth.GetUser().anonymous;\n        }\n        return false;\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        const oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key: string, value: any) {\n        let preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        preference = preference == null ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    GetPreference(key: string): any | null {\n        const preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        if (preference && preference[key] !== undefined) {\n            return preference[key];\n        }\n        return null;\n    },\n    GetPreferenceWithDefault(key: string, defaultVal: any): any {\n        return Auth.GetPreference(key) !== null\n            ? Auth.GetPreference(key)\n            : defaultVal;\n    },\n};\n\nexport default Auth;\n","import * as actions from \"./action\";\nimport * as reducers from \"./reducer\";\nimport { setPagination } from \"../viewUpdate/action\";\n\nexport default {\n    actions,\n    reducers,\n};\nexport { selectFile } from \"./action\";\nexport { openPreview } from \"./action\";\nexport { setShiftSelectedIds } from \"./action\";\nexport { setLastSelect } from \"./action\";\nexport { setSelectedTarget } from \"./action\";\nexport { addSelectedTargets } from \"./action\";\nexport { removeSelectedTargets } from \"./action\";\nexport const setNavigator = (path: any, navigatorLoading: any) => {\n    return {\n        type: \"SET_NAVIGATOR\",\n        path,\n        navigatorLoading,\n    };\n};\nexport const navigateTo = (path: any) => {\n    return (dispatch: any, getState: any) => {\n        const state = getState();\n        const navigatorLoading = path !== state.navigator.path;\n        if (navigatorLoading) {\n            dispatch(\n                setPagination({\n                    ...state.viewUpdate.pagination,\n                    page: 1,\n                })\n            );\n        }\n        dispatch(setNavigator(path, navigatorLoading));\n    };\n};\nexport const navigateUp = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const pathSplit = state.navigator.path.split(\"/\");\n        pathSplit.pop();\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\n        const navigatorLoading = newPath !== state.navigator.path;\n        if (navigatorLoading) {\n            dispatch(\n                setPagination({\n                    ...state.viewUpdate.pagination,\n                    page: 1,\n                })\n            );\n        }\n        dispatch(setNavigator(newPath, navigatorLoading));\n    };\n};\nexport const drawerToggleAction = (open) => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open,\n    };\n};\nexport const dragAndDrop = (source, target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target,\n    };\n};\nexport const changeViewMethod = (method) => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method,\n    };\n};\nexport const toggleDaylightMode = () => {\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\",\n    };\n};\n// Deprecated\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\nexport const setNavigatorLoadingStatus = (status) => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status,\n    };\n};\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg,\n    };\n};\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\n    };\n};\nexport const openCreateFileDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FILE_DIALOG\",\n    };\n};\nexport const setUserPopover = (anchor) => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const setShareUserPopover = (anchor) => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\",\n    };\n};\nexport const openResaveDialog = (key) => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key: key,\n    };\n};\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\",\n    };\n};\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\",\n    };\n};\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\",\n    };\n};\nexport const applyThemes = (theme) => {\n    return {\n        type: \"APPLY_THEME\",\n        theme: theme,\n    };\n};\nexport const setSessionStatus = (status) => {\n    return {\n        type: \"SET_SESSION_STATUS\",\n        status: status,\n    };\n};\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\",\n    };\n};\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\n    };\n};\nexport const openTorrentDownloadDialog = (selected) => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\n        selected:selected,\n    };\n};\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\",\n    };\n};\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\",\n    };\n};\nexport const openRelocateDialog = () => {\n    return {\n        type: \"OPEN_RELOCATE_DIALOG\",\n    };\n};\nexport const openGetSourceDialog = (source) => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\",\n        source,\n    };\n};\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\",\n    };\n};\n// Deprecated\nexport const openLoadingDialog = (text) => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text,\n    };\n};\n// Deprecated\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\",\n    };\n};\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color,\n    };\n};\nexport const setModalsLoading = (status) => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status,\n    };\n};\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\",\n    };\n};\nexport const searchMyFile = (keywords, path) => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords,\n        path: path,\n    };\n};\nexport const showImgPreivew = (first) => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first,\n    };\n};\nexport const showAudioPreview = (first) => {\n    return {\n        type: \"SHOW_AUDIO_PREVIEW\",\n        first: first,\n    };\n};\nexport const audioPreviewSetIsOpen = (isOpen) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_IS_OPEN\",\n        isOpen,\n    };\n};\nexport const audioPreviewSetPlaying = (playingName, paused) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_PLAYING\",\n        playingName, //the playing content name\n        paused,\n    };\n};\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\",\n    };\n};\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\",\n    };\n};\n\nexport const setSiteConfig = (config) => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config,\n    };\n};\n\nexport const openDirectoryDownloadDialog = (downloading, log, done) => {\n    return {\n        type: \"OPEN_DIRECTORY_DOWNLOAD_DIALOG\",\n        downloading,\n        log,\n        done,\n    };\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport Backend from \"i18next-http-backend\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport ChainedBackend, { ChainedBackendOptions } from \"i18next-chained-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport LocalStorageBackend from \"i18next-localstorage-backend\";\n\ndeclare let ASSETS_VERSION: string;\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\ni18n.use(ChainedBackend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: \"en-US\",\n        debug: true,\n        ns: [\"common\", \"application\"],\n        load: \"currentOnly\",\n        defaultNS: \"application\",\n        interpolation: {\n            escapeValue: false,\n        },\n        backend: {\n            backends:\n                process.env.NODE_ENV === \"development\"\n                    ? [Backend]\n                    : [LocalStorageBackend, Backend],\n            backendOptions: [\n                {\n                    expirationTime: 7 * 24 * 60 * 60 * 1000, // 7 days\n                },\n                {\n                    queryStringParams: { v: ASSETS_VERSION },\n                    loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n                },\n            ],\n        },\n    });\n\ni18n.on(\"languageChanged\", (lng) => {\n    document.documentElement.setAttribute(\"lang\", lng);\n});\n\nexport const languages = [\n    {\n        code: \"en-US\",\n        displayName: \"English\",\n    },\n    {\n        code: \"zh-CN\",\n        displayName: \"简体中文\",\n    },\n    {\n        code: \"zh-TW\",\n        displayName: \"繁體中文\",\n    },\n];\n\nexport default i18n;\n","import Base from \"../uploader/base\";\nimport { ProcessingTaskDuplicatedError } from \"../errors\";\n\nexport interface QueueContent {\n    uploader: Base;\n    resolve: () => void;\n    reject: (err?: any) => void;\n}\n\nexport class Pool {\n    queue: Array<QueueContent> = [];\n    processing: Array<QueueContent> = [];\n\n    constructor(public limit: number) {}\n\n    enqueue(uploader: Base) {\n        return new Promise<void>((resolve, reject) => {\n            this.queue.push({\n                uploader,\n                resolve,\n                reject,\n            });\n            this.check();\n        });\n    }\n\n    release(item: QueueContent) {\n        this.processing = this.processing.filter((v) => v !== item);\n        this.check();\n    }\n\n    run(item: QueueContent) {\n        this.queue = this.queue.filter((v) => v !== item);\n        if (\n            this.processing.findIndex(\n                (v) =>\n                    v.uploader.task.dst == item.uploader.task.dst &&\n                    v.uploader.task.file.name == item.uploader.task.name\n            ) > -1\n        ) {\n            // 找到重名任务\n            item.reject(new ProcessingTaskDuplicatedError());\n            this.release(item);\n            return;\n        }\n\n        this.processing.push(item);\n        item.uploader.run().then(\n            () => {\n                item.resolve();\n                this.release(item);\n            },\n            (err) => {\n                item.reject(err);\n                this.release(item);\n            }\n        );\n    }\n\n    check() {\n        const processingNum = this.processing.length;\n        const availableNum = Math.max(0, this.limit - processingNum);\n        this.queue.slice(0, availableNum).forEach((item) => {\n            this.run(item);\n        });\n    }\n}\n","import { Policy } from \"../types\";\nimport { FileValidateError } from \"../errors\";\n\ninterface Validator {\n    (file: File, policy: Policy): void;\n}\n\n// validators\nconst checkers: Array<Validator> = [\n    function checkExt(file: File, policy: Policy) {\n        if (\n            policy.allowedSuffix != undefined &&\n            policy.allowedSuffix.length > 0\n        ) {\n            const ext = file?.name.split(\".\").pop();\n            if (ext === null || !ext || !policy.allowedSuffix.includes(ext))\n                throw new FileValidateError(\n                    \"File suffix not allowed in policy.\",\n                    \"suffix\",\n                    policy\n                );\n        }\n    },\n\n    function checkSize(file: File, policy: Policy) {\n        if (policy.maxSize > 0) {\n            if (file.size > policy.maxSize) {\n                throw new FileValidateError(\n                    \"File size exceeds maximum limit.\",\n                    \"size\",\n                    policy\n                );\n            }\n        }\n    },\n];\n\n/* 将每个 Validator 执行\n   失败返回 Error\n */\nexport function validate(file: File, policy: Policy) {\n    checkers.forEach((c) => c(file, policy));\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { Response } from \"../types\";\nimport {\n    HTTPError,\n    RequestCanceledError,\n    TransformResponseError,\n} from \"../errors\";\n\nexport const { CancelToken } = axios;\nexport { CancelTokenSource } from \"axios\";\n\nconst baseConfig = {\n    transformResponse: [\n        (response: any) => {\n            try {\n                return JSON.parse(response);\n            } catch (e) {\n                throw new TransformResponseError(response, e);\n            }\n        },\n    ],\n};\n\nconst cdBackendConfig = {\n    ...baseConfig,\n    baseURL: \"/api/v3\",\n    withCredentials: true,\n};\n\nexport function request<T = any>(url: string, config?: AxiosRequestConfig) {\n    return axios\n        .request<T>({ ...baseConfig, ...config, url })\n        .catch((err) => {\n            if (axios.isCancel(err)) {\n                throw new RequestCanceledError();\n            }\n\n            if (err instanceof TransformResponseError) {\n                throw err;\n            }\n\n            throw new HTTPError(err, url);\n        });\n}\n\nexport function requestAPI<T = any>(url: string, config?: AxiosRequestConfig) {\n    return request<Response<T>>(url, { ...cdBackendConfig, ...config });\n}\n","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\nimport { toggleDaylightMode } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles(() => ({\n    icon: {\n        color: \"rgb(255, 255, 255)\",\n        opacity: \"0.54\",\n    },\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const { t } = useTranslation();\n    const ThemeType = useSelector(\n        (state) => state.siteConfig.theme.palette.type\n    );\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\n        dispatch,\n    ]);\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n    const toggleMode = () => {\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\n        ToggleThemeMode();\n    };\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={\n                isDayLight ? t(\"navbar.toDarkMode\") : t(\"navbar.toLightMode\")\n            }\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position,\n                })}\n                onClick={toggleMode}\n                color=\"inherit\"\n            >\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","import React, { useCallback, useState } from \"react\";\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"../../../middleware/Auth\";\nimport { changeViewMethod, setShareUserPopover } from \"../../../redux/explorer\";\nimport { changeSortMethod } from \"../../../redux/explorer/action\";\nimport { FormatPageBreak } from \"mdi-material-ui\";\nimport pathHelper from \"../../../utils/page\";\nimport { changePageSize } from \"../../../redux/viewUpdate/action\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\",\n    },\n}));\n\nconst sortOptions = [\n    \"A-Z\",\n    \"Z-A\",\n    \"oldestUploaded\",\n    \"newestUploaded\",\n    \"oldestModified\",\n    \"newestModified\",\n    \"smallest\",\n    \"largest\",\n];\n\nconst paginationOption = [\"50\", \"100\", \"200\", \"500\", \"1000\"];\n\nexport default function SubActions({ isSmall, inherit }) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const { t: vasT } = useTranslation(\"application\", { keyPrefix: \"vas\" });\n    const dispatch = useDispatch();\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const share = useSelector((state) => state.viewUpdate.shareInfo);\n    const pageSize = useSelector((state) => state.viewUpdate.pagination.size);\n    const OpenLoadingDialog = useCallback(\n        (method) => dispatch(changeViewMethod(method)),\n        [dispatch]\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(changeSortMethod(method)),\n        [dispatch]\n    );\n    const SetShareUserPopover = useCallback(\n        (e) => dispatch(setShareUserPopover(e)),\n        [dispatch]\n    );\n    const ChangePageSize = useCallback((e) => dispatch(changePageSize(e)), [\n        dispatch,\n    ]);\n    const [anchorSort, setAnchorSort] = useState(null);\n    const [anchorPagination, setAnchorPagination] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const showSortOptions = (e) => {\n        setAnchorSort(e.currentTarget);\n    };\n    const showPaginationOptions = (e) => {\n        setAnchorPagination(e.currentTarget);\n    };\n    const handleMenuItemClick = (e, index) => {\n        setSelectedIndex(index);\n        const optionsTable = {\n            0: \"namePos\",\n            1: \"nameRev\",\n            2: \"timePos\",\n            3: \"timeRev\",\n            4: \"modifyTimePos\",\n            5: \"modifyTimeRev\",\n            6: \"sizePos\",\n            7: \"sizeRes\",\n        };\n        ChangeSortMethod(optionsTable[index]);\n        setAnchorSort(null);\n    };\n    const handlePaginationChange = (s) => {\n        ChangePageSize(s);\n        setAnchorPagination(null);\n    };\n\n    const toggleViewMethod = () => {\n        const newMethod =\n            viewMethod === \"icon\"\n                ? \"list\"\n                : viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        OpenLoadingDialog(newMethod);\n    };\n    const isMobile = pathHelper.isMobile();\n\n    const classes = useStyles();\n    return (\n        <>\n            {viewMethod === \"icon\" && (\n                <IconButton\n                    title={t(\"listView\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            {viewMethod === \"list\" && (\n                <IconButton\n                    title={t(\"gridViewSmall\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {viewMethod === \"smallIcon\" && (\n                <IconButton\n                    title={t(\"gridViewLarge\")}\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {!isMobile && (\n                <IconButton\n                    title={t(\"paginationSize\")}\n                    className={classes.sideButton}\n                    onClick={showPaginationOptions}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <FormatPageBreak fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorPagination}\n                open={Boolean(anchorPagination)}\n                onClose={() => setAnchorPagination(null)}\n            >\n                {paginationOption.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={option === pageSize.toString()}\n                        onClick={() => handlePaginationChange(parseInt(option))}\n                    >\n                        {t(\"paginationOption\", { option })}\n                    </MenuItem>\n                ))}\n                <MenuItem\n                    selected={pageSize === -1}\n                    onClick={() => handlePaginationChange(-1)}\n                >\n                    {t(\"noPagination\")}\n                </MenuItem>\n            </Menu>\n\n            <IconButton\n                title={t(\"sortMethod\")}\n                className={classes.sideButton}\n                onClick={showSortOptions}\n                color={inherit ? \"inherit\" : \"default\"}\n            >\n                <TextTotateVerticalIcon\n                    fontSize={isSmall ? \"small\" : \"default\"}\n                />\n            </IconButton>\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorSort}\n                open={Boolean(anchorSort)}\n                onClose={() => setAnchorSort(null)}\n            >\n                {sortOptions.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {t(\"sortMethods.\" + option)}\n                    </MenuItem>\n                ))}\n            </Menu>\n            {share && (\n                <IconButton\n                    title={t(\"shareCreateBy\", { nick: share.creator.nick })}\n                    className={classes.sideButton}\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\n                    style={{ padding: 5 }}\n                >\n                    <Avatar\n                        style={{ height: 23, width: 23 }}\n                        src={\"/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\n                    />\n                </IconButton>\n            )}\n        </>\n    );\n}\n","import React, { useCallback, useRef } from \"react\";\nimport {\n    Button,\n    Checkbox,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n    },\n    flexCenter: {\n        alignItems: \"center\",\n    },\n    noFlex: {\n        display: \"block\",\n    },\n    scoreCalc: {\n        marginTop: 10,\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: \"auto\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const lastSubmit = useRef(null);\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false,\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        preview: true,\n    });\n\n    const handleChange = (prop) => (event) => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const randomPassword = () => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random().toString(36).substr(2).slice(2, 8),\n            showPassword: true,\n        });\n    };\n\n    const handleExpand = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = (prop) => () => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\",\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(() => {\n            setShareURL(\"\");\n        }, 500);\n    };\n\n    const senLink = () => {\n        if (navigator.share) {\n            let text = t(\"modals.shareLinkShareContent\", {\n                name: props.selected[0].name,\n                link: shareURL,\n            });\n            if (lastSubmit.current && lastSubmit.current.password) {\n                text += t(\"modals.shareLinkPasswordInfo\", {\n                    password: lastSubmit.current.password,\n                });\n            }\n            navigator.share({ text });\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(shareURL);\n            ToggleSnackbar(\"top\", \"right\", t(\"modals.linkCopied\"), \"info\");\n        }\n    };\n\n    const submitShare = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire ? values.downloads : -1,\n            expire: values.expires,\n            preview: shareOption.preview,\n        };\n        lastSubmit.current = submitFormBody;\n\n        API.post(\"/share\", submitFormBody)\n            .then((response) => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false,\n                });\n                setShareOption({\n                    password: false,\n                    expire: false,\n                });\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = (event) => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.createShareLink\")}\n            </DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\n                                            \"modals.usePasswordProtection\"\n                                        )}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        {t(\"modals.sharePassword\")}\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip\n                                                    title={t(\n                                                        \"modals.randomlyGenerate\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    <ToggleIcon\n                                                        on={values.showPassword}\n                                                        onIcon={<Visibility />}\n                                                        offIcon={\n                                                            <VisibilityOff />\n                                                        }\n                                                    />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\n                                            \"modals.expireAutomatically\"\n                                        )}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.downloads}\n                                        onChange={handleChange(\"downloads\")}\n                                    >\n                                        {[1, 2, 3, 4, 5, 20, 50, 100].map(\n                                            (v) => (\n                                                <MenuItem value={v} key={v}>\n                                                    {t(\n                                                        \"modals.downloadLimitOptions\",\n                                                        { num: v }\n                                                    )}\n                                                </MenuItem>\n                                            )\n                                        )}\n                                    </Select>\n                                </FormControl>\n                                <Typography>{t(\"modals.or\")}</Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.expires}\n                                        onChange={handleChange(\"expires\")}\n                                    >\n                                        <MenuItem value={300}>\n                                            {t(\"modals.5minutes\")}\n                                        </MenuItem>\n                                        <MenuItem value={3600}>\n                                            {t(\"modals.1hour\")}\n                                        </MenuItem>\n                                        <MenuItem value={24 * 3600}>\n                                            {t(\"modals.1day\")}\n                                        </MenuItem>\n                                        <MenuItem value={7 * 24 * 3600}>\n                                            {t(\"modals.7days\")}\n                                        </MenuItem>\n                                        <MenuItem value={30 * 24 * 3600}>\n                                            {t(\"modals.30days\")}\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>\n                                    {t(\"modals.downloadSuffix\")}\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={t(\"modals.allowPreview\")}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    {t(\"modals.allowPreviewDescription\")}\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label={t(\"modals.shareLink\")}\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                {shareURL !== \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button onClick={senLink} color=\"secondary\">\n                            {t(\"modals.sendLink\")}\n                        </Button>\n                    </div>\n                )}\n                <Button onClick={onClose}>\n                    {t(\"close\", { ns: \"common\" })}\n                </Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            {t(\"modals.createShareLink\")}\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        minWidth: 250,\n    },\n}));\n\nexport default function OptionSelector() {\n    const { t } = useTranslation(\"common\");\n    const classes = useStyles();\n    const option = useSelector((state) => state.viewUpdate.modals.option);\n\n    return (\n        <Dialog\n            open={option && option.open}\n            onClose={option && option.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {option && option.title}\n            </DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    {option &&\n                        option.options.map((o) => (\n                            <ListItem\n                                key={o.key}\n                                onClick={() => option && option.callback(o)}\n                                button\n                            >\n                                <ListItemText\n                                    primary={o.name}\n                                    secondary={o.description}\n                                />\n                            </ListItem>\n                        ))}\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={option && option.onClose}>\n                    {t(\"cancel\")}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status === \"success\",\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status === \"success\" ? (\n                                <CheckIcon />\n                            ) : (\n                                <SaveIcon />\n                            )}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\" && (\n                        <CircularProgress\n                            size={68}\n                            className={classes.fabProgress}\n                        />\n                    )}\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    loadingContainer: {\n        display: \"flex\",\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20,\n    },\n});\n\nexport default function LoadingDialog() {\n    const classes = useStyles();\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>{text}</div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport {\n    refreshFileList,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CopyDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"fileManager.copyTo\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <Trans\n                            i18nKey={\"fileManager.copyToDst\"}\n                            values={{\n                                dst: selectedPathName,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    FormControlLabel,\n    Checkbox,\n} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useTranslation } from \"react-i18next\"; \nimport { useInterval, usePrevious, useGetState } from \"ahooks\";\nimport { cancelDirectoryDownload } from \"../../redux/explorer/action\";\nimport Auth from \"../../middleware/Auth\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default,\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function DirectoryDownloadDialog(props) {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n\n    const logRef = useRef();\n    const [autoScroll, setAutoScroll] = useState(\n        Auth.GetPreferenceWithDefault(\"autoScroll\", true)\n    );\n    const previousLog = usePrevious(props.log, (prev, next) => true);\n    const [timer, setTimer] = useState(-1);\n\n    useInterval(() => {\n        if (autoScroll && logRef.current && previousLog !== props.log) {\n            logRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n        }\n    }, timer);\n\n    useEffect(() => {\n        if (props.done) {\n            setTimer(-1);\n        } else if (props.open) {\n            setTimer(1000);\n        }\n    }, [props.done, props.open]);\n\n    return (\n        <Dialog\n            open={props.open}\n            // open\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.directoryDownloadTitle\")}\n            </DialogTitle>\n\n            <DialogContent className={classes.contentFix}>\n                <TextField\n                    value={props.log}\n                    ref={logRef}\n                    multiline\n                    fullWidth\n                    id=\"standard-basic\"\n                />\n            </DialogContent>\n            <DialogActions>\n                <FormControlLabel\n                    control={<Checkbox />}\n                    checked={autoScroll}\n                    onChange={() =>\n                        setAutoScroll((previous) => {\n                            Auth.SetPreference(\"autoScroll\", !previous);\n                            return !previous;\n                        })\n                    }\n                    label={t(\"modals.directoryDownloadAutoscroll\")}\n                />\n                <Button\n                    onClick={\n                        props.done ? props.onClose : cancelDirectoryDownload\n                    }\n                >\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={!props.done}\n                        onClick={props.onClose}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {!props.done && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\nimport { submitDecompressTask } from \"../../redux/explorer/action\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function DecompressDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const SubmitDecompressTask = useCallback(\n        (path) => dispatch(submitDecompressTask(path)),\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        SubmitDecompressTask(selectedPath)\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\"\n                );\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.decompressTo\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <Trans\n                            i18nKey=\"modals.decompressToDst\"\n                            values={{\n                                name: selectedPathName,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\nimport { submitCompressTask } from \"../../redux/explorer/action\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CompressDialog(props) {\n    const { t } = useTranslation();\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const SubmitCompressTask = useCallback(\n        (name, path) => dispatch(submitCompressTask(name, path)),\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        SubmitCompressTask(fileName, selectedPath)\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\"\n                );\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.saveToTitle\")}\n            </DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField\n                            onChange={(e) => setFileName(e.target.value)}\n                            value={fileName}\n                            fullWidth\n                            autoFocus\n                            id=\"standard-basic\"\n                            label={t(\"modals.zipFileName\")}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={\n                            selectedPath === \"\" ||\n                            fileName === \"\" ||\n                            props.modalsLoading\n                        }\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    makeStyles, TextField\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API, { AppError } from \"../../middleware/Api\";\nimport {\n    refreshFileList,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { FolderOpenOutlined } from \"@material-ui/icons\";\nimport { pathBack } from \"../../utils\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    formGroup: {\n        display: \"flex\",\n        marginBottom: theme.spacing(3),\n    },\n    forumInput: {\n        flexGrow: 1,\n    }\n}));\n\nexport default function RemoteDownload(props) {\n    const { t } = useTranslation();\n    const [selectPathOpen,setSelectPathOpen] = useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const [downloadTo, setDownloadTo] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    useEffect(()=>{\n        if (props.open){\n            setDownloadTo(props.presentPath)\n        }\n    },[props.open])\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setDownloadToPath = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const selectPath = () => {\n        setDownloadTo(selectedPath === \"//\" ? \"/\" : selectedPath);\n        setSelectPathOpen(false);\n    };\n\n    const submitTorrentDownload = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        API.post(\"/aria2/torrent/\" + props.torrent.id, {\n            dst:\n                downloadTo === \"//\"\n                    ? \"/\"\n                    : downloadTo,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"modals.taskCreated\"),\n                    \"success\"\n                );\n                props.onClose();\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                props.setModalsLoading(false);\n            });\n    };\n\n    const submitDownload = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        API.post(\"/aria2/url\", {\n            url: url.split(\"\\n\"),\n            dst:\n                downloadTo === \"//\"\n                    ? \"/\"\n                    : downloadTo,\n        })\n            .then((response) => {\n                const failed = response.data\n                    .filter((r) => r.code !== 0)\n                    .map((r) => new AppError(r.msg, r.code, r.error).message);\n                if (failed.length > 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"modals.taskCreateFailed\", {\n                            failed: failed.length,\n                            details: failed.join(\",\"),\n                        }),\n                        \"warning\"\n                    );\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"modals.taskCreated\"),\n                        \"success\"\n                    );\n                }\n\n                props.onClose();\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                props.setModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.newRemoteDownloadTitle\")}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <div className={classes.formGroup}>\n                        <div className={classes.forumInput}>\n                            <TextField\n                                variant={\"outlined\"}\n                                label={t(\"modals.remoteDownloadURL\")}\n                                autoFocus\n                                fullWidth\n                                disabled={props.torrent}\n                                multiline\n                                value={props.torrent?props.torrent.name:url}\n                                onChange={(e) => setUrl(e.target.value)}\n                                placeholder={t(\n                                    \"modals.remoteDownloadURLDescription\"\n                                )}\n                                InputProps={{\n                                    startAdornment: !isMobile&&(\n                                        <InputAdornment position=\"start\">\n                                            <LinkIcon />\n                                        </InputAdornment>\n                                    ),\n\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.forumInput}>\n                            <TextField\n                                variant={\"outlined\"}\n                                fullWidth\n                                value={downloadTo}\n                                onChange={(e) => setDownloadTo(e.target.value)}\n                                className={classes.input}\n                                label={t(\"modals.remoteDownloadDst\")}\n                                InputProps={{\n                                    startAdornment: !isMobile&&(\n                                        <InputAdornment position=\"start\">\n                                            <FolderOpenOutlined />\n                                        </InputAdornment>\n                                    ),\n                                    endAdornment:(\n                                        <InputAdornment position=\"end\">\n                                            <Button\n                                                className={classes.button}\n                                                color=\"primary\"\n                                                onClick={() => setSelectPathOpen(true)}\n                                            >\n                                                {t(\"navbar.addTagDialog.selectFolder\")}\n                                            </Button>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                            <br />\n                        </div>\n                    </div>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={props.torrent?submitTorrentDownload:submitDownload}\n                        color=\"primary\"\n                        disabled={(url === \"\" && props.torrent===null) || downloadTo===\"\" || props.modalsLoading}\n                    >\n                        {t(\"modals.createTask\")}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n\n            <Dialog\n                open={selectPathOpen}\n                onClose={() => setSelectPathOpen(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"modals.remoteDownloadDst\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath={pathBack(props.presentPath)}\n                    selected={[]}\n                    onSelect={setDownloadToPath}\n                />\n\n                {selectedPathName !== \"\" && (\n                    <DialogContent className={classes.contentFix}>\n                        <DialogContentText>\n                            <Trans\n                                i18nKey=\"modals.downloadTo\"\n                                values={{\n                                    name: selectedPathName,\n                                }}\n                                components={[<strong key={0} />]}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                )}\n                <DialogActions>\n                    <Button onClick={() => setSelectPathOpen(false)}>\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            </>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    FormControl,\n    makeStyles,\n    Tooltip,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Delete(props) {\n    const { t } = useTranslation();\n    const theme = useTheme();\n    const user = Auth.GetUser();\n    const [force, setForce] = useState(false);\n    const [unlink, setUnlink] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitRemove = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs,\n                force,\n                unlink,\n            },\n        })\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    props.onClose();\n                    setTimeout(props.refreshFileList, 500);\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                props.setModalsLoading(false);\n                props.refreshStorage();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"modals.deleteTitle\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <DialogContentText>\n                    {props.selected.length === 1 && (\n                        <Trans\n                            i18nKey=\"modals.deleteOneDescription\"\n                            values={{\n                                name: props.selected[0].name,\n                            }}\n                            components={[<strong key={0} />]}\n                        />\n                    )}\n                    {props.selected.length > 1 &&\n                        t(\"modals.deleteMultipleDescription\", {\n                            num: props.selected.length,\n                        })}\n                </DialogContentText>\n                {user.group.advanceDelete && (\n                    <FormControl component=\"fieldset\" className={classes.form}>\n                        <FormLabel component=\"legend\">\n                            {t(\"modals.advanceOptions\")}\n                        </FormLabel>\n                        <FormGroup>\n                            <Tooltip title={t(\"modals.forceDeleteDes\")}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={force}\n                                            onChange={(e) =>\n                                                setForce(e.target.checked)\n                                            }\n                                        />\n                                    }\n                                    label={t(\"modals.forceDelete\")}\n                                />\n                            </Tooltip>\n                            <Tooltip title={t(\"modals.unlinkOnlyDes\")}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={unlink}\n                                            onChange={(e) =>\n                                                setUnlink(e.target.checked)\n                                            }\n                                        />\n                                    }\n                                    label={t(\"modals.unlinkOnly\")}\n                                />\n                            </Tooltip>\n                        </FormGroup>\n                    </FormControl>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitRemove}\n                        color=\"primary\"\n                        disabled={props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PathSelector from \"./PathSelector\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    withStyles,\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport DirectoryDownloadDialog from \"../Modals/DirectoryDownload\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\nimport {\n    closeAllModals,\n    openLoadingDialog,\n    refreshFileList,\n    refreshStorage,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport OptionSelector from \"../Modals/OptionSelector\";\nimport { getDownloadURL } from \"../../services/file\";\nimport { Trans, withTranslation } from \"react-i18next\";\nimport RemoteDownload from \"../Modals/RemoteDownload\";\nimport Delete from \"../Modals/Delete\";\n\nconst styles = (theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newFileName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        purchaseCallback: null,\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    newNameSuffix = \"\";\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            const name = nextProps.selected[0].name;\n            this.setState({\n                newName: name,\n            });\n            return;\n        }\n    };\n\n    scoreHandler = (callback) => {\n        callback();\n    };\n\n    Download = () => {\n        getDownloadURL(this.props.selected[0])\n            .then((response) => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                ? \"/\"\n                : this.state.selectedPath,\n        })\n            .then(() => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n                this.DragSelectedPath = \"\";\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n                this.DragSelectedPath = \"\";\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(this.props.t(\"modals.processing\"));\n            this.submitMove();\n        }\n    };\n\n    submitRename = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const newName = this.state.newName;\n\n        const src = {\n            dirs: [],\n            items: [],\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedObjectName\"),\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedFolderName\"),\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitCreateNewFile = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFileName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.duplicatedFolderName\"),\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/file/create\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFileName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newFileName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            shareUrl: \"\",\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    copySource = () => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(this.props.modalsStatus.getSource);\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"modals.linkCopied\"),\n                \"info\"\n            );\n        }\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div>\n                <Loading />\n                <OptionSelector />\n                <Dialog\n                    open={this.props.modalsStatus.getSource}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.getSourceLinkTitle\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            inputProps={{ readonly: true }}\n                            label={t(\"modals.sourceLink\")}\n                            multiline\n                            value={this.props.modalsStatus.getSource}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.copySource} color=\"secondary\">\n                            {t(\"copyToClipboard\", { ns: \"common\" })}\n                        </Button>\n                        <Button onClick={this.onClose}>\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.createNewFolder}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.newFolder\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label={t(\"modals.folderName\")}\n                                type=\"text\"\n                                value={this.state.newFolderName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFolder}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFolderName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.create\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.createNewFile}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.newFile\")}\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFile}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFileName\"\n                                label={t(\"modals.fileName\")}\n                                type=\"text\"\n                                value={this.state.newFileName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFile}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFileName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"modals.create\")}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.rename}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    fullWidth={true}\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"fileManager.rename\")}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <Trans\n                                i18nKey=\"modals.renameDescription\"\n                                values={{\n                                    name:\n                                        this.props.selected.length === 1\n                                            ? this.props.selected[0].name\n                                            : \"\",\n                                }}\n                                components={[<strong key={0} />]}\n                            />\n                        </DialogContentText>\n                        <form onSubmit={this.submitRename}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newName\"\n                                label={t(\"modals.newName\")}\n                                type=\"text\"\n                                value={this.state.newName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRename}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"ok\", { ns: \"common\" })}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <CopyDialog\n                    open={this.props.modalsStatus.copy}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.move}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {t(\"modals.moveToTitle\")}\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                <Trans\n                                    i18nKey=\"modals.moveToDescription\"\n                                    values={{\n                                        name: this.state.selectedPathName,\n                                    }}\n                                    components={[<strong key={0} />]}\n                                />\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitMove}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                {t(\"ok\", { ns: \"common\" })}\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Delete\n                    open={this.props.modalsStatus.remove}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                    refreshFileList={this.props.refreshFileList}\n                    refreshStorage={this.props.refreshStorage}\n                />\n                <CreatShare\n                    open={this.props.modalsStatus.share}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                />\n                <RemoteDownload\n                    open={this.props.modalsStatus.remoteDownload}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    presentPath={this.props.path}\n                    torrent={this.props.modalsStatus.remoteDownloadTorrent}\n                />\n                <DecompressDialog\n                    open={this.props.modalsStatus.decompress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <CompressDialog\n                    open={this.props.modalsStatus.compress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <DirectoryDownloadDialog\n                    open={this.props.modalsStatus.directoryDownloading}\n                    onClose={this.onClose}\n                    done={this.props.modalsStatus.directoryDownloadDone}\n                    log={this.props.modalsStatus.directoryDownloadLog}\n                />\n            </div>\n        );\n    }\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(ModalsCompoment))));\n\nexport default Modals;\n","export const sizeToString = (bytes) => {\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = (path) => {\n    return path;\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    let url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        const prefix = url.substring(0, url.indexOf(paramName));\n        let suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const checkGetParameters = (field) => {\n    const url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = (color) => {\n    const metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\"\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    const folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex) {\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\n}\n\nexport function pathJoin(parts, sep) {\n    const separator = sep || \"/\";\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n\nexport function basename(path) {\n    if (!path) {\n        return \"\";\n    }\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function filename(path) {\n    const pathList = path.split(\"/\");\n    return pathList.pop();\n}\n\nexport function fileNameNoExt(filename) {\n    return filename.substring(0, filename.lastIndexOf(\".\")) || filename;\n}\n\nexport function randomStr(length) {\n    let result = \"\";\n    const characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n    return result;\n}\n\nexport function getNumber(base, conditions) {\n    conditions.forEach((v) => {\n        if (v) {\n            base++;\n        }\n    });\n    return base;\n}\n\nexport const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n};\n\nexport const isMobileSafari = () => {\n    const ua = window.navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    return iOS && webkit && !ua.match(/CriOS/i);\n};\n\nexport function vhCheck() {\n    const vh = window.innerHeight;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n\nexport const removeI18nCache = () => {\n    Object.keys(localStorage).forEach(function (key) {\n        if (key && key.startsWith(\"i18next_res_\")) {\n            localStorage.removeItem(key);\n        }\n    });\n};\n\nexport const getSelectItemStyles = (name, personName, theme) => {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n};","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Editor from \"for-editor\";\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            marginLeft: theme.spacing(12),\n            marginRight: theme.spacing(12),\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: theme.shape.borderRadius,\n    },\n    root: {\n        backgroundColor: \"white\",\n        borderRadius: theme.shape.borderRadius,\n    },\n    \"@global\": {\n        \".for-toolbar\": {\n            overflowX: \"auto!important\",\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function TextViewer() {\n    const { t } = useTranslation();\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    const $vm = React.createRef();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileManager.errorReadFileContent\", {\n                        msg: error.message,\n                    }),\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = (file) =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addImg = async ($file) => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Editor\n                        language={t(\"forEditorLocaleCode\", { ns: \"common\" })}\n                        ref={$vm}\n                        value={content}\n                        onSave={() => save()}\n                        addImg={($file) => addImg($file)}\n                        onChange={(value) => setContent(value)}\n                        toolbar={{\n                            h1: true, // h1\n                            h2: true, // h2\n                            h3: true, // h3\n                            h4: true, // h4\n                            img: true, // 图片\n                            link: true, // 链接\n                            code: true, // 代码块\n                            preview: true, // 预览\n                            expand: true, // 全屏\n                            /* v0.0.9 */\n                            undo: true, // 撤销\n                            redo: true, // 重做\n                            save: false, // 保存\n                            /* v0.2.3 */\n                            subfield: true, // 单双栏模式\n                        }}\n                    />\n                )}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && (\n                <SaveButton onClick={save} status={status} />\n            )}\n        </div>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Paper, useTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport SaveButton from \"../Dial/Save\";\nimport { codePreviewSuffix } from \"../../config\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MonacoEditor = React.lazy(() =>\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 40,\n    },\n    editor: {\n        borderRadius: theme.shape.borderRadius,\n    },\n    \"@global\": {\n        \".overflow-guard\": {\n            borderRadius: \"0 0 12px 12px!important\",\n        },\n    },\n    formControl: {\n        margin: \"8px 16px 8px 16px\",\n    },\n    toobar: {\n        textAlign: \"right\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function CodeViewer() {\n    const { t } = useTranslation();\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [suffix, setSuffix] = useState(\"javascript\");\n    const [wordWrap, setWordWrap] = useState(\"off\");\n\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n    const { title } = UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        const extension = title.split(\".\");\n        setSuffix(codePreviewSuffix[extension.pop()]);\n        // eslint-disable-next-line\n    }, [title]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileManager.errorReadFileContent\", {\n                        msg: error.message,\n                    }),\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const isSharePage = pathHelper.isSharePage(location.pathname);\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.toobar}>\n                    <FormControl className={classes.formControl}>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={(e) =>\n                                        setWordWrap(\n                                            e.target.checked ? \"on\" : \"off\"\n                                        )\n                                    }\n                                />\n                            }\n                            label={t(\"fileManager.wordWrap\")}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={suffix}\n                            onChange={(e) => setSuffix(e.target.value)}\n                        >\n                            {Array.from(\n                                new Set(\n                                    Object.keys(codePreviewSuffix).map((k) => {\n                                        return codePreviewSuffix[k];\n                                    })\n                                )\n                            ).map((extension, index) => (\n                                <MenuItem value={extension} key={index}>\n                                    {extension}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <Divider />\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Suspense fallback={<TextLoading />}>\n                        <MonacoEditor\n                            height=\"calc(100vh - 198px)\"\n                            language={suffix}\n                            theme={\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\n                            }\n                            value={content}\n                            options={{\n                                readOnly: isSharePage,\n                                extraEditorClassName: classes.editor,\n                                wordWrap: wordWrap,\n                            }}\n                            onChange={(value) => setContent(value)}\n                        />\n                    </Suspense>\n                )}\n            </Paper>\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\n        </div>\n    );\n}\n","import {\n    OneDriveError,\n    Policy,\n    QiniuError,\n    Response,\n    UpyunError,\n} from \"../types\";\nimport { sizeToString } from \"../utils\";\nimport i18next from \"../../../../i18n\";\nimport { AppError } from \"../../../../middleware/Api\";\n\nexport enum UploaderErrorName {\n    InvalidFile = \"InvalidFile\",\n    NoPolicySelected = \"NoPolicySelected\",\n    UnknownPolicyType = \"UnknownPolicyType\",\n    FailedCreateUploadSession = \"FailedCreateUploadSession\",\n    FailedDeleteUploadSession = \"FailedDeleteUploadSession\",\n    HTTPRequestFailed = \"HTTPRequestFailed\",\n    LocalChunkUploadFailed = \"LocalChunkUploadFailed\",\n    SlaveChunkUploadFailed = \"SlaveChunkUploadFailed\",\n    WriteCtxFailed = \"WriteCtxFailed\",\n    RemoveCtxFailed = \"RemoveCtxFailed\",\n    ReadCtxFailed = \"ReadCtxFailed\",\n    InvalidCtxData = \"InvalidCtxData\",\n    CtxExpired = \"CtxExpired\",\n    RequestCanceled = \"RequestCanceled\",\n    ProcessingTaskDuplicated = \"ProcessingTaskDuplicated\",\n    OneDriveChunkUploadFailed = \"OneDriveChunkUploadFailed\",\n    OneDriveEmptyFile = \"OneDriveEmptyFile\",\n    FailedFinishOneDriveUpload = \"FailedFinishOneDriveUpload\",\n    S3LikeChunkUploadFailed = \"S3LikeChunkUploadFailed\",\n    S3LikeUploadCallbackFailed = \"S3LikeUploadCallbackFailed\",\n    COSUploadCallbackFailed = \"COSUploadCallbackFailed\",\n    COSPostUploadFailed = \"COSPostUploadFailed\",\n    UpyunPostUploadFailed = \"UpyunPostUploadFailed\",\n    QiniuChunkUploadFailed = \"QiniuChunkUploadFailed\",\n    FailedFinishOSSUpload = \"FailedFinishOSSUpload\",\n    FailedFinishQiniuUpload = \"FailedFinishQiniuUpload\",\n    FailedTransformResponse = \"FailedTransformResponse\",\n}\n\nconst RETRY_ERROR_LIST = [\n    UploaderErrorName.FailedCreateUploadSession,\n    UploaderErrorName.HTTPRequestFailed,\n    UploaderErrorName.LocalChunkUploadFailed,\n    UploaderErrorName.SlaveChunkUploadFailed,\n    UploaderErrorName.RequestCanceled,\n    UploaderErrorName.ProcessingTaskDuplicated,\n    UploaderErrorName.FailedTransformResponse,\n];\n\nconst RETRY_CODE_LIST = [-1];\n\nexport class UploaderError implements Error {\n    public stack: string | undefined;\n    constructor(public name: UploaderErrorName, public message: string) {\n        this.stack = new Error().stack;\n    }\n\n    public Message(): string {\n        return this.message;\n    }\n\n    public Retryable(): boolean {\n        return RETRY_ERROR_LIST.includes(this.name);\n    }\n}\n\n// 文件未通过存储策略验证\nexport class FileValidateError extends UploaderError {\n    // 未通过验证的文件属性\n    public field: \"size\" | \"suffix\";\n\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, field: \"size\" | \"suffix\", policy: Policy) {\n        super(UploaderErrorName.InvalidFile, message);\n        this.field = field;\n        this.policy = policy;\n    }\n\n    public Message(): string {\n        if (this.field == \"size\") {\n            return i18next.t(`uploader.sizeExceedLimitError`, {\n                max: sizeToString(this.policy.maxSize),\n            });\n        }\n\n        return i18next.t(`uploader.suffixNotAllowedError`, {\n            supported: this.policy.allowedSuffix\n                ? this.policy.allowedSuffix.join(\",\")\n                : \"*\",\n        });\n    }\n}\n\n// 未知存储策略\nexport class UnknownPolicyError extends UploaderError {\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, policy: Policy) {\n        super(UploaderErrorName.UnknownPolicyType, message);\n        this.policy = policy;\n    }\n}\n\n// 后端 API 出错\nexport class APIError extends UploaderError {\n    private appError: AppError;\n    constructor(\n        name: UploaderErrorName,\n        message: string,\n        protected response: Response<any>\n    ) {\n        super(name, message);\n        this.appError = new AppError(response.msg, response.code, response.msg);\n    }\n\n    public Message(): string {\n        return `${this.message}: ${this.appError.message}`;\n    }\n\n    public Retryable(): boolean {\n        return (\n            super.Retryable() && RETRY_CODE_LIST.includes(this.response.code)\n        );\n    }\n}\n\n// 无法创建上传会话\nexport class CreateUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedCreateUploadSession, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.createUploadSessionError`);\n        return super.Message();\n    }\n}\n\n// 无法删除上传会话\nexport class DeleteUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedDeleteUploadSession, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.deleteUploadSessionError`);\n        return super.Message();\n    }\n}\n\n// HTTP 请求出错\nexport class HTTPError extends UploaderError {\n    public response?: any;\n    constructor(public axiosErr: any, protected url: string) {\n        super(UploaderErrorName.HTTPRequestFailed, axiosErr.message);\n        this.response = axiosErr.response;\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.requestError`, {\n            msg: this.axiosErr,\n            url: this.url,\n        });\n    }\n}\n\n// 本地分块上传失败\nexport class LocalChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.LocalChunkUploadFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.chunkUploadError`, {\n            index: this.chunkIndex,\n        });\n        return super.Message();\n    }\n}\n\n// 无法创建上传会话\nexport class RequestCanceledError extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.RequestCanceled, \"Request canceled\");\n    }\n}\n\n// 从机分块上传失败\nexport class SlaveChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.SlaveChunkUploadFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(`uploader.chunkUploadError`, {\n            index: this.chunkIndex,\n        });\n        return super.Message();\n    }\n}\n\n// 上传任务冲突\nexport class ProcessingTaskDuplicatedError extends UploaderError {\n    constructor() {\n        super(\n            UploaderErrorName.ProcessingTaskDuplicated,\n            \"Processing task duplicated\"\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.conflictError`);\n    }\n}\n\n// OneDrive 分块上传失败\nexport class OneDriveChunkError extends UploaderError {\n    constructor(public response: OneDriveError) {\n        super(\n            UploaderErrorName.OneDriveChunkUploadFailed,\n            response.error.message\n        );\n    }\n\n    public Message(): string {\n        let msg =  i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n\n        if (this.response.error.retryAfterSeconds != undefined){\n            msg += \" \"+i18next.t(`uploader.chunkUploadErrorWithRetryAfter`, {\n                retryAfter: this.response.error.retryAfterSeconds,\n            })\n        }\n\n        return msg;\n    }\n\n    public Retryable(): boolean {\n        return (\n            super.Retryable() || this.response.error.retryAfterSeconds != undefined\n        );\n    }\n}\n\n// OneDrive 选择了空文件上传\nexport class OneDriveEmptyFileSelected extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.OneDriveEmptyFile, \"empty file not supported\");\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.emptyFileError\");\n    }\n}\n\n// OneDrive 无法完成文件上传\nexport class OneDriveFinishUploadError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedFinishOneDriveUpload, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// S3 类策略分块上传失败\nexport class S3LikeChunkError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// OSS 完成传失败\nexport class S3LikeFinishUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.ossFinishUploadError`, {\n            msg: this.message,\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\n        });\n    }\n}\n\n// qiniu 分块上传失败\nexport class QiniuChunkError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.QiniuChunkUploadFailed, response.error);\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// qiniu 完成传失败\nexport class QiniuFinishUploadError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.FailedFinishQiniuUpload, response.error);\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.finishUploadErrorWithMsg`, {\n            msg: this.message,\n        });\n    }\n}\n\n// COS 上传失败\nexport class COSUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.COSPostUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(): string {\n        return i18next.t(`uploader.cosUploadFailed`, {\n            msg: this.message,\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\n        });\n    }\n}\n\n// COS 无法完成上传回调\nexport class COSUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.COSUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// Upyun 上传失败\nexport class UpyunUploadError extends UploaderError {\n    constructor(public response: UpyunError) {\n        super(UploaderErrorName.UpyunPostUploadFailed, response.message);\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.upyunUploadFailed\", {\n            msg: this.message,\n        });\n    }\n}\n\n// S3 无法完成上传回调\nexport class S3LikeUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.S3LikeUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(): string {\n        this.message = i18next.t(\"uploader.finishUploadError\");\n        return super.Message();\n    }\n}\n\n// 无法解析响应\nexport class TransformResponseError extends UploaderError {\n    constructor(private response: string, parseError: Error) {\n        super(UploaderErrorName.FailedTransformResponse, parseError.message);\n    }\n\n    public Message(): string {\n        return i18next.t(\"uploader.parseResponseError\", {\n            msg: this.message,\n            content: this.response,\n        });\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport {\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    withStyles,\n} from \"@material-ui/core\";\n\nconst mapStateToProps = (state) => {\n    return {\n        snackbar: state.viewUpdate.snackbar,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles1 = (theme) => ({\n    success: {\n        backgroundColor: theme.palette.success.main,\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.info.main,\n    },\n    warning: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon\n                        className={classNames(\n                            classes.icon,\n                            classes.iconVariant\n                        )}\n                    />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\n        .isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = (theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n});\nclass SnackbarCompoment extends Component {\n    state = {\n        open: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\n            this.setState({ open: true });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: this.props.snackbar.vertical,\n                    horizontal: this.props.snackbar.horizontal,\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleClose}\n                    variant={this.props.snackbar.color}\n                    message={this.props.snackbar.msg}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SnackbarCompoment));\n\nexport default AlertBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    AccountArrowRight,\n    AccountPlus,\n    DesktopMacDashboard,\n    HomeAccount,\n    LogoutVariant,\n} from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Avatar,\n    Chip,\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Popover,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    setSessionStatus,\n    setUserPopover,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\n        registerEnabled: state.siteConfig.registerEnabled,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus: (status) => {\n            dispatch(setSessionStatus(status));\n        },\n    };\n};\nconst styles = () => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    sigOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.loggedOut\"),\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            {t(\"login.signIn\")}\n                        </MenuItem>\n                        {this.props.registerEnabled && (\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.history.push(\"/signup\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <AccountPlus />\n                                </ListItemIcon>\n                                {t(\"login.signUp\")}\n                            </MenuItem>\n                        )}\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    style={{\n                                        fontSize: \"0.875rem\",\n                                    }}\n                                    noWrap\n                                >\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            {!isAdminPage && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\n                                            \"/profile/\" + user.id\n                                        );\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <HomeAccount />\n                                    </ListItemIcon>\n                                    {t(\"navbar.myProfile\")}\n                                </MenuItem>\n                            )}\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    {t(\"navbar.dashboard\")}\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                style={{\n                                    padding: \" 11px 16px 11px 16px\",\n                                }}\n                                onClick={this.sigOut}\n                            >\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                {t(\"login.logout\")}\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withStyles(styles)(\n        withRouter(withTranslation()(UserAvatarPopoverCompoment))\n    )\n);\n\nexport default UserAvatarPopover;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Avatar,\n    Grow,\n    IconButton,\n    Tooltip,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport { Home } from \"@material-ui/icons\";\nimport { setUserPopover } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        whiteSpace: \"nowrap\",\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null,\n    };\n\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    returnHome = () => {\n        window.location.href = \"/home\";\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && (\n                            <>\n                                <DarkModeSwitcher position=\"top\" />\n                                {loginCheck && (\n                                    <>\n                                        <Tooltip\n                                            title={t(\"navbar.setting\")}\n                                            placement=\"bottom\"\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/setting?\"\n                                                    )\n                                                }\n                                                color=\"inherit\"\n                                            >\n                                                <SettingIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {isAdminPage && (\n                            <Tooltip\n                                title={t(\"navbar.backToHomepage\")}\n                                placement=\"bottom\"\n                            >\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={this.returnHome}\n                                >\n                                    <Home />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(UserAvatarCompoment))));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MusicNote from \"@material-ui/icons/MusicNote\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport { changeThemeColor, sizeToString, vhCheck } from \"../../utils\";\nimport Uploader from \"../Uploader/Uploader.js\";\nimport pathHelper from \"../../utils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport {\n    FolderDownload,\n    AccountArrowRight,\n    AccountPlus,\n    LogoutVariant,\n} from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Drawer,\n    Grow,\n    Hidden,\n    IconButton,\n    List,\n    ListItemIcon,\n    ListItemText,\n    SwipeableDrawer,\n    Toolbar,\n    Tooltip,\n    Typography,\n    withStyles,\n    withTheme\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FileTag from \"./FileTags\";\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SubActions from \"../FileManager/Navigator/SubActions\";\nimport {\n    audioPreviewSetIsOpen,\n    changeContextMenu,\n    drawerToggleAction,\n    navigateTo,\n    openCreateFolderDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openPreview,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    saveFile,\n    setSelectedTarget,\n    setSessionStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport {\n    startBatchDownload,\n    startDirectoryDownload,\n    startDownload,\n} from \"../../redux/explorer/action\";\nimport { withTranslation } from \"react-i18next\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\n\nvhCheck();\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst ListItem = withStyles((theme) => ({\n    root: {\n        borderRadius:theme.shape.borderRadius,\n    },\n}))(MuiListItem);\n\nconst mapStateToProps = (state) => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin,\n        shareInfo: state.viewUpdate.shareInfo,\n        registerEnabled: state.siteConfig.registerEnabled,\n        audioPreviewPlayingName: state.explorer.audioPreview.playingName,\n        audioPreviewIsOpen: state.explorer.audioPreview.isOpen,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        setSessionStatus: () => {\n            dispatch(setSessionStatus());\n        },\n        openPreview: (share) => {\n            dispatch(openPreview(share));\n        },\n        audioPreviewOpen: () => {\n            dispatch(audioPreviewSetIsOpen(true));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n        startDirectoryDownload: (share) => {\n            dispatch(startDirectoryDownload(share));\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile,\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\",\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0,\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n    },\n    menuIcon: {\n        marginRight: 20,\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile,\n    },\n    drawerPaperDesktop: {\n        width: drawerWidth,\n    },\n    upDrawer: {\n        overflowX: \"hidden\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            justifyContent: \"space-between\",\n        },\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 0,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    badge: {\n        top: 1,\n        right: -15,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    sectionForFile: {\n        display: \"flex\",\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\",\n    },\n    fabButton: {\n        borderRadius: \"100px\",\n    },\n    badgeFix: {\n        right: \"10px\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    dividerFix: {\n        marginTop: \"8px\",\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\",\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\",\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\",\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\",\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\",\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n    },\n    paddingList:{\n        padding:theme.spacing(1),\n    }\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false,\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    UNSAFE_componentWillMount() {\n        this.unlisten = this.props.history.listen(() => {\n            this.setState(() => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount() {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default\n        );\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.selected.length === 0) !==\n            (nextProps.selected.length === 0)\n        ) {\n            changeThemeColor(\n                !(this.props.selected.length === 0)\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    openDownload = () => {\n        this.props.startDownload(this.props.shareInfo, this.props.selected[0]);\n    };\n\n    openDirectoryDownload = (e) => {\n        this.props.startDirectoryDownload(this.props.shareInfo);\n    };\n\n    archiveDownload = (e) => {\n        this.props.startBatchDownload(this.props.shareInfo);\n    };\n\n    signOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.loggedOut\"),\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .finally(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List className={classes.paddingList}>\n                                {/*<ListItem*/}\n                                {/*    button*/}\n                                {/*    key=\"我的分享\"*/}\n                                {/*    onClick={() =>*/}\n                                {/*        this.props.history.push(\"/shares?\")*/}\n                                {/*    }*/}\n                                {/*>*/}\n                                {/*    <ListItemIcon>*/}\n                                {/*        <ShareIcon*/}\n                                {/*            className={classes.iconFix}*/}\n                                {/*        />*/}\n                                {/*    </ListItemIcon>*/}\n                                {/*    <ListItemText*/}\n                                {/*        primary={t(\"navbar.myShare\")}*/}\n                                {/*    />*/}\n                                {/*</ListItem>*/}\n                                {/*{user.group.allowRemoteDownload && (*/}\n                                {/*    <ListItem*/}\n                                {/*        button*/}\n                                {/*        key=\"离线下载\"*/}\n                                {/*        onClick={() =>*/}\n                                {/*            this.props.history.push(\"/aria2?\")*/}\n                                {/*        }*/}\n                                {/*    >*/}\n                                {/*        <ListItemIcon>*/}\n                                {/*            <DownloadIcon*/}\n                                {/*                className={classes.iconFix}*/}\n                                {/*            />*/}\n                                {/*        </ListItemIcon>*/}\n                                {/*        <ListItemText*/}\n                                {/*            primary={t(\"navbar.remoteDownload\")}*/}\n                                {/*        />*/}\n                                {/*    </ListItem>*/}\n                                {/*)}*/}\n                                {/*{user.group.webdav && (*/}\n                                {/*    <ListItem*/}\n                                {/*        button*/}\n                                {/*        key=\"WebDAV\"*/}\n                                {/*        onClick={() =>*/}\n                                {/*            this.props.history.push(\"/webdav?\")*/}\n                                {/*        }*/}\n                                {/*    >*/}\n                                {/*        <ListItemIcon>*/}\n                                {/*            <Devices*/}\n                                {/*                className={classes.iconFix}*/}\n                                {/*            />*/}\n                                {/*        </ListItemIcon>*/}\n                                {/*        <ListItemText*/}\n                                {/*            primary={t(\"navbar.connect\")}*/}\n                                {/*        />*/}\n                                {/*    </ListItem>*/}\n                                {/*)}*/}\n\n                                {/*<ListItem*/}\n                                {/*    button*/}\n                                {/*    key=\"任务队列\"*/}\n                                {/*    onClick={() =>*/}\n                                {/*        this.props.history.push(\"/tasks?\")*/}\n                                {/*    }*/}\n                                {/*>*/}\n                                {/*    <ListItemIcon>*/}\n                                {/*        <Assignment*/}\n                                {/*            className={classes.iconFix}*/}\n                                {/*        />*/}\n                                {/*    </ListItemIcon>*/}\n                                {/*    <ListItemText*/}\n                                {/*        primary={t(\"navbar.taskQueue\")}*/}\n                                {/*    />*/}\n                                {/*</ListItem>*/}\n                                {pathHelper.isMobile() && (\n                                    <>\n                                        <Divider />\n                                        <ListItem\n                                            button\n                                            key=\"个人设置\"\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/setting?\"\n                                                )\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <Settings\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={t(\"navbar.setting\")}\n                                            />\n                                        </ListItem>\n\n                                        <ListItem\n                                            button\n                                            key=\"退出登录\"\n                                            onClick={this.signOut}\n                                        >\n                                            <ListItemIcon>\n                                                <LogoutVariant\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={t(\"login.logout\")}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                            </List>\n                        </div>\n                        <div>\n                            <StorageBar></StorageBar>\n                        </div>\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary={t(\"login.signIn\")} />\n                        </ListItem>\n                        {this.props.registerEnabled && (\n                            <ListItem\n                                button\n                                key=\"注册\"\n                                onClick={() =>\n                                    this.props.history.push(\"/signup\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <AccountPlus className={classes.iconFix} />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"login.signUp\")} />\n                            </ListItem>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length === 0\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={this.handleDrawerToggle}\n                                className={classes.menuButton}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={() =>\n                                    this.props.handleDesktopToggle(\n                                        !this.props.desktopOpen\n                                    )\n                                }\n                                className={classes.menuButtonDesktop}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length > 0 &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname\n                                )) && (\n                                <Grow in={this.props.selected.length > 0}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length === 0 && (\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                noWrap\n                                onClick={() => {\n                                    this.props.history.push(\"/\");\n                                }}\n                            >\n                                {this.props.subTitle\n                                    ? this.props.subTitle\n                                    : this.props.title}\n                            </Typography>\n                        )}\n\n                        {!this.props.isMultiple &&\n                            (this.props.withFile || this.props.withFolder) &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {this.props.withFile &&\n                                        (isHomePage ||\n                                            pathHelper.isSharePage(\n                                                this.props.location.pathname\n                                            )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {t(\"navbar.objectsSelected\", {\n                                        num: this.props.selected.length,\n                                    })}\n                                </Typography>\n                            )}\n                        {this.props.selected.length === 0 && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {this.props.selected.length > 0 &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile &&\n                                        isPreviewable(\n                                            this.props.selected[0].name\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.open\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openPreview(\n                                                                this.props\n                                                                    .shareInfo\n                                                            )\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.download\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) &&\n                                        window.showDirectoryPicker &&\n                                        window.isSecureContext && (\n                                            <Grow\n                                                in={\n                                                    (this.props.isMultiple ||\n                                                        this.props\n                                                            .withFolder) &&\n                                                    window.showDirectoryPicker &&\n                                                    window.isSecureContext\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.download\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDirectoryDownload()\n                                                        }\n                                                    >\n                                                        <FolderDownload />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) && (\n                                        <Grow\n                                            in={\n                                                this.props.isMultiple ||\n                                                this.props.withFolder\n                                            }\n                                        >\n                                            <Tooltip\n                                                title={t(\n                                                    \"fileManager.batchDownload\"\n                                                )}\n                                            >\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    disableClickAway\n                                                    onClick={() =>\n                                                        this.archiveDownload()\n                                                    }\n                                                >\n                                                    <DownloadIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!this.props.isMultiple &&\n                                        !pathHelper.isMobile() &&\n                                        !isSharePage && (\n                                            <Grow in={!this.props.isMultiple}>\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.share\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openShareDialog()\n                                                        }\n                                                    >\n                                                        <ShareIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip\n                                                title={t(\"fileManager.rename\")}\n                                            >\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip\n                                                        title={t(\n                                                            \"fileManager.move\"\n                                                        )}\n                                                    >\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip\n                                                    title={t(\n                                                        \"fileManager.delete\"\n                                                    )}\n                                                >\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n\n                                            {pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip\n                                                        title={t(\n                                                            \"fileManager.moreActions\"\n                                                        )}\n                                                    >\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.changeContextMenu(\n                                                                    \"file\",\n                                                                    true\n                                                                )\n                                                            }\n                                                        >\n                                                            <MoreHoriz />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(!this.props.isMultiple && this.props.withFile) &&\n                            this.props.audioPreviewPlayingName != null && (\n                                <IconButton\n                                    title={t(\"navbar.music\")}\n                                    className={classes.sideButton}\n                                    onClick={this.props.audioPreviewOpen}\n                                    color={\"inherit\"}\n                                >\n                                    <MusicNote fontSize={\"default\"} />\n                                </IconButton>\n                            )}\n\n                        {this.props.selected.length === 0 && <UserAvatar />}\n                        {this.props.selected.length === 0 &&\n                            pathHelper.isMobile() &&\n                            (isHomePage || this.props.shareInfo) && (\n                                <SubActions inherit />\n                            )}\n                    </Toolbar>\n                </AppBar>\n                <Uploader />\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(() => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaperDesktop,\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen,\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(\n    withTheme(\n        withStyles(styles)(withRouter(withTranslation()(NavbarCompoment)))\n    )\n);\n\nexport default Navbar;\n","import { Task } from \"../types\";\nimport Logger from \"../logger\";\nimport { UploaderError, UploaderErrorName } from \"../errors\";\nimport { ChunkProgress } from \"../uploader/chunk\";\n\nexport const sizeToString = (bytes: number): string => {\n    if (bytes === 0) return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\n// 文件分块\nexport function getChunks(\n    file: File,\n    chunkByteSize: number | undefined\n): Blob[] {\n    // 如果 chunkByteSize 比文件大或为0，则直接取文件的大小\n    if (!chunkByteSize || chunkByteSize > file.size || chunkByteSize == 0) {\n        chunkByteSize = file.size;\n    }\n\n    const chunks: Blob[] = [];\n    const count = Math.ceil(file.size / chunkByteSize);\n    for (let i = 0; i < count; i++) {\n        const chunk = file.slice(\n            chunkByteSize * i,\n            i === count - 1 ? file.size : chunkByteSize * (i + 1)\n        );\n        chunks.push(chunk);\n    }\n\n    if (chunks.length == 0) {\n        chunks.push(file.slice(0));\n    }\n    return chunks;\n}\n\nexport function sumChunk(list: ChunkProgress[]) {\n    return list.reduce((data, loaded) => data + loaded.loaded, 0);\n}\n\nconst resumeKeyPrefix = \"cd_upload_ctx_\";\n\nfunction isTask(toBeDetermined: Task | string): toBeDetermined is Task {\n    return !!(toBeDetermined as Task).name;\n}\n\nexport function getResumeCtxKey(task: Task | string): string {\n    if (isTask(task)) {\n        return `${resumeKeyPrefix}name_${task.name}_dst_${task.dst}_size_${task.size}_policy_${task.policy.id}`;\n    }\n\n    return task;\n}\n\nexport function setResumeCtx(task: Task, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.setItem(ctxKey, JSON.stringify(task));\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.WriteCtxFailed,\n                `setResumeCtx failed: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function removeResumeCtx(task: Task | string, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.removeItem(ctxKey);\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.RemoveCtxFailed,\n                `removeResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function cleanupResumeCtx(logger: Logger) {\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            try {\n                localStorage.removeItem(key);\n            } catch (err) {\n                logger.warn(\n                    new UploaderError(\n                        UploaderErrorName.RemoveCtxFailed,\n                        `removeResumeCtx failed. key: ${key}`\n                    )\n                );\n            }\n        }\n    }\n}\n\nexport function getResumeCtx(task: Task | string, logger: Logger): Task | null {\n    const ctxKey = getResumeCtxKey(task);\n    let localInfoString: string | null = null;\n    try {\n        localInfoString = localStorage.getItem(ctxKey);\n    } catch {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.ReadCtxFailed,\n                `getResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (localInfoString == null) {\n        return null;\n    }\n\n    let localInfo: Task | null = null;\n    try {\n        localInfo = JSON.parse(localInfoString);\n    } catch {\n        // 本地信息已被破坏，直接删除\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.InvalidCtxData,\n                `getResumeCtx failed to parse. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (\n        localInfo &&\n        localInfo.session &&\n        localInfo.session.expires < Math.floor(Date.now() / 1000)\n    ) {\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.CtxExpired,\n                `upload session already expired at ${localInfo.session.expires}. key: ${ctxKey}`\n            )\n        );\n        return null;\n    }\n\n    return localInfo;\n}\n\nexport function listResumeCtx(logger: Logger): Task[] {\n    const res: Task[] = [];\n    for (let i = 0, len = localStorage.length; i < len; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            const value = getResumeCtx(key, logger);\n            if (value) {\n                res.push(value);\n            }\n        }\n    }\n\n    return res;\n}\n\nexport function OBJtoXML(obj: any): string {\n    let xml = \"\";\n    for (const prop in obj) {\n        xml += \"<\" + prop + \">\";\n        if (Array.isArray(obj[prop])) {\n            for (const array of obj[prop]) {\n                // A real botch fix here\n                xml += \"</\" + prop + \">\";\n                xml += \"<\" + prop + \">\";\n\n                xml += OBJtoXML(new Object(array));\n            }\n        } else if (typeof obj[prop] == \"object\") {\n            xml += OBJtoXML(new Object(obj[prop]));\n        } else {\n            xml += obj[prop];\n        }\n        xml += \"</\" + prop + \">\";\n    }\n    return xml.replace(/<\\/?[0-9]{1,}>/g, \"\");\n}\n\nexport function getFileInput(id: number, isFolder: boolean): HTMLInputElement {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.id = `upload-file-input-${id}`;\n    if (isFolder) {\n        input.id = `upload-folder-input-${id}`;\n        input.setAttribute(\"webkitdirectory\", \"true\");\n        input.setAttribute(\"mozdirectory\", \"true\");\n    } else {\n        input.id = `upload-file-input-${id}`;\n        input.multiple = true;\n    }\n    input.hidden = true;\n    document.body.appendChild(input);\n    return input;\n}\n\nexport function pathJoin(parts: string[], sep = \"/\"): string {\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + sep), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(sep + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(sep);\n}\n\nfunction basename(path: string): string {\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function trimPrefix(src: string, prefix: string): string {\n    if (src.startsWith(prefix)) {\n        return src.slice(prefix.length);\n    }\n    return src;\n}\n\nexport function getDirectoryUploadDst(dst: string, file: any): string {\n    let relPath = file.webkitRelativePath;\n    if (!relPath || relPath == \"\") {\n        relPath = file.fsPath;\n        if (!relPath || relPath == \"\") {\n            return dst;\n        }\n    }\n\n    relPath = trimPrefix(relPath, \"/\");\n\n    return basename(pathJoin([dst, relPath]));\n}\n\n// Wrap readEntries in a promise to make working with readEntries easier\nasync function readEntriesPromise(directoryReader: any): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            directoryReader.readEntries(resolve, reject);\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nasync function readFilePromise(fileReader: any, path: string): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            fileReader.file((file: any) => {\n                file.fsPath = path;\n                resolve(file);\n            });\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n// Get all the entries (files or sub-directories) in a directory by calling readEntries until it returns empty array\nasync function readAllDirectoryEntries(directoryReader: any): Promise<any> {\n    const entries: any[] = [];\n    let readEntries = await readEntriesPromise(directoryReader);\n    while (readEntries.length > 0) {\n        entries.push(...readEntries);\n        readEntries = await readEntriesPromise(directoryReader);\n    }\n    return entries;\n}\n\n// Drop handler function to get all files\nexport async function getAllFileEntries(\n    dataTransferItemList: DataTransferItemList\n): Promise<File[]> {\n    const fileEntries: any[] = [];\n    // Use BFS to traverse entire directory/file structure\n    const queue: any[] = [];\n    // Unfortunately dataTransferItemList is not iterable i.e. no forEach\n    for (let i = 0; i < dataTransferItemList.length; i++) {\n        const fileEntry = dataTransferItemList[i].webkitGetAsEntry();\n        if (!fileEntry) {\n            const file = dataTransferItemList[i].getAsFile();\n            if (file) {\n                fileEntries.push(file);\n            }\n        }\n\n        queue.push(dataTransferItemList[i].webkitGetAsEntry());\n    }\n    while (queue.length > 0) {\n        const entry = queue.shift();\n        if (!entry) {\n            continue;\n        }\n        if (entry.isFile) {\n            fileEntries.push(await readFilePromise(entry, entry.fullPath));\n        } else if (entry.isDirectory) {\n            const reader = entry.createReader();\n            const entries: any = await readAllDirectoryEntries(reader);\n            queue.push(...entries);\n        }\n    }\n    return fileEntries;\n}\n\nexport function isFileDrop(e: DragEvent): boolean {\n    return !!e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n}\n","export * from \"./pool\";\nexport * from \"./helper\";\nexport * from \"./validator\";\nexport * from \"./request\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\n\nimport {\n    Fade,\n    InputBase,\n    ListItemIcon,\n    ListItemText,\n    MenuItem,\n    Paper,\n    Popper,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport { configure, HotKeys } from \"react-hotkeys\";\nimport { searchMyFile } from \"../../redux/explorer\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Trans, withTranslation } from \"react-i18next\";\n\nconfigure({\n    ignoreTags: [],\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchMyFile: (keywords, path) => {\n            dispatch(searchMyFile(keywords, path));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\",\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300,\n            },\n        },\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364,\n    },\n});\n\nconst keyMap = {\n    SEARCH: \"enter\",\n};\n\nclass SearchBarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\",\n        };\n    }\n\n    handlers = {\n        SEARCH: (e) => {\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\n                this.searchMyFile(\"\")();\n            } else {\n                this.searchShare();\n            }\n            e.target.blur();\n        },\n    };\n\n    handleChange = (event) => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value,\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\",\n        });\n    };\n\n    searchMyFile = (path) => () => {\n        this.props.searchMyFile(\"keywords/\" + this.input, path);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\n            \"/search?keywords=\" + encodeURIComponent(this.input)\n        );\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                    <InputBase\n                        placeholder={t(\"navbar.searchPlaceholder\")}\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        onChange={this.handleChange}\n                        onBlur={this.cancelSuggest}\n                        value={this.state.input}\n                    />\n                </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile(\"\")}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary,\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    <Trans\n                                                        i18nKey=\"navbar.searchInFiles\"\n                                                        values={{\n                                                            name: this.state\n                                                                .input,\n                                                        }}\n                                                        components={[\n                                                            <strong key={0} />,\n                                                        ]}\n                                                    />\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                {isHomePage &&\n                                    this.props.path !== \"/\" &&\n                                    !this.props.search && (\n                                        <MenuItem\n                                            onClick={this.searchMyFile(\n                                                this.props.path\n                                            )}\n                                        >\n                                            <ListItemIcon\n                                                className={classes.icon}\n                                            >\n                                                <FolderIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                classes={{\n                                                    primary: classes.primary,\n                                                }}\n                                                primary={\n                                                    <Typography noWrap>\n                                                        <Trans\n                                                            i18nKey=\"navbar.searchInFolders\"\n                                                            values={{\n                                                                name: this.state\n                                                                    .input,\n                                                            }}\n                                                            components={[\n                                                                <strong\n                                                                    key={0}\n                                                                />,\n                                                            ]}\n                                                        />\n                                                    </Typography>\n                                                }\n                                            />\n                                        </MenuItem>\n                                    )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                <Trans\n                                                    i18nKey=\"navbar.searchInShares\"\n                                                    values={{\n                                                        name: this.state.input,\n                                                    }}\n                                                    components={[\n                                                        <strong key={0} />,\n                                                    ]}\n                                                />\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(SearchBarCompoment))));\n\nexport default SearchBar;\n","/* eslint-disable */\nclass Crc32 {\n    constructor() {\n        this.crc = -1;\n    }\n\n    append(data) {\n        let crc = this.crc | 0;\n        const table = this.table;\n        for (let offset = 0, len = data.length | 0; offset < len; offset++) {\n            crc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xff];\n        }\n        this.crc = crc;\n    }\n\n    get() {\n        return ~this.crc;\n    }\n}\nCrc32.prototype.table = (() => {\n    let i;\n    let j;\n    let t;\n    const table = [];\n    for (i = 0; i < 256; i++) {\n        t = i;\n        for (j = 0; j < 8; j++) {\n            t = t & 1 ? (t >>> 1) ^ 0xedb88320 : t >>> 1;\n        }\n        table[i] = t;\n    }\n    return table;\n})();\n\nconst getDataHelper = (byteLength) => {\n    const uint8 = new Uint8Array(byteLength);\n    return {\n        array: uint8,\n        view: new DataView(uint8.buffer),\n    };\n};\n\nconst pump = (zipObj) =>\n    zipObj.reader.read().then((chunk) => {\n        if (chunk.done) return zipObj.writeFooter();\n        const outputData = chunk.value;\n        zipObj.crc.append(outputData);\n        zipObj.uncompressedLength += outputData.length;\n        zipObj.compressedLength += outputData.length;\n        zipObj.ctrl.enqueue(outputData);\n    });\n\n/**\n * [createWriter description]\n * @param  {Object} underlyingSource [description]\n * @return {Boolean}                  [description]\n */\nfunction createWriter(underlyingSource) {\n    const files = Object.create(null);\n    const filenames = [];\n    const encoder = new TextEncoder();\n    let offset = 0;\n    let activeZipIndex = 0;\n    let ctrl;\n    let activeZipObject, closed;\n\n    function next() {\n        activeZipIndex++;\n        activeZipObject = files[filenames[activeZipIndex]];\n        if (activeZipObject) processNextChunk();\n        else if (closed) closeZip();\n    }\n\n    const zipWriter = {\n        enqueue(fileLike) {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot enqueue a chunk into a readable stream that is closed or has been requested to be closed\"\n                );\n\n            let name = fileLike.name.trim();\n            const date = new Date(\n                typeof fileLike.lastModified === \"undefined\"\n                    ? Date.now()\n                    : fileLike.lastModified\n            );\n\n            if (fileLike.directory && !name.endsWith(\"/\")) name += \"/\";\n            if (files[name]) throw new Error(\"File already exists.\");\n\n            const nameBuf = encoder.encode(name);\n            filenames.push(name);\n\n            const zipObject = (files[name] = {\n                level: 0,\n                ctrl,\n                directory: !!fileLike.directory,\n                nameBuf,\n                comment: encoder.encode(fileLike.comment || \"\"),\n                compressedLength: 0,\n                uncompressedLength: 0,\n                writeHeader() {\n                    const header = getDataHelper(26);\n                    const data = getDataHelper(30 + nameBuf.length);\n\n                    zipObject.offset = offset;\n                    zipObject.header = header;\n                    if (zipObject.level !== 0 && !zipObject.directory) {\n                        header.view.setUint16(4, 0x0800);\n                    }\n                    header.view.setUint32(0, 0x14000808);\n                    header.view.setUint16(\n                        6,\n                        (((date.getHours() << 6) | date.getMinutes()) << 5) |\n                            (date.getSeconds() / 2),\n                        true\n                    );\n                    header.view.setUint16(\n                        8,\n                        ((((date.getFullYear() - 1980) << 4) |\n                            (date.getMonth() + 1)) <<\n                            5) |\n                            date.getDate(),\n                        true\n                    );\n                    header.view.setUint16(22, nameBuf.length, true);\n                    data.view.setUint32(0, 0x504b0304);\n                    data.array.set(header.array, 4);\n                    data.array.set(nameBuf, 30);\n                    offset += data.array.length;\n                    ctrl.enqueue(data.array);\n                },\n                writeFooter() {\n                    const footer = getDataHelper(16);\n                    footer.view.setUint32(0, 0x504b0708);\n\n                    if (zipObject.crc) {\n                        zipObject.header.view.setUint32(\n                            10,\n                            zipObject.crc.get(),\n                            true\n                        );\n                        zipObject.header.view.setUint32(\n                            14,\n                            zipObject.compressedLength,\n                            true\n                        );\n                        zipObject.header.view.setUint32(\n                            18,\n                            zipObject.uncompressedLength,\n                            true\n                        );\n                        footer.view.setUint32(4, zipObject.crc.get(), true);\n                        footer.view.setUint32(\n                            8,\n                            zipObject.compressedLength,\n                            true\n                        );\n                        footer.view.setUint32(\n                            12,\n                            zipObject.uncompressedLength,\n                            true\n                        );\n                    }\n\n                    ctrl.enqueue(footer.array);\n                    offset += zipObject.compressedLength + 16;\n                    next();\n                },\n                fileLike,\n            });\n\n            if (!activeZipObject) {\n                activeZipObject = zipObject;\n                processNextChunk();\n            }\n        },\n        close() {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot close a readable stream that has already been requested to be closed\"\n                );\n            if (!activeZipObject) closeZip();\n            closed = true;\n        },\n    };\n\n    function closeZip() {\n        let length = 0;\n        let index = 0;\n        let indexFilename, file;\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            length += 46 + file.nameBuf.length + file.comment.length;\n        }\n        const data = getDataHelper(length + 22);\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            data.view.setUint32(index, 0x504b0102);\n            data.view.setUint16(index + 4, 0x1400);\n            data.array.set(file.header.array, index + 6);\n            data.view.setUint16(index + 32, file.comment.length, true);\n            if (file.directory) {\n                data.view.setUint8(index + 38, 0x10);\n            }\n            data.view.setUint32(index + 42, file.offset, true);\n            data.array.set(file.nameBuf, index + 46);\n            data.array.set(file.comment, index + 46 + file.nameBuf.length);\n            index += 46 + file.nameBuf.length + file.comment.length;\n        }\n        data.view.setUint32(index, 0x504b0506);\n        data.view.setUint16(index + 8, filenames.length, true);\n        data.view.setUint16(index + 10, filenames.length, true);\n        data.view.setUint32(index + 12, length, true);\n        data.view.setUint32(index + 16, offset, true);\n        ctrl.enqueue(data.array);\n        ctrl.close();\n    }\n\n    function processNextChunk() {\n        if (!activeZipObject) return;\n        if (activeZipObject.directory)\n            return activeZipObject.writeFooter(activeZipObject.writeHeader());\n        if (activeZipObject.reader) return pump(activeZipObject);\n        if (activeZipObject.fileLike.stream) {\n            activeZipObject.crc = new Crc32();\n            activeZipObject.reader = activeZipObject.fileLike\n                .stream()\n                .getReader();\n            activeZipObject.writeHeader();\n        } else next();\n    }\n    return new ReadableStream({\n        start: (c) => {\n            ctrl = c;\n            underlyingSource.start &&\n                Promise.resolve(underlyingSource.start(zipWriter));\n        },\n        pull() {\n            return (\n                processNextChunk() ||\n                (underlyingSource.pull &&\n                    Promise.resolve(underlyingSource.pull(zipWriter)))\n            );\n        },\n    });\n}\n\nwindow.ZIP = createWriter;\n","import { CloudreveFile } from \"../types\";\nimport { list } from \"../services/navigate\";\nimport { pathJoin } from \"../component/Uploader/core/utils\";\n\nexport function getPreviewPath(selected: any): string {\n    return encodeURIComponent(\n        selected.path === \"/\"\n            ? selected.path + selected.name\n            : selected.path + \"/\" + selected.name\n    );\n}\n\nexport async function walk(\n    file: CloudreveFile[],\n    share: any\n): Promise<CloudreveFile[]> {\n    let res: CloudreveFile[] = [];\n    for (const f of file) {\n        if (f.type === \"file\") {\n            res.push(f);\n            continue;\n        }\n\n        if (f.type === \"dir\") {\n            const response = await list(\n                pathJoin([f.path, f.name]),\n                share,\n                \"\",\n                \"\"\n            );\n            const subs = await walk(response.data.objects, share);\n            res = [...res, ...subs];\n        }\n    }\n\n    return res;\n}\n","// get the paths of files (no directories) in the directory\n// parent: \"\" or \"/\"\nexport const getFileSystemDirectoryPaths = async (\n    handle: FileSystemDirectoryHandle,\n    parent = \"\"\n): Promise<string[]> => {\n    const paths: Array<string> = [];\n\n    for await (const [path, fileSystemHandle] of handle.entries()) {\n        if (fileSystemHandle instanceof window.FileSystemFileHandle) {\n            paths.push(`${parent}${path}`);\n        } else {\n            paths.push(\n                ...(await getFileSystemDirectoryPaths(\n                    fileSystemHandle,\n                    `${parent}${path}/`\n                ))\n            );\n        }\n    }\n\n    return paths;\n};\n\n// create the dst directory if it doesn't exist\n// return the dst directory handle\n// paths: \"/dir1/dir2\" => [\"dir1\",\"dir2\"]\nexport const createFileSystemDirectory = async (\n    handle: FileSystemDirectoryHandle,\n    paths: string[]\n) => {\n    let cur = handle;\n    while (paths.length > 0) {\n        const path = paths.shift();\n        if (!path) {\n            break;\n        }\n        cur = await cur.getDirectoryHandle(path, { create: true });\n    }\n    return cur;\n};\n\n// save file into the dst directory\n// create the dst file if it doesn't exist by default\n// path: a/b/c.jpg\nexport const saveFileToFileSystemDirectory = async (\n    handle: FileSystemDirectoryHandle,\n    stream: FileSystemWriteChunkType,\n    path: string,\n    create = true\n) => {\n    const paths = path.split(\"/\");\n    const fileName = paths.pop();\n    if (!fileName) return;\n\n    const dir = await createFileSystemDirectory(handle, paths);\n    const file = await dir.getFileHandle(fileName, { create });\n    const writable = await file.createWritable();\n    await writable.write(stream);\n    await writable.close();\n};\n\n// verify or request the permission of the readwrite permission\nexport async function verifyFileSystemRWPermission(\n    fileHandle: FileSystemDirectoryHandle\n) {\n    const opts = { mode: \"readwrite\" as FileSystemPermissionMode };\n\n    // Check if we already have permission, if so, return true.\n    if ((await fileHandle.queryPermission(opts)) === \"granted\") {\n        return true;\n    }\n\n    // Request permission to the file, if the user grants permission, return true.\n    if ((await fileHandle.requestPermission(opts)) === \"granted\") {\n        return true;\n    }\n\n    // The user did not grant permission, return false.\n    return false;\n}\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\nimport { closeContextMenu, setPagination } from \"../viewUpdate/action\";\nimport { Policy } from \"../../component/Uploader/core/types\";\nimport streamSaver from \"streamsaver\";\nimport \"../../utils/zip\";\nimport pathHelper from \"../../utils/page\";\nimport { filePath, isMac } from \"../../utils\";\nimport API, { getBaseURL } from \"../../middleware/Api\";\nimport { pathJoin, trimPrefix } from \"../../component/Uploader/core/utils\";\nimport { getPreviewPath, walk } from \"../../utils/api\";\nimport { askForOption } from \"./async\";\nimport Auth from \"../../middleware/Auth\";\nimport { encodingRequired, isPreviewable } from \"../../config\";\nimport { push } from \"connected-react-router\";\nimport {\n    changeContextMenu,\n    closeAllModals,\n    navigateTo,\n    openDirectoryDownloadDialog,\n    openGetSourceDialog,\n    openLoadingDialog,\n    openTorrentDownloadDialog,\n    showAudioPreview,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"./index\";\nimport { getDownloadURL } from \"../../services/file\";\nimport i18next from \"../../i18n\";\nimport {\n    getFileSystemDirectoryPaths,\n    saveFileToFileSystemDirectory,\n    verifyFileSystemRWPermission,\n} from \"../../utils/filesystem\";\n\nexport interface ActionSetFileList extends AnyAction {\n    type: \"SET_FILE_LIST\";\n    list: CloudreveFile[];\n}\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\n    return {\n        type: \"SET_FILE_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetDirList extends AnyAction {\n    type: \"SET_DIR_LIST\";\n    list: CloudreveFile[];\n}\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\n    return {\n        type: \"SET_DIR_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetSortMethod extends AnyAction {\n    type: \"SET_SORT_METHOD\";\n    method: SortMethod;\n}\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\n    return {\n        type: \"SET_SORT_METHOD\",\n        method,\n    };\n};\n\nexport const setSideBar = (open: boolean) => {\n    return {\n        type: \"SET_SIDE_BAR\",\n        open,\n    };\n};\n\nexport const setCurrentPolicy = (policy: Policy) => {\n    return {\n        type: \"SET_CURRENT_POLICY\",\n        policy,\n    };\n};\n\nexport const removeSelectedTargets = (fileIds: any) => {\n    return {\n        type: \"RMOVE_SELECTED_TARGETS\",\n        fileIds,\n    };\n};\nexport const addSelectedTargets = (targets: any) => {\n    return {\n        type: \"ADD_SELECTED_TARGETS\",\n        targets,\n    };\n};\nexport const setSelectedTarget = (targets: any) => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets,\n    };\n};\nexport const setLastSelect = (file: any, index: any) => {\n    return {\n        type: \"SET_LAST_SELECT\",\n        file,\n        index,\n    };\n};\nexport const setShiftSelectedIds = (shiftSelectedIds: any) => {\n    return {\n        type: \"SET_SHIFT_SELECTED_IDS\",\n        shiftSelectedIds,\n    };\n};\n\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\nexport const sortMethodFuncs: Record<SortMethod, SortFunc> = {\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.size - b.size;\n    },\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.size - a.size;\n    },\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.name.localeCompare(\n            b.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.name.localeCompare(\n            a.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.create_date) - Date.parse(b.create_date);\n    },\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.create_date) - Date.parse(a.create_date);\n    },\n    modifyTimePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.date) - Date.parse(b.date);\n    },\n    modifyTimeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.date) - Date.parse(a.date);\n    },\n};\n\nexport const selectAll = (): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { selected, fileList, dirList } = state.explorer;\n        if (selected.length >= dirList.length + fileList.length) {\n            dispatch(setSelectedTarget([]));\n        } else {\n            dispatch(setSelectedTarget([...dirList, ...fileList]));\n        }\n    };\n};\n\nexport const updateFileList = (\n    list: CloudreveFile[]\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        // TODO: define state type\n        const { sortMethod, pagination } = state.viewUpdate;\n        const dirList = list.filter((x) => {\n            return x.type === \"dir\";\n        });\n        const fileList = list.filter((x) => {\n            return x.type === \"file\";\n        });\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n        const total = dirList.length + fileList.length;\n        if (pagination.page * pagination.size > total) {\n            dispatch(\n                setPagination({\n                    ...pagination,\n                    page: Math.max(Math.ceil(total / pagination.size), 1),\n                })\n            );\n        }\n    };\n};\n\nexport const changeSortMethod = (\n    method: SortMethod\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { fileList, dirList } = state.explorer;\n        const sortFunc = sortMethodFuncs[method];\n        Auth.SetPreference(\"sort\", method);\n        dispatch(setSortMethod(method));\n        dispatch(setDirList(dirList.slice().sort(sortFunc)));\n        dispatch(setFileList(fileList.slice().sort(sortFunc)));\n    };\n};\n\nexport const toggleObjectInfoSidebar = (\n    open: boolean\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        if (open) {\n            dispatch(closeContextMenu());\n        }\n        dispatch(setSideBar(true));\n    };\n};\n\nexport const serverSideBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        dispatch(\n            openLoadingDialog(i18next.t(\"fileManager.preparingBathDownload\"))\n        );\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const dirs: any[] = [],\n            items: any[] = [];\n        selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null;\n        });\n\n        let reqURL = \"/file/archive\";\n        const postBody = {\n            items: items,\n            dirs: dirs,\n        };\n        if (pathHelper.isSharePage(pathname)) {\n            reqURL = \"/share/archive/\" + share.key;\n            postBody[\"path\"] = selected[0].path;\n        }\n\n        API.post(reqURL, postBody)\n            .then((response: any) => {\n                if (response.rawData.code === 0) {\n                    dispatch(closeAllModals());\n                    window.location.assign(response.data);\n                } else {\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            response.rawData.msg,\n                            \"warning\"\n                        )\n                    );\n                }\n                dispatch(closeAllModals());\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"error\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n\nexport const startDownload = (\n    share: any,\n    file: CloudreveFile\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        const {\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const user = Auth.GetUser();\n        if (\n            pathHelper.isSharePage(pathname) &&\n            !Auth.Check() &&\n            user &&\n            !user.group.shareDownload\n        ) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"share.pleaseLogin\"),\n                    \"warning\"\n                )\n            );\n            return;\n        }\n\n        dispatch(changeContextMenu(\"file\", false));\n        dispatch(openLoadingDialog(i18next.t(\"fileManager.preparingDownload\")));\n        try {\n            const res = await getDownloadURL(file ? file : share);\n            window.location.assign(res.data);\n            dispatch(closeAllModals());\n        } catch (e) {\n            dispatch(toggleSnackbar(\"top\", \"right\", e.message, \"warning\"));\n            dispatch(closeAllModals());\n        }\n    };\n};\n\nexport const startBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        dispatch(changeContextMenu(\"file\", false));\n        const {\n            explorer: { selected },\n        } = getState();\n\n        const user = Auth.GetUser();\n        if (user.group.allowArchiveDownload) {\n            let option: any;\n            try {\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"client\",\n                                name: i18next.t(\n                                    \"fileManager.browserBatchDownload\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.browserBatchDownloadDescription\"\n                                ),\n                            },\n                            {\n                                key: \"server\",\n                                name: i18next.t(\n                                    \"fileManager.serverBatchDownload\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.serverBatchDownloadDescription\"\n                                ),\n                            },\n                        ],\n                        i18next.t(\"fileManager.selectArchiveMethod\")\n                    )\n                );\n            } catch (e) {\n                return;\n            }\n\n            if (option.key === \"server\") {\n                dispatch(serverSideBatchDownload(share));\n                return;\n            }\n        }\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, share);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(closeAllModals());\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                i18next.t(\"fileManager.batchDownloadStarted\"),\n                \"info\"\n            )\n        );\n        const fileStream = streamSaver.createWriteStream(\"archive.zip\");\n        let failed = 0;\n        const readableZipStream = new (window as any).ZIP({\n            start(ctrl: any) {\n                // ctrl.close()\n            },\n            async pull(ctrl: any) {\n                while (queue.length > 0) {\n                    const next = queue.pop();\n                    if (next && next.type === \"file\") {\n                        const previewPath = getPreviewPath(next);\n                        const url =\n                            getBaseURL() +\n                            (pathHelper.isSharePage(location.pathname)\n                                ? \"/share/preview/\" +\n                                  share.key +\n                                  (previewPath !== \"\"\n                                      ? \"?path=\" + previewPath\n                                      : \"\")\n                                : \"/file/preview/\" + next.id);\n                        try {\n                            const res = await fetch(url, { cache: \"no-cache\" });\n                            const stream = () => res.body;\n                            const name = trimPrefix(\n                                pathJoin([next.path, next.name]),\n                                \"/\"\n                            );\n                            ctrl.enqueue({ name, stream });\n                            return;\n                        } catch (e) {\n                            failed++;\n                        }\n                    }\n                }\n                ctrl.close();\n            },\n        });\n\n        // more optimized\n        if (window.WritableStream && readableZipStream.pipeTo) {\n            return readableZipStream\n                .pipeTo(fileStream)\n                .then(() => dispatch(closeAllModals()))\n                .catch((e) => {\n                    console.log(e);\n                    toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        i18next.t(\"modals.batchDownloadError\", {\n                            message: e && e.message,\n                        }),\n                        \"warning\"\n                    );\n                    dispatch(closeAllModals());\n                });\n        }\n    };\n};\n\nlet directoryDownloadAbortController: AbortController;\nexport const cancelDirectoryDownload = () =>\n    directoryDownloadAbortController.abort();\n\nexport const startDirectoryDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        dispatch(changeContextMenu(\"file\", false));\n\n        directoryDownloadAbortController = new AbortController();\n        if (!window.showDirectoryPicker || !window.isSecureContext) {\n            return;\n        }\n        let handle: FileSystemDirectoryHandle;\n        // we should show directory picker at first\n        // https://web.dev/file-system-access/#:~:text=handle%3B%0A%7D-,Gotchas,-Sometimes%20processing%20the\n        try {\n            // can't use suggestedName for showDirectoryPicker (only available showSaveFilePicker)\n            handle = await window.showDirectoryPicker({\n                startIn: \"downloads\",\n                mode: \"readwrite\",\n            });\n            // we should obtain the readwrite permission for the directory at first\n            if (!(await verifyFileSystemRWPermission(handle))) {\n                throw new Error(\n                    i18next.t(\"fileManager.directoryDownloadPermissionError\")\n                );\n            }\n            dispatch(closeAllModals());\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.directoryDownloadError\", {\n                        msg: e && e.message,\n                    }),\n                    \"error\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        const {\n            explorer: { selected },\n            navigator: { path },\n        } = getState();\n\n        // list files to download\n        dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, share);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(closeAllModals());\n\n        let failed = 0;\n        let option: any;\n        // preparation for downloading\n        // get the files in the directory to compare with queue files\n        // parent: \"\"\n        const fsPaths = await getFileSystemDirectoryPaths(handle, \"\");\n\n        // path: / or /abc (no sep suffix)\n        // file.path: /abc/d (no sep suffix)\n        // fsPaths: [\"abc/d/e.bin\",]\n        const duplicates = queue\n            .map((file) =>\n                trimPrefix(\n                    `${file.path}/${file.name}`,\n                    path === \"/\" ? \"/\" : path + \"/\"\n                )\n            )\n            .filter((path) => fsPaths.includes(path));\n\n        // we should ask users for the duplication handle method\n        if (duplicates.length > 0) {\n            try {\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"replace\",\n                                name: i18next.t(\n                                    \"fileManager.directoryDownloadReplace\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.directoryDownloadReplaceDescription\",\n                                    {\n                                        // display the first three duplications\n                                        duplicates: duplicates\n                                            .slice(\n                                                0,\n                                                duplicates.length >= 3\n                                                    ? 3\n                                                    : duplicates.length\n                                            )\n                                            .join(\", \"),\n                                        num: duplicates.length,\n                                    }\n                                ),\n                            },\n                            {\n                                key: \"skip\",\n                                name: i18next.t(\n                                    \"fileManager.directoryDownloadSkip\"\n                                ),\n                                description: i18next.t(\n                                    \"fileManager.directoryDownloadSkipDescription\",\n                                    {\n                                        duplicates: duplicates\n                                            .slice(\n                                                0,\n                                                duplicates.length >= 3\n                                                    ? 3\n                                                    : duplicates.length\n                                            )\n                                            .join(\", \"),\n                                        num: duplicates.length,\n                                    }\n                                ),\n                            },\n                        ],\n                        i18next.t(\n                            \"fileManager.selectDirectoryDuplicationMethod\"\n                        )\n                    )\n                );\n            } catch (e) {\n                return;\n            }\n        }\n        dispatch(closeAllModals());\n\n        // start the download\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                i18next.t(\"fileManager.directoryDownloadStarted\"),\n                \"info\"\n            )\n        );\n\n        const updateLog = (log, done) => {\n            dispatch(openDirectoryDownloadDialog(true, log, done));\n        };\n        let log = \"\";\n\n        while (queue.length > 0) {\n            const next = queue.pop();\n            if (next && next.type === \"file\") {\n                // donload url\n                const previewPath = getPreviewPath(next);\n                const url =\n                    getBaseURL() +\n                    (pathHelper.isSharePage(location.pathname)\n                        ? \"/share/preview/\" +\n                          share.key +\n                          (previewPath !== \"\" ? \"?path=\" + previewPath : \"\")\n                        : \"/file/preview/\" + next.id);\n\n                // path to save this file\n                // path: / or /abc (no sep suffix)\n                // next.path: /abc/d (no sep suffix)\n                // name: d/e.bin\n                const name = trimPrefix(\n                    pathJoin([next.path, next.name]),\n                    path === \"/\" ? \"/\" : path + \"/\"\n                );\n                // TODO: improve the display of log\n                // can we turn the upload queue component to the transition queue?\n                // then we can easily cancel or retry the download\n                // and the batch download queue can show as well.\n                log =\n                    (log === \"\" ? \"\" : log + \"\\n\\n\") +\n                    i18next.t(\"modals.directoryDownloadStarted\", { name });\n                updateLog(log, false);\n                try {\n                    if (duplicates.includes(name)) {\n                        if (option.key === \"skip\") {\n                            log +=\n                                \"\\n\" +\n                                i18next.t(\n                                    \"modals.directoryDownloadSkipNotifiction\",\n                                    {\n                                        name,\n                                    }\n                                );\n                            updateLog(log, false);\n                            continue;\n                        } else {\n                            log +=\n                                \"\\n\" +\n                                i18next.t(\n                                    \"modals.directoryDownloadReplaceNotifiction\",\n                                    {\n                                        name,\n                                    }\n                                );\n                            updateLog(log, false);\n                        }\n                    }\n\n                    // TODO: need concurrent task queue?\n                    const res = await fetch(url, {\n                        cache: \"no-cache\",\n                        signal: directoryDownloadAbortController.signal,\n                    });\n                    await saveFileToFileSystemDirectory(\n                        handle,\n                        await res.blob(),\n                        name\n                    );\n                    log += \"\\n\" + i18next.t(\"modals.directoryDownloadFinished\");\n                    updateLog(log, false);\n                } catch (e) {\n                    if (e.name === \"AbortError\") {\n                        dispatch(\n                            toggleSnackbar(\n                                \"top\",\n                                \"right\",\n                                i18next.t(\"modals.directoryDownloadCancelled\"),\n                                \"warning\"\n                            )\n                        );\n                        log +=\n                            \"\\n\\n\" +\n                            i18next.t(\"modals.directoryDownloadCancelled\");\n                        updateLog(log, true);\n                        return;\n                    }\n\n                    failed++;\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            i18next.t(\n                                \"modals.directoryDownloadErrorNotification\",\n                                {\n                                    name,\n                                    msg: e && e.message,\n                                }\n                            ),\n                            \"warning\"\n                        )\n                    );\n                    log +=\n                        \"\\n\" +\n                        i18next.t(\"modals.directoryDownloadError\", {\n                            msg: e.message,\n                        });\n                    updateLog(log, false);\n                }\n            }\n        }\n        log +=\n            \"\\n\" +\n            (failed === 0\n                ? i18next.t(\"fileManager.directoryDownloadFinished\")\n                : i18next.t(\"fileManager.directoryDownloadFinishedWithError\", {\n                      failed,\n                  }));\n        updateLog(log, true);\n\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                failed === 0\n                    ? i18next.t(\"fileManager.directoryDownloadFinished\")\n                    : i18next.t(\n                          \"fileManager.directoryDownloadFinishedWithError\",\n                          {\n                              failed,\n                          }\n                      ),\n                \"success\"\n            )\n        );\n    };\n};\n\nexport const getViewerURL = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n): string => {\n    const previewPath = getPreviewPath(file);\n    if (isShare) {\n        return (\n            \"/s/\" +\n            file.key +\n            `/${viewer}?name=` +\n            encodeURIComponent(file.name) +\n            \"&share_path=\" +\n            previewPath\n        );\n    }\n\n    return `/${viewer}?p=` + previewPath + \"&id=\" + file.id;\n};\n\nexport const openViewer = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n) => {\n    return (dispatch: any, getState: any) => {\n        dispatch(push(getViewerURL(viewer, file, isShare)));\n    };\n};\n\nexport const openPreview = (share: any) => {\n    return (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const isShare = pathHelper.isSharePage(pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                dispatch(\n                    toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        i18next.t(\"share.pleaseLogin\"),\n                        \"warning\"\n                    )\n                );\n                dispatch(changeContextMenu(\"file\", false));\n                return;\n            }\n        }\n\n        dispatch(changeContextMenu(\"file\", false));\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                dispatch(showImgPreivew(selected[0]));\n                return;\n            case \"msDoc\":\n                dispatch(openViewer(\"doc\", selected[0], isShare));\n                return;\n            case \"audio\":\n                dispatch(showAudioPreview(selected[0]));\n                return;\n            case \"video\":\n                dispatch(openViewer(\"video\", selected[0], isShare));\n                return;\n            case \"pdf\":\n                dispatch(openViewer(\"pdf\", selected[0], isShare));\n                return;\n            case \"edit\":\n                dispatch(openViewer(\"text\", selected[0], isShare));\n                return;\n            case \"code\":\n                dispatch(openViewer(\"code\", selected[0], isShare));\n                return;\n            case \"epub\":\n                dispatch(openViewer(\"epub\", selected[0], isShare));\n                return;\n            default:\n                dispatch(startDownload(share, selected[0]));\n                return;\n        }\n    };\n};\nexport const selectFile = (file: any, event: any, fileIndex: any) => {\n    const { ctrlKey, metaKey, shiftKey } = event;\n    return (dispatch: any, getState: any) => {\n        // 多种组合操作忽略\n        if (\n            [ctrlKey, shiftKey].filter(Boolean).length > 1 ||\n            [metaKey, shiftKey].filter(Boolean).length > 1\n        ) {\n            return;\n        }\n        const isMacbook = isMac();\n        const { explorer } = getState();\n        const { selected, lastSelect, dirList, fileList, shiftSelectedIds } =\n            explorer;\n        if (shiftKey && !ctrlKey && !metaKey && selected.length !== 0) {\n            // shift 多选\n            // 取消原有选择\n            dispatch(removeSelectedTargets(selected.map((v: any) => v.id)));\n            const all = [...dirList, ...fileList];\n            // 添加新选择\n            const begin = Math.min(lastSelect.index, fileIndex);\n            const end = Math.max(lastSelect.index, fileIndex);\n            const list = file.type === \"dir\" ? dirList : fileList;\n            const newShiftSelected = all.slice(begin, end + 1);\n            return dispatch(addSelectedTargets(newShiftSelected));\n        }\n        dispatch(setLastSelect(file, fileIndex));\n        dispatch(setShiftSelectedIds([]));\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\n            // Ctrl/Command 单击添加/删除\n            const presentIndex = selected.findIndex((value: any) => {\n                return value.id === file.id;\n            });\n            if (presentIndex !== -1) {\n                return dispatch(removeSelectedTargets([file.id]));\n            }\n            return dispatch(addSelectedTargets([file]));\n        }\n        // 单选\n        return dispatch(setSelectedTarget([file]));\n    };\n};\n\nexport const submitCompressTask = (fileName: string, path: string) => {\n    return async (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n        } = getState();\n        const dirs: string[] = [],\n            items: string[] = [];\n        // eslint-disable-next-line\n        selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        return await API.post(\"/file/compress\", {\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            name: fileName,\n            dst: path === \"//\" ? \"/\" : path,\n        });\n    };\n};\n\nconst encodings = [\n    \"ibm866\",\n    \"iso8859_2\",\n    \"iso8859_3\",\n    \"iso8859_4\",\n    \"iso8859_5\",\n    \"iso8859_6\",\n    \"iso8859_7\",\n    \"iso8859_8\",\n    \"iso8859_8I\",\n    \"iso8859_10\",\n    \"iso8859_13\",\n    \"iso8859_14\",\n    \"iso8859_15\",\n    \"iso8859_16\",\n    \"koi8r\",\n    \"koi8u\",\n    \"macintosh\",\n    \"windows874\",\n    \"windows1250\",\n    \"windows1251\",\n    \"windows1252\",\n    \"windows1253\",\n    \"windows1254\",\n    \"windows1255\",\n    \"windows1256\",\n    \"windows1257\",\n    \"windows1258\",\n    \"macintoshcyrillic\",\n    \"gbk\",\n    \"big5\",\n    \"eucjp\",\n    \"iso2022jp\",\n    \"shiftjis\",\n    \"euckr\",\n    \"utf16be\",\n    \"utf16le\",\n];\n\nexport const submitDecompressTask = (path: string) => {\n    return async (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n        } = getState();\n\n        let encoding = \"\";\n        if (selected.length > 0 && encodingRequired(selected[0].name)) {\n            let option: any;\n            try {\n                const allOptions = encodings.map((e) => {\n                    return {\n                        key: e,\n                        name: e.toUpperCase(),\n                    };\n                });\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"\",\n                                name: i18next.t(\"modals.defaultEncoding\"),\n                            },\n                            {\n                                key: \"gb18030\",\n                                name: \"GB18030\",\n                                description: i18next.t(\n                                    \"modals.chineseMajorEncoding\"\n                                ),\n                            },\n                            ...allOptions,\n                        ],\n                        i18next.t(\"modals.selectEncoding\")\n                    )\n                );\n            } catch (e) {\n                throw new Error(i18next.t(\"modals.noEncodingSelected\"));\n            }\n\n            encoding = option.key;\n        }\n\n        return await API.post(\"/file/decompress\", {\n            src: filePath(selected[0]),\n            dst: path === \"//\" ? \"/\" : path,\n            encoding: encoding,\n        });\n    };\n};\n\nexport const batchGetSource = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n\n        if (selected.findIndex((f) => f.type === \"dir\") >= 0) {\n            dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\n        }\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, null);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.listingFileError\", {\n                        message: e.message,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.generatingSourceLinks\")));\n\n        const items = queue\n            .filter((value) => value.source_enabled && value.type === \"file\")\n            .map((v) => v.id);\n\n        if (items.length === 0) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.noFileCanGenerateSourceLink\"),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        const user = Auth.GetUser();\n        if (items.length > user.group.sourceBatch) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"modals.sourceBatchSizeExceeded\", {\n                        limit: user.group.sourceBatch,\n                    }),\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        API.post(\"/file/source\", { items: items })\n            .then((response) => {\n                dispatch(closeAllModals());\n                if (response.data.length == 1 && response.data[0].error) {\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            response.data[0].error,\n                            \"warning\"\n                        )\n                    );\n                    return;\n                }\n\n                dispatch(\n                    openGetSourceDialog(\n                        response.data.length == 1\n                            ? response.data[0].url\n                            : response.data\n                                  .map(\n                                      (res) =>\n                                          `${res.name}: ${res.url}${\n                                              res.error ? res.error : \"\"\n                                          }`\n                                  )\n                                  .join(\"\\n\")\n                    )\n                );\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"warning\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n\nexport const openTorrentDownload = (): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const {\n            explorer: { selected },\n        } = getState();\n        dispatch(openTorrentDownloadDialog(selected[0]));\n    };\n};\n\nexport const openParentFolder = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        const {\n            explorer: { selected },\n        } = getState();\n\n        dispatch(openLoadingDialog(i18next.t(\"modals.processing\")));\n        API.get(\n            \"/object/property/\" +\n            selected[0].id +\n            \"?trace_root=true&is_folder=\" +\n            (selected[0].type === \"dir\").toString()\n        )\n            .then((response) => {\n                const path =\n                    response.data.path === \"\"\n                        ? selected[0].path\n                        : response.data.path;\n                dispatch(navigateTo(path));\n                dispatch(closeAllModals());\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"warning\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../utils\";\n\nimport {\n    Divider,\n    LinearProgress,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\",\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\",\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"11px\",\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\",\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\",\n        },\n        marginTop: \"5px\",\n    },\n    bar: {\n        marginTop: \"5px\",\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper,\n    },\n});\n\n// TODO 使用 hooks 重构\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false,\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then((response) => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        this.props.t(\"navbar.exceedQuota\"),\n                        \"warning\"\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total),\n                });\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            <Typography variant={\"subtitle2\"}>\n                                {t(\"navbar.storage\")}\n                            </Typography>\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={t(\"navbar.storageDetail\", {\n                                        used:\n                                            this.state.used === null\n                                                ? \" -- \"\n                                                : this.state.used,\n                                        total:\n                                            this.state.total === null\n                                                ? \" -- \"\n                                                : this.state.total,\n                                    })}\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        {\" / \"}\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(StorageBarCompoment))));\n\nexport default StorageBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { setUserPopover } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\",\n    },\n    nickName: {\n        color: \"#fff\",\n        marginTop: \"15px\",\n        fontSize: \"17px\",\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    groupName: {\n        color: \"#ffffff\",\n        opacity: \"0.54\",\n    },\n    storageCircle: {\n        width: \"200px\",\n    },\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    {/* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\" />\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin ? user.nickname : t(\"navbar.notLoginIn\")}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin ? user.group.name : t(\"navbar.visitor\")}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withTranslation()(UserInfoCompoment)));\n\nexport default UserInfo;\n","import React, { Suspense, useCallback, useState } from \"react\";\nimport {\n    Divider,\n    List,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles,\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport Folder from \"@material-ui/icons/Folder\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    FolderHeartOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    TagPlus,\n    Triangle,\n    TriangleOutline,\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ListItem = withStyles((theme) => ({\n    root: {\n        borderRadius:theme.shape.borderRadius,\n    },\n}))(MuiListItem);\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles((theme) =>({\n    root: {\n        minHeight: 0,\n        padding: 0,\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n}))(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\",\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    hiddenButton: {\n        display: \"none\",\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2),\n    },\n    overFlow: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    paddingList:{\n        padding:theme.spacing(1),\n    },\n    paddingSummary:{\n        paddingLeft:theme.spacing(1),\n        paddingRight:theme.spacing(1),\n    }\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline,\n    Folder:Folder\n};\n\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\n\nexport default function FileTag() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal, setAddTagModal] = useState(false);\n    const [tagHover, setTagHover] = useState(null);\n    const [tags, setTags] = useState(\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\n    );\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback((k, p) => dispatch(searchMyFile(k, p)), [\n        dispatch,\n    ]);\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            const IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color,\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = (tag) => {\n        const newTags = [...tags, tag];\n        setTags(newTags);\n        const user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = (id) => {\n        API.delete(\"/tag/\" + id)\n            .then(() => {\n                const newTags = tags.filter((v) => {\n                    return v.id !== id;\n                });\n                setTags(newTags);\n                const user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag\n                    onSuccess={submitSuccess}\n                    open={addTagModal}\n                    onClose={() => setAddTagModal(false)}\n                />\n            </Suspense>\n            <ExpansionPanel\n                square\n                expanded={tagOpen && isHomePage}\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.paddingSummary}>\n                        <ListItem\n                            button\n                            key=\"我的文件\"\n                            onClick={() =>\n                                !isHomePage && history.push(\"/home?path=%2F\")\n                            }\n                        >\n                            <ListItemIcon>\n                                <KeyboardArrowRight\n                                    className={classNames(\n                                        {\n                                            [classes.expanded]:\n                                            tagOpen && isHomePage,\n                                            [classes.iconFix]: true,\n                                        },\n                                        classes.expand\n                                    )}\n                                />\n                                {!(tagOpen && isHomePage) && (\n                                    <FolderShared className={classes.iconFix} />\n                                )}\n                            </ListItemIcon>\n                            <ListItemText primary={t(\"navbar.myFiles\")} />\n                        </ListItem>\n                    </div>\n\n                    <Divider />\n                </ExpansionPanelSummary>\n\n                <ExpansionPanelDetails>\n                    <List className={classes.paddingList} onMouseLeave={() => setTagHover(null)}>\n                        {tags.map((v) => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={() => setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id, \"\");\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"Folder\",\n                                        v.type === 0 ? v.color : null\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    className={classes.overFlow}\n                                    primary={v.name}\n                                />\n\n                                {tagHover === v.id && (\n                                    <ListItemSecondaryAction\n                                        onClick={() => submitDelete(v.id)}\n                                    >\n                                        <IconButton\n                                            size={\"small\"}\n                                            edge=\"end\"\n                                            aria-label=\"delete\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        ))}\n\n                        <ListItem button onClick={() => setAddTagModal(true)}>\n                            <CreateNewFolderIcon className={classes.subMenu}>\n                                <TagPlus className={classes.iconFix} />\n                            </CreateNewFolderIcon>\n                            <ListItemText primary={t(\"navbar.addATag\")} />\n                        </ListItem>\n                    </List>{\" \"}\n                    <Divider />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport { PhotoSlider } from \"react-photo-view\";\nimport \"react-photo-view/dist/index.css\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport { showImgPreivew } from \"../../redux/explorer\";\n\nconst styles = () => ({});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newImg = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex: firstOne,\n                    items: items,\n                    isOpen: true,\n                });\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newImg = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex: firstOne,\n                items: items,\n                isOpen: true,\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen, items } = this.state;\n\n        return (\n            <div>\n                {isOpen && (\n                    <PhotoSlider\n                        images={items}\n                        visible={isOpen}\n                        onClose={() => this.handleClose()}\n                        index={photoIndex}\n                        onIndexChange={(n) =>\n                            this.setState({\n                                photoIndex: n,\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","import { ChunkProgress } from \"./uploader/chunk\";\n\nexport enum PolicyType {\n    local = \"local\",\n    remote = \"remote\",\n    oss = \"oss\",\n    qiniu = \"qiniu\",\n    onedrive = \"onedrive\",\n    cos = \"cos\",\n    upyun = \"upyun\",\n    s3 = \"s3\",\n}\n\nexport interface Policy {\n    id: number;\n    name: string;\n    allowedSuffix: Nullable<string[]>;\n    maxSize: number;\n    type: PolicyType;\n}\n\nexport enum TaskType {\n    file,\n    resumeHint,\n}\n\nexport interface Task {\n    type: TaskType;\n    name: string;\n    size: number;\n    policy: Policy;\n    dst: string;\n    file: File;\n    child?: Task[];\n    session?: UploadCredential;\n    chunkProgress: ChunkProgress[];\n    resumed: boolean;\n}\n\ntype Nullable<T> = T | null;\n\nexport interface Response<T> {\n    code: number;\n    data: T;\n    msg: string;\n    error: string;\n}\n\nexport interface UploadSessionRequest {\n    path: string;\n    size: number;\n    name: string;\n    policy_id: number;\n    last_modified?: number;\n}\n\nexport interface UploadCredential {\n    sessionID: string;\n    expires: number;\n    chunkSize: number;\n    uploadURLs: string[];\n    credential: string;\n    uploadID: string;\n    callback: string;\n    policy: string;\n    ak: string;\n    keyTime: string;\n    path: string;\n    completeURL: string;\n}\n\nexport interface OneDriveError {\n    error: {\n        code: string;\n        message: string;\n        innererror?: {\n            code: string;\n        };\n        retryAfterSeconds?: number;\n    };\n}\n\nexport interface OneDriveChunkResponse {\n    expirationDateTime: string;\n    nextExpectedRanges: string[];\n}\n\nexport interface QiniuChunkResponse {\n    etag: string;\n    md5: string;\n}\n\nexport interface QiniuError {\n    error: string;\n}\n\nexport interface QiniuPartsInfo {\n    etag: string;\n    partNumber: number;\n}\n\nexport interface QiniuFinishUploadRequest {\n    parts: QiniuPartsInfo[];\n}\n\nexport interface UpyunError {\n    message: string;\n    code: number;\n}\n\nexport interface S3Part {\n    ETag: string;\n    PartNumber: number;\n}\n","// 所有 Uploader 的基类\nimport { PolicyType, Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\nimport { validate } from \"../utils/validator\";\nimport { CancelToken } from \"../utils/request\";\nimport axios, { CancelTokenSource } from \"axios\";\nimport { createUploadSession, deleteUploadSession } from \"../api\";\nimport * as utils from \"../utils\";\nimport { RequestCanceledError, UploaderError } from \"../errors\";\n\nexport enum Status {\n    added,\n    resumable,\n    initialized,\n    queued,\n    preparing,\n    processing,\n    finishing,\n    finished,\n    error,\n    canceled,\n}\n\nexport interface UploadHandlers {\n    onTransition: (newStatus: Status) => void;\n    onError: (err: Error) => void;\n    onProgress: (data: UploadProgress) => void;\n    onMsg: (msg: string, color: string) => void;\n}\n\nexport interface UploadProgress {\n    total: ProgressCompose;\n    chunks?: ProgressCompose[];\n}\n\nexport interface ProgressCompose {\n    size: number;\n    loaded: number;\n    percent: number;\n    fromCache?: boolean;\n}\n\nexport interface Progress {\n    total: number;\n    loaded: number;\n}\n\nconst resumePolicy = [\n    PolicyType.local,\n    PolicyType.remote,\n    PolicyType.qiniu,\n    PolicyType.oss,\n    PolicyType.onedrive,\n    PolicyType.s3,\n];\nconst deleteUploadSessionDelay = 500;\n\nexport default abstract class Base {\n    public child?: Base[];\n    public status: Status = Status.added;\n    public error?: Error;\n\n    public id = ++Base.id;\n    private static id = 0;\n\n    protected logger: Logger;\n    protected subscriber: UploadHandlers;\n    // 用于取消请求\n    protected cancelToken: CancelTokenSource = CancelToken.source();\n    protected progress: UploadProgress;\n\n    public lastTime = Date.now();\n    public startTime = Date.now();\n\n    constructor(public task: Task, protected manager: UploadManager) {\n        this.logger = new Logger(\n            this.manager.logger.level,\n            \"UPLOADER\",\n            this.id\n        );\n        this.logger.info(\"Initialize new uploader for task: \", task);\n        this.subscriber = {\n            /* eslint-disable @typescript-eslint/no-empty-function */\n            onTransition: (newStatus: Status) => {},\n            onError: (err: Error) => {},\n            onProgress: (data: UploadProgress) => {},\n            onMsg: (msg, color: string) => {},\n            /* eslint-enable @typescript-eslint/no-empty-function */\n        };\n    }\n\n    public subscribe = (handlers: UploadHandlers) => {\n        this.subscriber = handlers;\n    };\n\n    public start = async () => {\n        this.logger.info(\"Activate uploading task\");\n        this.transit(Status.initialized);\n        this.lastTime = this.startTime = Date.now();\n\n        try {\n            validate(this.task.file, this.task.policy);\n        } catch (e) {\n            this.logger.error(\"File validate failed with error:\", e);\n            this.setError(e);\n            return;\n        }\n\n        this.logger.info(\"Enqueued in manager pool\");\n        this.transit(Status.queued);\n        this.manager.pool.enqueue(this).catch((e) => {\n            this.logger.info(\"Upload task failed with error:\", e);\n            this.setError(e);\n        });\n    };\n\n    public run = async () => {\n        this.logger.info(\"Start upload task, create upload session...\");\n        this.transit(Status.preparing);\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.session = await createUploadSession(\n                {\n                    path: this.task.dst,\n                    size: this.task.file.size,\n                    name: this.task.file.name,\n                    policy_id: this.task.policy.id,\n                    last_modified: this.task.file.lastModified,\n                },\n                this.cancelToken.token\n            );\n            this.logger.info(\"Upload session created:\", this.task.session);\n        } else {\n            this.task.session = cachedInfo.session;\n            this.task.resumed = true;\n            this.task.chunkProgress = cachedInfo.chunkProgress;\n            this.logger.info(\"Resume upload from cached ctx:\", cachedInfo);\n        }\n\n        this.transit(Status.processing);\n        await this.upload();\n        await this.afterUpload();\n        utils.removeResumeCtx(this.task, this.logger);\n        this.transit(Status.finished);\n        this.logger.info(\"Upload task completed\");\n    };\n\n    public abstract async upload(): Promise<any>;\n    protected async afterUpload(): Promise<any> {\n        return;\n    }\n\n    public cancel = async () => {\n        if (this.status === Status.finished) {\n            return;\n        }\n\n        this.cancelToken.cancel();\n        await this.cancelUploadSession();\n        this.transit(Status.canceled);\n    };\n\n    public reset = () => {\n        this.cancelToken = axios.CancelToken.source();\n        this.progress = {\n            total: {\n                size: 0,\n                loaded: 0,\n                percent: 0,\n            },\n        };\n    };\n\n    protected setError(e: Error) {\n        if (\n            !(e instanceof UploaderError && e.Retryable()) ||\n            !resumePolicy.includes(this.task.policy.type)\n        ) {\n            this.logger.warn(\"Non-resume error occurs, clean resume ctx cache\");\n            this.cancelUploadSession();\n        }\n\n        if (!(e instanceof RequestCanceledError)) {\n            this.status = Status.error;\n            this.error = e;\n            this.subscriber.onError(e);\n        }\n    }\n\n    protected cancelUploadSession = (): Promise<void> => {\n        return new Promise<void>((resolve) => {\n            utils.removeResumeCtx(this.task, this.logger);\n            if (this.task.session) {\n                setTimeout(() => {\n                    deleteUploadSession(this.task.session!?.sessionID)\n                        .catch((e) => {\n                            this.logger.warn(\n                                \"Failed to cancel upload session: \",\n                                e\n                            );\n                        })\n                        .finally(() => {\n                            resolve();\n                        });\n                }, deleteUploadSessionDelay);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    protected transit(status: Status) {\n        this.status = status;\n        this.subscriber.onTransition(status);\n    }\n\n    public getProgressInfoItem(\n        loaded: number,\n        size: number,\n        fromCache?: boolean\n    ): ProgressCompose {\n        return {\n            size,\n            loaded,\n            percent: (loaded / size) * 100,\n            ...(fromCache == null ? {} : { fromCache }),\n        };\n    }\n\n    public key(): string {\n        return utils.getResumeCtxKey(this.task);\n    }\n}\n","export type LogLevel = \"INFO\" | \"WARN\" | \"ERROR\" | \"OFF\";\n\nexport default class Logger {\n    constructor(\n        public level: LogLevel = \"OFF\",\n        private prefix = \"UPLOAD\",\n        private id: number = 1\n    ) {}\n\n    private getPrintPrefix(level: LogLevel) {\n        return `Cloudreve-Uploader [${level}][${this.prefix}#${this.id}]:`;\n    }\n\n    info(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.log(this.getPrintPrefix(\"INFO\"), ...args);\n        }\n    }\n\n    warn(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.warn(this.getPrintPrefix(\"WARN\"), ...args);\n        }\n    }\n\n    error(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\", \"ERROR\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.error(this.getPrintPrefix(\"ERROR\"), ...args);\n        }\n    }\n}\n","import {\n    OneDriveChunkResponse,\n    QiniuChunkResponse,\n    QiniuFinishUploadRequest,\n    QiniuPartsInfo,\n    S3Part,\n    UploadCredential,\n    UploadSessionRequest,\n} from \"../types\";\nimport { OBJtoXML, request, requestAPI } from \"../utils\";\nimport {\n    COSUploadCallbackError,\n    COSUploadError,\n    CreateUploadSessionError,\n    DeleteUploadSessionError,\n    HTTPError,\n    LocalChunkUploadError,\n    OneDriveChunkError,\n    OneDriveFinishUploadError,\n    QiniuChunkError,\n    QiniuFinishUploadError,\n    S3LikeChunkError,\n    S3LikeFinishUploadError,\n    S3LikeUploadCallbackError,\n    SlaveChunkUploadError,\n    UpyunUploadError,\n} from \"../errors\";\nimport { ChunkInfo, ChunkProgress } from \"../uploader/chunk\";\nimport { Progress } from \"../uploader/base\";\nimport { CancelToken } from \"axios\";\n\nexport async function createUploadSession(\n    req: UploadSessionRequest,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\"file/upload\", {\n        method: \"put\",\n        data: req,\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new CreateUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function deleteUploadSession(id: string): Promise<any> {\n    const res = await requestAPI<UploadCredential>(`file/upload/${id}`, {\n        method: \"delete\",\n    });\n\n    if (res.data.code != 0) {\n        throw new DeleteUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function localUploadChunk(\n    sessionID: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(\n        `file/upload/${sessionID}/${chunk.index}`,\n        {\n            method: \"post\",\n            headers: { \"content-type\": \"application/octet-stream\" },\n            data: chunk.chunk,\n            onUploadProgress: (progressEvent) => {\n                onProgress({\n                    loaded: progressEvent.loaded,\n                    total: progressEvent.total,\n                });\n            },\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new LocalChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function slaveUploadChunk(\n    url: string,\n    credential: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await request<any>(`${url}?chunk=${chunk.index}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            Authorization: credential,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new SlaveChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function oneDriveUploadChunk(\n    url: string,\n    range: string, // if range is empty, this will be an request to query the session status\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<OneDriveChunkResponse> {\n    const res = await request<OneDriveChunkResponse>(url, {\n        method: range === \"\" ? \"get\" : \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            ...(range !== \"\" && { \"content-range\": range }),\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new OneDriveChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function finishOneDriveUpload(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\n        `callback/onedrive/finish/${sessionID}`,\n        {\n            method: \"post\",\n            data: \"{}\",\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new OneDriveFinishUploadError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function s3LikeUploadChunk(\n    url: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<string> {\n    const res = await request<string>(url, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.headers.etag;\n}\n\nexport async function s3LikeFinishUpload(\n    url: string,\n    isOss: boolean,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    let body = \"\";\n    if (!isOss) {\n        body += \"<CompleteMultipartUpload>\";\n        chunks.forEach((chunk) => {\n            body += \"<Part>\";\n            const part: S3Part = {\n                PartNumber: chunk.index + 1,\n                ETag: chunk.etag!,\n            };\n            body += OBJtoXML(part);\n            body += \"</Part>\";\n        });\n        body += \"</CompleteMultipartUpload>\";\n    }\n\n    const res = await request<any>(url, {\n        method: \"post\",\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n        data: body,\n        headers: isOss\n            ? {\n                  \"content-type\": \"application/octet-stream\",\n                  \"x-oss-forbid-overwrite\": \"true\",\n                  \"x-oss-complete-all\": \"yes\",\n              }\n            : {\n                  \"content-type\": \"application/xhtml+xml\",\n              },\n        validateStatus: function (status) {\n            return status == 200;\n        },\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuDriveUploadChunk(\n    url: string,\n    upToken: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<QiniuChunkResponse> {\n    const res = await request<QiniuChunkResponse>(`${url}/${chunk.index + 1}`, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuFinishUpload(\n    url: string,\n    upToken: string,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    const content: QiniuFinishUploadRequest = {\n        parts: chunks.map(\n            (chunk): QiniuPartsInfo => {\n                return {\n                    etag: chunk.etag!,\n                    partNumber: chunk.index + 1,\n                };\n            }\n        ),\n    };\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/json\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: content,\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    path: string,\n    callback: string,\n    sessionID: string,\n    keyTime: string,\n    credential: string,\n    ak: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"key\", path);\n    bodyFormData.append(\"x-cos-meta-callback\", callback);\n    bodyFormData.append(\"x-cos-meta-key\", sessionID);\n    bodyFormData.append(\"q-sign-algorithm\", \"sha1\");\n    bodyFormData.append(\"q-key-time\", keyTime);\n    bodyFormData.append(\"q-ak\", ak);\n    bodyFormData.append(\"q-signature\", credential);\n    bodyFormData.append(\"name\", file.name);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new COSUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/cos/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new COSUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function upyunFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    credential: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"authorization\", credential);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new UpyunUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function s3LikeUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/s3/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new S3LikeUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n","import { Policy, PolicyType, Task, TaskType } from \"./types\";\nimport Logger, { LogLevel } from \"./logger\";\nimport { UnknownPolicyError, UploaderError, UploaderErrorName } from \"./errors\";\nimport Base from \"./uploader/base\";\nimport Local from \"./uploader/local\";\nimport { Pool } from \"./utils/pool\";\nimport {\n    cleanupResumeCtx,\n    getAllFileEntries,\n    getDirectoryUploadDst,\n    getFileInput,\n    isFileDrop,\n    listResumeCtx,\n} from \"./utils\";\nimport Remote from \"./uploader/remote\";\nimport OneDrive from \"./uploader/onedrive\";\nimport OSS from \"./uploader/oss\";\nimport Qiniu from \"./uploader/qiniu\";\nimport COS from \"./uploader/cos\";\nimport Upyun from \"./uploader/upyun\";\nimport S3 from \"./uploader/s3\";\nimport ResumeHint from \"./uploader/placeholder\";\n\nexport interface Option {\n    logLevel: LogLevel;\n    concurrentLimit: number;\n    dropZone?: HTMLElement;\n    onDropOver?: (e: DragEvent) => void;\n    onDropLeave?: (e: DragEvent) => void;\n    onToast: (type: string, msg: string) => void;\n    onDropFileAdded?: (uploaders: Base[]) => void;\n}\n\nexport enum SelectType {\n    File,\n    Directory,\n}\n\nexport default class UploadManager {\n    public logger: Logger;\n    public pool: Pool;\n    private static id = 0;\n    private policy?: Policy;\n    private fileInput: HTMLInputElement;\n    private directoryInput: HTMLInputElement;\n    private id = ++UploadManager.id;\n    // used for proactive upload (drop, paste)\n    private currentPath = \"/\";\n\n    constructor(private o: Option) {\n        this.logger = new Logger(o.logLevel, \"MANAGER\");\n        this.logger.info(`Initialized with log level: ${o.logLevel}`);\n\n        this.pool = new Pool(o.concurrentLimit);\n        this.fileInput = getFileInput(this.id, false);\n        this.directoryInput = getFileInput(this.id, true);\n\n        if (o.dropZone) {\n            this.logger.info(`Drag and drop container set to:`, o.dropZone);\n            o.dropZone.addEventListener(\"dragenter\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropOver) {\n                        o.onDropOver(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"dragleave\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropLeave) {\n                        o.onDropLeave(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"drop\", this.onFileDroppedIn);\n        }\n    }\n\n    changeConcurrentLimit = (newLimit: number) => {\n        this.pool.limit = newLimit;\n    };\n\n    dispatchUploader(task: Task): Base {\n        if (task.type == TaskType.resumeHint) {\n            return new ResumeHint(task, this);\n        }\n\n        switch (task.policy.type) {\n            case PolicyType.local:\n                return new Local(task, this);\n            case PolicyType.remote:\n                return new Remote(task, this);\n            case PolicyType.onedrive:\n                return new OneDrive(task, this);\n            case PolicyType.oss:\n                return new OSS(task, this);\n            case PolicyType.qiniu:\n                return new Qiniu(task, this);\n            case PolicyType.cos:\n                return new COS(task, this);\n            case PolicyType.upyun:\n                return new Upyun(task, this);\n            case PolicyType.s3:\n                return new S3(task, this);\n            default:\n                throw new UnknownPolicyError(\n                    \"Unknown policy type.\",\n                    task.policy\n                );\n        }\n    }\n\n    // 设定当前存储策略\n    public setPolicy(p: Policy, path: string) {\n        this.policy = p;\n        this.currentPath = path;\n        if (p == undefined) {\n            this.logger.info(`Currently no policy selected`);\n            return;\n        }\n\n        this.logger.info(`Switching policy to:`, p);\n\n        if (p.allowedSuffix != undefined && p.allowedSuffix.length > 0) {\n            const acceptVal = p.allowedSuffix\n                .map((v) => {\n                    return \".\" + v;\n                })\n                .join(\",\");\n            this.logger.info(`Set allowed file suffix to ${acceptVal}`);\n            this.fileInput.setAttribute(\"accept\", acceptVal);\n        } else {\n            this.logger.info(`Set allowed file suffix to *`);\n            this.fileInput.removeAttribute(\"accept\");\n        }\n    }\n\n    // 选择文件\n    public select = (dst: string, type = SelectType.File): Promise<Base[]> => {\n        return new Promise<Base[]>((resolve) => {\n            if (this.policy == undefined) {\n                this.logger.warn(\n                    `Calling file selector while no policy is set`\n                );\n                throw new UploaderError(\n                    UploaderErrorName.NoPolicySelected,\n                    \"No policy selected.\"\n                );\n            }\n\n            this.fileInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.directoryInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.fileInput.value = \"\";\n            this.directoryInput.value = \"\";\n            type == SelectType.File\n                ? this.fileInput.click()\n                : this.directoryInput.click();\n        });\n    };\n\n    public resumeTasks = (): Base[] => {\n        const tasks = listResumeCtx(this.logger);\n        if (tasks.length > 0) {\n            this.logger.info(\n                `Resumed ${tasks.length} unfinished task(s) from local storage:`,\n                tasks\n            );\n        }\n        return tasks\n            .filter(\n                (t) =>\n                    t.chunkProgress.length > 0 && t.chunkProgress[0].loaded > 0\n            )\n            .map((t) =>\n                this.dispatchUploader({ ...t, type: TaskType.resumeHint })\n            );\n    };\n\n    public cleanupSessions = () => {\n        cleanupResumeCtx(this.logger);\n    };\n\n    private fileSelectCallback = (\n        ev: Event | File[],\n        dst: string,\n        resolve: (value?: Base[] | PromiseLike<Base[]> | undefined) => void\n    ) => {\n        let files: File[] = [];\n        if (ev instanceof Event) {\n            const target = ev.target as HTMLInputElement;\n            if (!ev || !target || !target.files) return;\n            if (target.files.length > 0) {\n                files = Array.from(target.files);\n            }\n        } else {\n            files = ev as File[];\n        }\n\n        if (files.length > 0) {\n            resolve(\n                files.map(\n                    (file): Base =>\n                        this.dispatchUploader({\n                            type: TaskType.file,\n                            policy: this.policy as Policy,\n                            dst: getDirectoryUploadDst(dst, file),\n                            file: file,\n                            size: file.size,\n                            name: file.name,\n                            chunkProgress: [],\n                            resumed: false,\n                        })\n                )\n            );\n        }\n    };\n\n    private onFileDroppedIn = async (e: DragEvent) => {\n        const containFile =\n            e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n        if (containFile) {\n            this.o.onDropLeave && this.o.onDropLeave(e);\n            const items = await getAllFileEntries(e.dataTransfer!.items);\n            console.log(items);\n            const uploaders = await new Promise<Base[]>((resolve) =>\n                this.fileSelectCallback(items, this.currentPath, resolve)\n            );\n            this.o.onDropFileAdded && this.o.onDropFileAdded(uploaders);\n        }\n    };\n}\n","import Base, { Status, UploadProgress } from \"./base\";\nimport * as utils from \"../utils\";\nimport { Task, TaskType } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\n\nexport interface ChunkProgress {\n    loaded: number;\n    index: number;\n    etag?: string;\n}\n\nexport interface ChunkInfo {\n    chunk: Blob;\n    index: number;\n}\n\nexport default abstract class Chunk extends Base {\n    protected chunks: Blob[];\n\n    public upload = async () => {\n        this.logger.info(\"Preparing uploading file chunks.\");\n        this.initBeforeUploadChunks();\n\n        this.logger.info(\"Starting uploading file chunks:\", this.chunks);\n        this.updateLocalCache();\n        for (let i = 0; i < this.chunks.length; i++) {\n            if (\n                this.task.chunkProgress[i].loaded < this.chunks[i].size ||\n                this.chunks[i].size == 0\n            ) {\n                await this.uploadChunk({ chunk: this.chunks[i], index: i });\n                this.logger.info(`Chunk [${i}] uploaded.`);\n                this.updateLocalCache();\n            }\n        }\n    };\n\n    private initBeforeUploadChunks() {\n        this.chunks = utils.getChunks(\n            this.task.file,\n            this.task.session?.chunkSize\n        );\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.chunkProgress = this.chunks.map(\n                (value, index): ChunkProgress => ({\n                    loaded: 0,\n                    index,\n                })\n            );\n        }\n\n        this.notifyResumeProgress();\n    }\n\n    protected abstract async uploadChunk(chunkInfo: ChunkInfo): Promise<any>;\n\n    protected updateChunkProgress(loaded: number, index: number) {\n        this.task.chunkProgress[index].loaded = loaded;\n        this.notifyResumeProgress();\n    }\n\n    private notifyResumeProgress() {\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.file.size + 1\n            ),\n            chunks: this.chunks.map((chunk, index) => {\n                return this.getProgressInfoItem(\n                    this.task.chunkProgress[index].loaded,\n                    chunk.size,\n                    false\n                );\n            }),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    private updateLocalCache() {\n        utils.setResumeCtx(this.task, this.logger);\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { localUploadChunk } from \"../api\";\n\nexport default class Local extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return localUploadChunk(\n            this.task.session?.sessionID!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { slaveUploadChunk } from \"../api\";\n\nexport default class Remote extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return slaveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { finishOneDriveUpload, oneDriveUploadChunk } from \"../api\";\nimport { OneDriveChunkError, OneDriveEmptyFileSelected } from \"../errors\";\nimport { Status } from \"./base\";\n\nexport default class OneDrive extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        if (chunkInfo.chunk.size === 0) {\n            throw new OneDriveEmptyFileSelected();\n        }\n\n        const rangeEnd = this.progress.total.loaded + chunkInfo.chunk.size - 1;\n        return this.sendRange(\n            chunkInfo,\n            this.progress.total.loaded,\n            rangeEnd,\n            0\n        ).catch((e) => {\n            if (\n                e instanceof OneDriveChunkError &&\n                e.response.error.innererror &&\n                e.response.error.innererror.code == \"fragmentOverlap\"\n            ) {\n                return this.alignChunkOffset(chunkInfo);\n            }\n\n            throw e;\n        });\n    }\n\n    private async sendRange(\n        chunkInfo: ChunkInfo,\n        start: number,\n        end: number,\n        chunkOffset: number\n    ) {\n        const range = `bytes ${start}-${end}/${this.task.file.size}`;\n        return oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            range,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(\n                    chunkOffset + p.loaded,\n                    chunkInfo.index\n                );\n            },\n            this.cancelToken.token\n        );\n    }\n\n    private async alignChunkOffset(chunkInfo: ChunkInfo) {\n        this.logger.info(\n            `Chunk [${chunkInfo.index}] overlapped, checking next expected range...`\n        );\n        const rangeStatus = await oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            \"\",\n            chunkInfo,\n            (p) => {\n                return null;\n            },\n            this.cancelToken.token\n        );\n        const expectedStart = parseInt(\n            rangeStatus.nextExpectedRanges[0].split(\"-\")[0]\n        );\n        this.logger.info(\n            `Next expected range start from OneDrive is ${expectedStart}.`\n        );\n\n        if (expectedStart >= this.progress.total.loaded) {\n            this.logger.info(`This whole chunk is overlapped, skipping...`);\n            this.updateChunkProgress(chunkInfo.chunk.size, chunkInfo.index);\n            return;\n        } else {\n            this.updateChunkProgress(0, chunkInfo.index);\n            const rangeEnd =\n                this.progress.total.loaded + chunkInfo.chunk.size - 1;\n            const newChunkOffset = expectedStart - this.progress.total.loaded;\n            chunkInfo.chunk = chunkInfo.chunk.slice(newChunkOffset);\n            this.updateChunkProgress(newChunkOffset, chunkInfo.index);\n            return this.sendRange(\n                chunkInfo,\n                expectedStart,\n                rangeEnd,\n                newChunkOffset\n            );\n        }\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing upload...`);\n        this.transit(Status.finishing);\n        return finishOneDriveUpload(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { s3LikeFinishUpload, s3LikeUploadChunk } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            true,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class Qiniu extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const chunkRes = await qiniuDriveUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = chunkRes.etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return qiniuFinishUpload(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Base, { Status } from \"./base\";\nimport { cosFormUploadChunk, cosUploadCallback } from \"../api\";\n\nexport default class COS extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await cosFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.path!,\n            this.task.session?.callback!,\n            this.task.session?.sessionID!,\n            this.task.session?.keyTime!,\n            this.task.session?.credential!,\n            this.task.session?.ak!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n\n    protected async afterUpload(): Promise<any> {\n        this.transit(Status.finishing);\n        this.logger.info(`Sending COS upload callback...`);\n        try {\n            await cosUploadCallback(\n                this.task.session!.sessionID,\n                this.cancelToken.token\n            );\n        } catch (e) {\n            this.logger.warn(`Failed to finish COS upload:`, e);\n        }\n    }\n}\n","import Base from \"./base\";\nimport { upyunFormUploadChunk } from \"../api\";\n\nexport default class Upyun extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await upyunFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.credential!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport {\n    s3LikeFinishUpload,\n    s3LikeUploadCallback,\n    s3LikeUploadChunk,\n} from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const etag = await s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        await s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            false,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n\n        this.logger.info(`Sending S3-like upload callback...`);\n        return s3LikeUploadCallback(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\nimport { Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport * as utils from \"../utils\";\n\nexport default class ResumeHint extends Chunk {\n    constructor(task: Task, manager: UploadManager) {\n        super(task, manager);\n        this.status = Status.resumable;\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.size + 1\n            ),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return null;\n    }\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Badge, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { FilePlus, FolderUpload } from \"mdi-material-ui\";\nimport { green } from \"@material-ui/core/colors\";\nimport { SelectType } from \"../Uploader/core\";\nimport {\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    \"@global\": {\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\n            whiteSpace: \"nowrap\",\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        bottom: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function UploadButton(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n    const path = useSelector((state) => state.navigator.path);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const OpenNewFolderDialog = useCallback(\n        () => dispatch(openCreateFolderDialog()),\n        [dispatch]\n    );\n    const OpenNewFileDialog = useCallback(\n        () => dispatch(openCreateFileDialog()),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                props.selectFile(path);\n            }\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const circularProgress = useMemo(() => {\n        if (props.progress.totalSize > 0) {\n            return (\n                <CircularProgress\n                    key={1}\n                    size={68}\n                    variant=\"determinate\"\n                    value={\n                        (props.progress.processedSize /\n                            props.progress.totalSize) *\n                        100\n                    }\n                    className={classes.fabProgress}\n                />\n            );\n        }\n    }, [classes, props.progress]);\n\n    return (\n        <AutoHidden enable hide={props.taskListOpen}>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge, // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    hidden={false}\n                    tooltipTitle={t(\"uploadFiles\")}\n                    icon={\n                        <SpeedDialIcon\n                            openIcon={\n                                !statusHelper.isMobile() && <PublishIcon />\n                            }\n                        />\n                    }\n                    onClose={handleClose}\n                    FabProps={{\n                        onClick: () =>\n                            !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\",\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                    ariaLabel={\"\"}\n                >\n                    {statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFile\"\n                            icon={<PublishIcon />}\n                            tooltipOpen\n                            tooltipTitle={t(\"uploadFiles\")}\n                            onClick={() => uploadClicked()}\n                            title={t(\"uploadFiles\")}\n                        />\n                    )}\n                    {!statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFolder\"\n                            icon={<FolderUpload />}\n                            tooltipOpen\n                            tooltipTitle={t(\"uploadFolder\")}\n                            onClick={() =>\n                                props.selectFile(path, SelectType.Directory)\n                            }\n                            title={t(\"uploadFolder\")}\n                        />\n                    )}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipOpen\n                        tooltipTitle={t(\"newFolder\")}\n                        onClick={() => OpenNewFolderDialog()}\n                        title={t(\"newFolder\")}\n                    />\n                    <SpeedDialAction\n                        key=\"NewFile\"\n                        icon={<FilePlus />}\n                        tooltipOpen\n                        tooltipTitle={t(\"newFile\")}\n                        onClick={() => OpenNewFileDialog()}\n                        title={t(\"newFile\")}\n                    />\n                </SpeedDial>\n                {circularProgress}\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport TimeAgo from \"timeago-react\";\nimport { Status } from \"../core/uploader/base\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        wordBreak: \"break-all\",\n    },\n}));\n\nexport default function TaskDetail({ uploader, navigateToDst, error }) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const items = [\n        {\n            name: t(\"uploader.fileName\"),\n            value: uploader.task.name,\n        },\n        {\n            name: t(\"uploader.fileSize\"),\n            value: `${sizeToString(uploader.task.size)} ${\n                uploader.task.session && uploader.task.session.chunkSize > 0\n                    ? t(\"uploader.chunkDescription\", {\n                          total: uploader.task.chunkProgress.length,\n                          size: sizeToString(uploader.task.session.chunkSize),\n                      })\n                    : t(\"uploader.noChunks\")\n            }`,\n        },\n        {\n            name: t(\"fileManager.storagePolicy\"),\n            value: uploader.task.policy.name,\n        },\n        {\n            name: t(\"uploader.destination\"),\n            value: (\n                <Link\n                    href={\"javascript:void\"}\n                    onClick={() => navigateToDst(uploader.task.dst)}\n                >\n                    {uploader.task.dst === \"/\"\n                        ? t(\"uploader.rootFolder\")\n                        : uploader.task.dst}\n                </Link>\n            ),\n        },\n        uploader.task.session\n            ? {\n                  name: t(\"uploader.uploadSession\"),\n                  value: (\n                      <>\n                          <Trans\n                              i18nKey=\"uploader.sessionExpiredIn\"\n                              components={[\n                                  <TimeAgo\n                                      key={0}\n                                      datetime={\n                                          uploader.task.session\n                                              ? uploader.task.session.expires *\n                                                1000\n                                              : 0\n                                      }\n                                      locale={t(\"timeAgoLocaleCode\", {\n                                          ns: \"common\",\n                                      })}\n                                  />,\n                              ]}\n                          />\n                      </>\n                  ),\n              }\n            : null,\n        uploader.status === Status.error\n            ? {\n                  name: t(\"uploader.errorDetails\"),\n                  value: error,\n              }\n            : null,\n    ];\n    return (\n        <Grid container>\n            {items.map((i) => (\n                <>\n                    {i && (\n                        <Grid key={i.name} container xs={12}>\n                            <Grid item xs={3} className={classes.infoTitle}>\n                                {i.name}\n                            </Grid>\n                            <Grid item xs={9} className={classes.infoValue}>\n                                {i.value}\n                            </Grid>\n                        </Grid>\n                    )}\n                </>\n            ))}\n        </Grid>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n    Divider,\n    Grow,\n    IconButton,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Tooltip,\n} from \"@material-ui/core\";\nimport TypeIcon from \"../../FileManager/TypeIcon\";\nimport { useUpload } from \"../UseUpload\";\nimport { Status } from \"../core/uploader/base\";\nimport { UploaderError } from \"../core/errors\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport TaskDetail from \"./TaskDetail\";\nimport { SelectType } from \"../core\";\nimport { navigateTo } from \"../../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9,\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n    progressContainer: {\n        position: \"relative\",\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    wordBreak: {\n        wordBreak: \"break-all\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    successStatus: {\n        color: theme.palette.success.main,\n    },\n    errorStatus: {\n        color: theme.palette.warning.main,\n        wordBreak: \"break-all\",\n        [theme.breakpoints.up(\"sm\")]: {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n        },\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n    delete: {\n        zIndex: 9,\n    },\n    dstLink: {\n        color: theme.palette.success.main,\n        fontWeight: 600,\n    },\n    fileNameContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n        display: \"block\",\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        paddingLeft: 16,\n        paddingRight: 16,\n        paddingTop: 8,\n        paddingBottom: 8,\n        display: \"block\",\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nconst getSpeedText = (speed, speedAvg, useSpeedAvg) => {\n    let displayedSpeed = speedAvg;\n    if (!useSpeedAvg) {\n        displayedSpeed = speed;\n    }\n\n    return `${sizeToString(displayedSpeed ? displayedSpeed : 0)} /s`;\n};\n\nconst getErrMsg = (error) => {\n    let errMsg = error.message;\n    if (error instanceof UploaderError) {\n        errMsg = error.Message(\"\");\n    }\n\n    return errMsg;\n};\n\nexport default function UploadTask({\n    uploader,\n    useAvgSpeed,\n    onCancel,\n    onClose,\n    selectFile,\n    onRefresh,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const [taskHover, setTaskHover] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const { status, error, progress, speed, speedAvg, retry } = useUpload(\n        uploader\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const navigateToDst = (path) => {\n        onClose(null, \"backdropClick\");\n        NavigateTo(path);\n    };\n\n    const toggleDetail = (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    useEffect(() => {\n        if (status >= Status.finished) {\n            onRefresh();\n        }\n    }, [status]);\n\n    const statusText = useMemo(() => {\n        const parent = filename(uploader.task.dst);\n        switch (status) {\n            case Status.added:\n            case Status.initialized:\n            case Status.queued:\n                return <div>{t(\"pendingInQueue\")}</div>;\n            case Status.preparing:\n                return <div>{t(\"preparing\")}</div>;\n            case Status.error:\n                return (\n                    <div className={classes.errorStatus}>\n                        {getErrMsg(error)}\n                        <br />\n                    </div>\n                );\n            case Status.finishing:\n                return <div>{t(\"processing\")}</div>;\n            case Status.resumable:\n                return (\n                    <div>\n                        {t(\"progressDescription\", {\n                            uploaded: sizeToString(progress.total.loaded),\n                            total: sizeToString(progress.total.size),\n                            percentage: progress.total.percent.toFixed(2),\n                        })}\n                    </div>\n                );\n            case Status.processing:\n                if (progress) {\n                    return (\n                        <div>\n                            {t(\"progressDescriptionFull\", {\n                                speed: getSpeedText(\n                                    speed,\n                                    speedAvg,\n                                    useAvgSpeed\n                                ),\n                                uploaded: sizeToString(progress.total.loaded),\n                                total: sizeToString(progress.total.size),\n                                percentage: progress.total.percent.toFixed(2),\n                            })}\n                        </div>\n                    );\n                }\n                return <div>{t(\"progressDescriptionPlaceHolder\")}</div>;\n            case Status.finished:\n                return (\n                    <div className={classes.successStatus}>\n                        {t(\"uploadedTo\")}\n                        <Tooltip title={uploader.task.dst}>\n                            <Link\n                                className={classes.dstLink}\n                                href={\"javascript:void\"}\n                                onClick={() => navigateToDst(uploader.task.dst)}\n                            >\n                                {parent === \"\" ? t(\"rootFolder\") : parent}\n                            </Link>\n                        </Tooltip>\n                        <br />\n                    </div>\n                );\n            default:\n                return <div>{t(\"unknownStatus\")}</div>;\n        }\n    }, [status, error, progress, speed, speedAvg, useAvgSpeed]);\n\n    const resumeLabel = useMemo(\n        () =>\n            uploader.task.resumed && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    label={t(\"resumed\")}\n                />\n            ) : null,\n        [status, fullScreen]\n    );\n\n    const continueLabel = useMemo(\n        () =>\n            status === Status.resumable && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    color={\"secondary\"}\n                    label={t(\"resumable\")}\n                />\n            ) : null,\n        [status, fullScreen]\n    );\n\n    const progressBar = useMemo(\n        () =>\n            (status === Status.processing ||\n                status === Status.finishing ||\n                status === Status.resumable) &&\n            progress ? (\n                <div\n                    style={{\n                        backgroundColor:\n                            theme.palette.type === \"light\"\n                                ? lighten(theme.palette.primary.main, 0.8)\n                                : darken(theme.palette.background.paper, 0.2),\n                        width: progress.total.percent + \"%\",\n                    }}\n                    className={classes.progress}\n                />\n            ) : null,\n        [status, progress, theme]\n    );\n\n    const taskDetail = useMemo(() => {\n        return (\n            <TaskDetail\n                error={error && getErrMsg(error)}\n                navigateToDst={navigateToDst}\n                uploader={uploader}\n            />\n        );\n    }, [uploader, expanded]);\n\n    const cancel = () => {\n        setLoading(true);\n        uploader.cancel().then(() => {\n            setLoading(false);\n            onCancel((u) => u.id != uploader.id);\n        });\n    };\n\n    const stopRipple = (e) => {\n        e.stopPropagation();\n    };\n\n    const secondaryAction = useMemo(() => {\n        if (!taskHover && !fullScreen) {\n            return <></>;\n        }\n\n        const actions = [\n            {\n                show: status === Status.error,\n                title: t(\"retry\"),\n                click: retry,\n                icon: <RefreshIcon />,\n                loading: false,\n            },\n            {\n                show: true,\n                title:\n                    status === Status.finished\n                        ? t(\"deleteTask\")\n                        : t(\"cancelAndDelete\"),\n                click: cancel,\n                icon: <DeleteIcon />,\n                loading: loading,\n            },\n            {\n                show: status === Status.resumable,\n                title: t(\"selectAndResume\"),\n                click: () =>\n                    selectFile(uploader.task.dst, SelectType.File, uploader),\n                icon: <PlayArrow />,\n                loading: false,\n            },\n        ];\n\n        return (\n            <>\n                {actions.map((a) => (\n                    <>\n                        {a.show && (\n                            <Grow in={a.show}>\n                                <Tooltip title={a.title}>\n                                    <IconButton\n                                        onMouseDown={stopRipple}\n                                        onTouchStart={stopRipple}\n                                        disabled={a.loading}\n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            a.click();\n                                        }}\n                                    >\n                                        {a.icon}\n                                    </IconButton>\n                                </Tooltip>\n                            </Grow>\n                        )}\n                    </>\n                ))}\n            </>\n        );\n    }, [status, loading, taskHover, fullScreen, uploader]);\n\n    const fileIcon = useMemo(() => {\n        if (!fullScreen) {\n            return <TypeIcon fileName={uploader.task.name} isUpload />;\n        }\n    }, [uploader, fullScreen]);\n\n    return (\n        <>\n            <ExpansionPanel square expanded={expanded} onChange={toggleDetail}>\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div\n                        className={classes.progressContainer}\n                        onMouseLeave={() => setTaskHover(false)}\n                        onMouseOver={() => setTaskHover(true)}\n                    >\n                        {progressBar}\n                        <ListItem className={classes.progressContent} button>\n                            {fileIcon}\n                            <ListItemText\n                                className={classes.listAction}\n                                primary={\n                                    <div className={classes.fileNameContainer}>\n                                        <div className={classes.wordBreak}>\n                                            {uploader.task.name}\n                                        </div>\n                                        <div>{resumeLabel}</div>\n                                        <div>{continueLabel}</div>\n                                    </div>\n                                }\n                                secondary={\n                                    <div className={classes.wordBreak}>\n                                        {statusText}\n                                    </div>\n                                }\n                            />\n                            {secondaryAction}\n                        </ListItem>\n                    </div>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>{taskDetail}</ExpansionPanelDetails>\n            </ExpansionPanel>\n            <Divider />\n        </>\n    );\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nexport function useUpload(uploader) {\n    const startLoadedRef = useRef(0);\n    const [status, setStatus] = useState(uploader.status);\n    const [error, setError] = useState(uploader.error);\n    const [progress, setProgress] = useState(uploader.progress);\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        /* eslint-disable @typescript-eslint/no-empty-function */\n        uploader.subscribe({\n            onTransition: (newStatus) => {\n                setStatus(newStatus);\n            },\n            onError: (err) => {\n                setError(err);\n                setStatus(uploader.status);\n            },\n            onProgress: (data) => {\n                setProgress(data);\n            },\n            onMsg: (msg, color) => {\n                ToggleSnackbar(\"top\", \"right\", msg, color);\n            },\n        });\n    }, []);\n\n    // 获取上传速度\n    const [speed, speedAvg] = React.useMemo(() => {\n        if (\n            progress == null ||\n            progress.total == null ||\n            progress.total.loaded == null\n        )\n            return [0, 0];\n        const duration = (Date.now() - (uploader.lastTime || 0)) / 1000;\n        const durationTotal = (Date.now() - (uploader.startTime || 0)) / 1000;\n        const res =\n            progress.total.loaded > startLoadedRef.current\n                ? Math.floor(\n                      (progress.total.loaded - startLoadedRef.current) /\n                          duration\n                  )\n                : 0;\n        const resAvg =\n            progress.total.loaded > 0\n                ? Math.floor(progress.total.loaded / durationTotal)\n                : 0;\n\n        startLoadedRef.current = progress.total.loaded;\n        uploader.lastTime = Date.now();\n        return [res, resAvg];\n    }, [progress]);\n\n    const retry = () => {\n        uploader.reset();\n        uploader.start();\n    };\n\n    return { status, error, progress, speed, speedAvg, retry };\n}\n","import React, { useState } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Input,\n    InputLabel,\n    makeStyles,\n} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function ConcurrentOptionDialog({ open, onClose, onSave }) {\n    const { t } = useTranslation();\n    const [count, setCount] = useState(\n        Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\n    );\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            fullWidth\n            maxWidth={\"xs\"}\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"uploader.setConcurrent\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel htmlFor=\"component-helper\">\n                        {t(\"uploader.concurrentTaskNumber\")}\n                    </InputLabel>\n                    <Input\n                        type={\"number\"}\n                        inputProps={{\n                            min: 1,\n                            step: 1,\n                            max: 20,\n                        }}\n                        value={count}\n                        onChange={(e) => setCount(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={count === \"\"}\n                        onClick={() => onSave(count)}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n    Tooltip,\n} from \"@material-ui/core\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../../middleware/Api\";\nimport { TaskType } from \"../core/types\";\nimport { refreshStorage, toggleSnackbar } from \"../../../redux/explorer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { DeleteEmpty } from \"mdi-material-ui\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ConcurrentOptionDialog from \"../../Modals/ConcurrentOption\";\nimport Auth from \"../../../middleware/Auth\";\nimport { ClearAll, Replay } from \"@material-ui/icons\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function MoreActions({\n    anchorEl,\n    onClose,\n    uploadManager,\n    deleteTask,\n    useAvgSpeed,\n    setUseAvgSpeed,\n    filter,\n    setFilter,\n    sorter,\n    setSorter,\n    cleanFinished,\n    retryFailed,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [concurrentDialog, setConcurrentDialog] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const RefreshStorage = useCallback(\n        () => dispatch(refreshStorage()),\n        [dispatch]\n    );\n\n    const actionClicked = (next) => () => {\n        onClose();\n        next();\n    };\n\n    const cleanupSessions = () => {\n        uploadManager.cleanupSessions();\n        API.delete(\"/file/upload\")\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"uploadSessionCleaned\"),\n                        \"success\"\n                    );\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                deleteTask((u) => u.task.type !== TaskType.resumeHint);\n                RefreshStorage();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? \"uploader-action-popover\" : undefined;\n\n    const listItems = useMemo(\n        () => [\n            {\n                tooltip: t(\"hideCompletedTooltip\"),\n                onClick: () =>\n                    setFilter(filter === \"default\" ? \"ongoing\" : \"default\"),\n                icon: filter !== \"default\" ? <CheckIcon /> : <Icon />,\n                text: t(\"hideCompleted\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"addTimeAscTooltip\"),\n                onClick: () => setSorter(\"default\"),\n                icon: sorter === \"default\" ? <CheckIcon /> : <Icon />,\n                text: t(\"addTimeAsc\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"addTimeDescTooltip\"),\n                onClick: () => setSorter(\"reverse\"),\n                icon: sorter === \"reverse\" ? <CheckIcon /> : <Icon />,\n                text: t(\"addTimeDesc\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"showInstantSpeedTooltip\"),\n                onClick: () => setUseAvgSpeed(false),\n                icon: useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: t(\"showInstantSpeed\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"showAvgSpeedTooltip\"),\n                onClick: () => setUseAvgSpeed(true),\n                icon: !useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: t(\"showAvgSpeed\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"cleanAllSessionTooltip\"),\n                onClick: () => cleanupSessions(),\n                icon: <DeleteEmpty />,\n                text: t(\"cleanAllSession\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"cleanCompletedTooltip\"),\n                onClick: () => cleanFinished(),\n                icon: <DeleteIcon />,\n                text: t(\"cleanCompleted\"),\n                divider: false,\n            },\n            {\n                tooltip: t(\"retryFailedTasksTooltip\"),\n                onClick: () => retryFailed(),\n                icon: <Replay />,\n                text: t(\"retryFailedTasks\"),\n                divider: true,\n            },\n            {\n                tooltip: t(\"setConcurrentTooltip\"),\n                onClick: () => setConcurrentDialog(true),\n                icon: <ClearAll />,\n                text: t(\"setConcurrent\"),\n                divider: false,\n            },\n        ],\n        [\n            useAvgSpeed,\n            setUseAvgSpeed,\n            sorter,\n            setSorter,\n            filter,\n            setFilter,\n            cleanFinished,\n        ]\n    );\n\n    const onConcurrentLimitSave = (val) => {\n        val = parseInt(val);\n        if (val > 0) {\n            Auth.SetPreference(\"concurrent_limit\", val);\n            uploadManager.changeConcurrentLimit(parseInt(val));\n        }\n        setConcurrentDialog(false);\n    };\n\n    return (\n        <>\n            <Menu id={id} open={open} anchorEl={anchorEl} onClose={onClose}>\n                {listItems.map((item) => (\n                    <>\n                        <Tooltip\n                            enterNextDelay={500}\n                            key={item.text}\n                            title={item.tooltip}\n                        >\n                            <MenuItem\n                                dense\n                                onClick={actionClicked(item.onClick)}\n                            >\n                                <ListItemIcon className={classes.icon}>\n                                    {item.icon}\n                                </ListItemIcon>\n                                {item.text}\n                            </MenuItem>\n                        </Tooltip>\n                        {item.divider && <Divider />}\n                    </>\n                ))}\n            </Menu>\n            <ConcurrentOptionDialog\n                open={concurrentDialog}\n                onClose={() => setConcurrentDialog(false)}\n                onSave={onConcurrentLimitSave}\n            />\n        </>\n    );\n}\n","import React, { useMemo, useState } from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AppBar,\n    Dialog,\n    DialogContent,\n    Fade,\n    IconButton,\n    makeStyles,\n    Slide,\n    Toolbar,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandLess\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classnames from \"classnames\";\nimport UploadTask from \"./UploadTask\";\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport MoreActions from \"./MoreActions\";\nimport { useSelector } from \"react-redux\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport Nothing from \"../../Placeholder/Nothing\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { Status } from \"../core/uploader/base\";\nimport Auth from \"../../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUpload } from \"../UseUpload\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    rootOverwrite: {\n        top: \"auto!important\",\n        left: \"auto!important\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n    popup: {\n        alignItems: \"flex-end\",\n        justifyContent: \"flex-end\",\n    },\n    dialog: {\n        margin: 0,\n        right: 10,\n        bottom: 10,\n        zIndex: 9999,\n        position: \"fixed\",\n        inset: \"-1!important\",\n    },\n    paddingZero: {\n        padding: 0,\n    },\n    dialogContent: {\n        [theme.breakpoints.up(\"md\")]: {\n            width: 500,\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n        padding: 0,\n        paddingTop: \"0!important\",\n    },\n    virtualList: {\n        height: \"100%\",\n        maxHeight: \"calc(100vh - 56px)\",\n        [theme.breakpoints.up(\"md\")]: {\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n    },\n    expandIcon: {\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandIconExpanded: {\n        transform: \"rotate(180deg)\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: -1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n}));\n\nconst sorters = {\n    default: (a, b) => a.id - b.id,\n    reverse: (a, b) => b.id - a.id,\n};\n\nconst filters = {\n    default: (u) => true,\n    ongoing: (u) => u.status < Status.finished,\n};\n\nexport default function TaskList({\n    open,\n    onClose,\n    selectFile,\n    taskList,\n    onCancel,\n    uploadManager,\n    progress,\n    setUploaders,\n}) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const path = useSelector((state) => state.navigator.path);\n    const [expanded, setExpanded] = useState(true);\n    const [useAvgSpeed, setUseAvgSpeed] = useState(\n        Auth.GetPreferenceWithDefault(\"use_avg_speed\", true)\n    );\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [filter, setFilter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_filter\", \"default\")\n    );\n    const [sorter, setSorter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_sorter\", \"default\")\n    );\n    const [refreshList, setRefreshList] = useState(false);\n\n    const handleActionClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleActionClose = () => {\n        setAnchorEl(null);\n    };\n\n    const close = (e, reason) => {\n        if (reason !== \"backdropClick\") {\n            onClose();\n        } else {\n            setExpanded(false);\n        }\n    };\n    const handlePanelChange = (event, isExpanded) => {\n        setExpanded(isExpanded);\n    };\n\n    useMemo(() => {\n        if (open) {\n            setExpanded(true);\n        }\n    }, [taskList]);\n\n    const progressBar = useMemo(\n        () =>\n            progress.totalSize > 0 ? (\n                <Fade in={progress.totalSize > 0 && !expanded}>\n                    <div>\n                        <div\n                            style={{\n                                backgroundColor:\n                                    theme.palette.type === \"light\"\n                                        ? lighten(\n                                              theme.palette.primary.main,\n                                              0.2\n                                          )\n                                        : lighten(\n                                              theme.palette.primary.main,\n                                              0.2\n                                          ),\n                                width:\n                                    (progress.processedSize /\n                                        progress.totalSize) *\n                                        100 +\n                                    \"%\",\n                            }}\n                            className={classes.progress}\n                        />\n                    </div>\n                </Fade>\n            ) : null,\n        [progress, expanded, classes, theme]\n    );\n\n    const list = useMemo(() => {\n        const currentList = taskList\n            .filter(filters[filter])\n            .sort(sorters[sorter]);\n        if (currentList.length === 0) {\n            return <Nothing size={0.5} top={63} primary={t(\"taskListEmpty\")} />;\n        }\n\n        return (\n            <Virtuoso\n                style={{\n                    height: (fullScreen ? 500 : 73) * currentList.length,\n                }}\n                className={classes.virtualList}\n                increaseViewportBy={180}\n                data={currentList}\n                itemContent={(index, uploader) => (\n                    <UploadTask\n                        selectFile={selectFile}\n                        onClose={close}\n                        onCancel={onCancel}\n                        key={uploader.id}\n                        useAvgSpeed={useAvgSpeed}\n                        uploader={uploader}\n                        filter={filters[filter]}\n                        onRefresh={() => setRefreshList((r) => !r)}\n                    />\n                )}\n            />\n        );\n    }, [\n        classes,\n        taskList,\n        useAvgSpeed,\n        fullScreen,\n        filter,\n        sorter,\n        refreshList,\n    ]);\n\n    const retryFailed = () => {\n        taskList.forEach((task) => {\n            if (task.status === Status.error) {\n                task.reset();\n                task.start();\n            }\n        });\n    };\n\n    return (\n        <>\n            <MoreActions\n                deleteTask={onCancel}\n                onClose={handleActionClose}\n                uploadManager={uploadManager}\n                anchorEl={anchorEl}\n                useAvgSpeed={useAvgSpeed}\n                setUseAvgSpeed={(v) => {\n                    Auth.SetPreference(\"use_avg_speed\", v);\n                    setUseAvgSpeed(v);\n                }}\n                filter={filter}\n                sorter={sorter}\n                setFilter={(v) => {\n                    Auth.SetPreference(\"task_filter\", v);\n                    setFilter(v);\n                }}\n                setSorter={(v) => {\n                    Auth.SetPreference(\"task_sorter\", v);\n                    setSorter(v);\n                }}\n                retryFailed={retryFailed}\n                cleanFinished={() =>\n                    setUploaders((u) => u.filter(filters[\"ongoing\"]))\n                }\n            />\n            <Dialog\n                classes={{\n                    container: classes.popup, // class name, e.g. `classes-nesting-root-x`\n                    root: classnames({\n                        [classes.rootOverwrite]: !fullScreen,\n                    }),\n                }}\n                className={classnames({\n                    [classes.dialog]: !fullScreen,\n                })}\n                fullScreen={fullScreen}\n                open={open}\n                onClose={close}\n                TransitionComponent={Transition}\n                disableEnforceFocus={!expanded}\n                hideBackdrop={!expanded}\n                disableBackdropClick={!expanded}\n                disableScrollLock={!expanded}\n            >\n                <Accordion\n                    expanded={expanded || fullScreen}\n                    onChange={handlePanelChange}\n                >\n                    <AppBar className={classes.appBar}>\n                        {progressBar}\n                        <Toolbar disableGutters className={classes.toolbar}>\n                            <Tooltip title={t(\"hideTaskList\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={close}\n                                    aria-label=\"Close\"\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                className={classes.flex}\n                            >\n                                {t(\"uploadTasks\")}\n                            </Typography>\n                            <Tooltip title={t(\"moreActions\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={handleActionClick}\n                                >\n                                    <MoreHoriz />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title={t(\"addNewFiles\")}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={() => selectFile(path)}\n                                >\n                                    <AddIcon />\n                                </IconButton>\n                            </Tooltip>\n                            {!fullScreen && (\n                                <Tooltip title={t(\"toggleTaskList\")}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        onClick={() => setExpanded(!expanded)}\n                                    >\n                                        <ExpandMoreIcon\n                                            className={classnames({\n                                                [classes.expandIconExpanded]:\n                                                    expanded,\n                                                [classes.expandIcon]: true,\n                                            })}\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                        </Toolbar>\n                    </AppBar>\n                    <AccordionDetails className={classes.paddingZero}>\n                        <DialogContent className={classes.dialogContent}>\n                            {list}\n                        </DialogContent>\n                    </AccordionDetails>\n                </Accordion>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { Typography } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: \"#fff\",\n            flexDirection: \"column\",\n        },\n    })\n);\n\nexport function DropFileBackground({ open }) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    return (\n        <Backdrop className={classes.backdrop} open={open}>\n            <div>\n                <UploadIcon style={{ fontSize: 80 }} />\n            </div>\n            <div>\n                <Typography variant={\"h4\"}>\n                    {t(\"uploader.dropFileHere\")}\n                </Typography>\n            </div>\n        </Backdrop>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport UploadManager, { SelectType } from \"./core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UploadButton from \"../Dial/Create\";\nimport pathHelper from \"../../utils/page\";\nimport { useLocation } from \"react-router-dom\";\nimport { UploaderError } from \"./core/errors\";\nimport TaskList from \"./Popup/TaskList\";\nimport { Status } from \"./core/uploader/base\";\nimport { DropFileBackground } from \"../Placeholder/DropFile\";\nimport {\n    refreshFileList,\n    refreshStorage,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport Auth from \"../../middleware/Auth\";\nimport { useTranslation } from \"react-i18next\";\n\nlet totalProgressCollector = null;\nlet lastProgressStart = -1;\nlet dragCounter = 0;\n\nexport default function Uploader() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\n    const [uploaders, setUploaders] = useState([]);\n    const [taskListOpen, setTaskListOpen] = useState(false);\n    const [dropBgOpen, setDropBgOpen] = useState(0);\n    const [totalProgress, setTotalProgress] = useState({\n        totalSize: 0,\n        processedSize: 0,\n        total: 0,\n        processed: 0,\n    });\n    const search = useSelector((state) => state.explorer.search);\n    const policy = useSelector((state) => state.explorer.currentPolicy);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const path = useSelector((state) => state.navigator.path);\n    const fileSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFileSelector\n    );\n    const folderSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFolderSelector\n    );\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => dispatch(refreshFileList()), [\n        dispatch,\n    ]);\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\n        dispatch,\n    ]);\n\n    const enableUploader = useMemo(\n        () => pathHelper.isHomePage(location.pathname) && isLogin && !search,\n        [location.pathname, isLogin, search]\n    );\n\n    const taskAdded = (original = null) => (tasks) => {\n        if (original !== null) {\n            if (tasks.length !== 1 || tasks[0].key() !== original.key()) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"fileNotMatchError\"),\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        tasks.forEach((t) => t.start());\n\n        setTaskListOpen(true);\n        setUploaders((uploaders) => {\n            if (original !== null) {\n                uploaders = uploaders.filter((u) => u.key() !== original.key());\n            }\n\n            return [...uploaders, ...tasks];\n        });\n    };\n\n    const uploadManager = useMemo(() => {\n        return new UploadManager({\n            logLevel: \"INFO\",\n            concurrentLimit: parseInt(\n                Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\n            ),\n            dropZone: document.querySelector(\"body\"),\n            onToast: (type, msg) => {\n                ToggleSnackbar(\"top\", \"right\", msg, type);\n            },\n            onDropOver: (e) => {\n                dragCounter++;\n                setDropBgOpen((value) => !value);\n            },\n            onDropLeave: (e) => {\n                dragCounter--;\n                setDropBgOpen((value) => !value);\n            },\n            onDropFileAdded: taskAdded(),\n        });\n    }, []);\n\n    useEffect(() => {\n        uploadManager.setPolicy(policy, path);\n    }, [policy]);\n\n    useEffect(() => {\n        const unfinished = uploadManager.resumeTasks();\n        setUploaders((uploaders) => [...uploaders, ...unfinished]);\n        if (!totalProgressCollector) {\n            totalProgressCollector = setInterval(() => {\n                const progress = {\n                    totalSize: 0,\n                    processedSize: 0,\n                    total: 0,\n                    processed: 0,\n                };\n                setUploaders((uploaders) => {\n                    uploaders.forEach((u) => {\n                        if (u.id <= lastProgressStart) {\n                            return;\n                        }\n\n                        progress.totalSize += u.task.size;\n                        progress.total += 1;\n\n                        if (\n                            u.status === Status.finished ||\n                            u.status === Status.canceled ||\n                            u.status === Status.error\n                        ) {\n                            progress.processedSize += u.task.size;\n                            progress.processed += 1;\n                        }\n\n                        if (\n                            u.status === Status.added ||\n                            u.status === Status.initialized ||\n                            u.status === Status.queued ||\n                            u.status === Status.preparing ||\n                            u.status === Status.processing ||\n                            u.status === Status.finishing\n                        ) {\n                            progress.processedSize += u.progress\n                                ? u.progress.total.loaded\n                                : 0;\n                        }\n                    });\n\n                    if (\n                        progress.total > 0 &&\n                        progress.processed === progress.total\n                    ) {\n                        lastProgressStart = uploaders[uploaders.length - 1].id;\n                    }\n                    return uploaders;\n                });\n\n                if (\n                    progress.total > 0 &&\n                    progress.total === progress.processed\n                ) {\n                    RefreshFileList();\n                    RefreshStorage();\n                }\n\n                setTotalProgress(progress);\n            }, 2000);\n        }\n    }, []);\n\n    const selectFile = (path, type = SelectType.File, original = null) => {\n        setTaskListOpen(true);\n\n        // eslint-disable-next-line no-unreachable\n        uploadManager\n            .select(path, type)\n            .then(taskAdded(original))\n            .catch((e) => {\n                if (e instanceof UploaderError) {\n                    ToggleSnackbar(\"top\", \"right\", e.Message(), \"warning\");\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"unknownError\", { msg: e.message }),\n                        \"error\"\n                    );\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (fileSelectCounter > 0) {\n            selectFile(path);\n        }\n    }, [fileSelectCounter]);\n\n    useEffect(() => {\n        if (folderSelectCounter > 0) {\n            selectFile(path, SelectType.Directory);\n        }\n    }, [folderSelectCounter]);\n\n    const deleteTask = (filter) => {\n        setUploaders((uploaders) => uploaders.filter(filter));\n    };\n\n    return (\n        <>\n            {enableUploader && (\n                <>\n                    <DropFileBackground open={dropBgOpen > 0} />\n                    <UploadButton\n                        progress={totalProgress}\n                        taskListOpen={taskListOpen}\n                        selectFile={selectFile}\n                        Queued={uploaders.length}\n                        openFileList={() => setTaskListOpen(true)}\n                    />\n                    <TaskList\n                        progress={totalProgress}\n                        uploadManager={uploadManager}\n                        taskList={uploaders}\n                        open={taskListOpen}\n                        onCancel={deleteTask}\n                        selectFile={selectFile}\n                        onClose={() => setTaskListOpen(false)}\n                        setUploaders={setUploaders}\n                    />\n                </>\n            )}\n        </>\n    );\n}\n","import i18next from \"./i18n\";\n\nexport const imgPreviewSuffix = [\n    \"bmp\",\n    \"png\",\n    \"gif\",\n    \"jpg\",\n    \"jpeg\",\n    \"svg\",\n    \"webp\",\n];\nexport let msDocPreviewSuffix = [\n    \"ppt\",\n    \"pptx\",\n    \"pps\",\n    \"doc\",\n    \"docx\",\n    \"xlsx\",\n    \"xls\",\n];\nexport const subtitleSuffix = [\"ass\", \"srt\", \"vrr\"];\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\", \"wav\", \"flac\", \"m4a\"];\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\", \"avi\", \"m3u8\", \"mov\"];\nexport const pdfPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\", \"txt\"];\nexport const epubSuffix = [\"epub\"];\nexport const codePreviewSuffix = {\n    json: \"json\",\n    php: \"php\",\n    py: \"python\",\n    bat: \"bat\",\n    cpp: \"cpp\",\n    c: \"cpp\",\n    h: \"cpp\",\n    cs: \"csharp\",\n    css: \"css\",\n    dockerfile: \"dockerfile\",\n    go: \"go\",\n    html: \"html\",\n    ini: \"ini\",\n    java: \"java\",\n    js: \"javascript\",\n    jsx: \"javascript\",\n    less: \"less\",\n    lua: \"lua\",\n    sh: \"shell\",\n    sql: \"sql\",\n    xml: \"xml\",\n    yaml: \"yaml\",\n};\nexport const mediaType = {\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\", \"m4a\"],\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\n    image: [\n        \"bmp\",\n        \"iff\",\n        \"png\",\n        \"gif\",\n        \"jpg\",\n        \"jpeg\",\n        \"psd\",\n        \"svg\",\n        \"webp\",\n        \"heif\",\n        \"heic\",\n        \"tiff\",\n        \"avif\",\n    ],\n    pdf: [\"pdf\"],\n    word: [\"doc\", \"docx\"],\n    ppt: [\"ppt\", \"pptx\"],\n    excel: [\"xls\", \"xlsx\", \"csv\"],\n    text: [\"txt\", \"md\", \"html\"],\n    torrent: [\"torrent\"],\n    zip: [\"zip\", \"gz\", \"xz\", \"tar\", \"rar\", \"7z\"],\n    excute: [\"exe\"],\n    android: [\"apk\"],\n    php: [\"php\"],\n    go: [\"go\"],\n    python: [\"py\"],\n    cpp: [\"cpp\"],\n    c: [\"c\"],\n    js: [\"js\", \"jsx\"],\n    epub: epubSuffix,\n};\nexport const isPreviewable = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"img\";\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"msDoc\";\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"audio\";\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"video\";\n    } else if (editSuffix.indexOf(suffix) !== -1) {\n        return \"edit\";\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"pdf\";\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\n        return \"code\";\n    } else if (epubSuffix.indexOf(suffix) !== -1) {\n        return \"epub\";\n    }\n    return false;\n};\nexport const isTorrent = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\n        return true;\n    }\n    return false;\n};\n\nexport const isCompressFile = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix !== \"7z\" && mediaType[\"zip\"].indexOf(suffix) !== -1;\n};\n\nexport const encodingRequired = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix === \"zip\";\n};\n\nconst taskStatus = [\n    \"setting.queueing\",\n    \"setting.processing\",\n    \"setting.failed\",\n    \"setting.canceled\",\n    \"setting.finished\",\n];\nconst taskType = [\n    \"fileManager.compress\",\n    \"fileManager.decompress\",\n    \"setting.fileTransfer\",\n    \"setting.importFiles\",\n    \"setting.fileRecycle\",\n];\nconst taskProgress = [\n    \"setting.waiting\",\n    \"setting.compressing\",\n    \"setting.decompressing\",\n    \"setting.downloading\",\n    \"setting.transferring\",\n    \"setting.indexing\",\n    \"setting.listing\",\n];\n\nexport const getTaskStatus = (status: any) => {\n    return i18next.t(taskStatus[status]);\n};\n\nexport const getTaskType = (status: any) => {\n    return i18next.t(taskType[status]);\n};\n\nexport const getTaskProgress = (type: any, status: any) => {\n    if (type === 2) {\n        return i18next.t(\"setting.transferProgress\", {\n            num: status,\n        });\n    }\n    return i18next.t(taskProgress[status]);\n};\n\nexport const setWopiExts = (exts: string[]) => {\n    msDocPreviewSuffix = exts;\n};","import { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\nimport { askForOption } from \"../explorer/async\";\nimport i18next, { languages } from \"../../i18n\";\n\nexport interface ActionSetSubtitle extends AnyAction {\n    type: \"SET_SUBTITLE\";\n    title: string;\n}\n\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\n    return {\n        type: \"SET_SUBTITLE\",\n        title,\n    };\n};\n\nexport const closeContextMenu = () => {\n    return {\n        type: \"CLOSE_CONTEXT_MENU\",\n    };\n};\n\nexport const changeContextMenu = (type: string, open: boolean) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\n\nexport const changeSubTitle = (\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const state = getState();\n        document.title =\n            title === null || title === undefined\n                ? state.siteConfig.title\n                : title + \" - \" + state.siteConfig.title;\n        dispatch(setSubtitle(title));\n    };\n};\n\nexport const setOptionModal = (option: any) => {\n    return {\n        type: \"SET_OPTION_MODAL\",\n        option: option,\n    };\n};\n\nexport const openFileSelector = () => {\n    return {\n        type: \"OPEN_FILE_SELECTOR\",\n    };\n};\n\nexport const openFolderSelector = () => {\n    return {\n        type: \"OPEN_FOLDER_SELECTOR\",\n    };\n};\n\nexport const setPagination = (pagination) => {\n    return {\n        type: \"SET_PAGINATION\",\n        pagination: pagination,\n    };\n};\n\nexport const setShareInfo = (shareInfo) => {\n    return {\n        type: \"SET_SHARE_INFO\",\n        shareInfo: shareInfo,\n    };\n};\n\nexport const changePageSize = (\n    size: number\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const {\n            explorer: { dirList, fileList },\n            viewUpdate: { pagination },\n        } = getState();\n        const total = dirList.length + fileList.length;\n        let page = pagination.page;\n        if (pagination.page * size > total) {\n            page = Math.max(Math.ceil(total / size), 1);\n        } else if (size === -1) {\n            page = 1;\n        }\n        Auth.SetPreference(\"pagination\", size);\n        dispatch(\n            setPagination({\n                ...pagination,\n                size: size,\n                page: page,\n            })\n        );\n    };\n};\n\nexport const selectLanguage = (): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState) => {\n        let option: any;\n        let lng = \"\";\n        try {\n            const allOptions = languages.map((e) => {\n                return {\n                    key: e.code,\n                    name: e.displayName,\n                };\n            });\n            option = await dispatch(\n                askForOption(allOptions, i18next.t(\"setting.language\"))\n            );\n        } catch (e) {\n            console.log(e);\n            return;\n        }\n\n        lng = option.key;\n        await i18next.changeLanguage(lng);\n    };\n};\n","import dayjs from \"dayjs\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport utc from \"dayjs/plugin/utc\";\nimport Auth from \"../middleware/Auth\";\nimport i18next from \"../i18n\";\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nlet userTimezone = \"\";\ntry {\n    userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n} catch (e) {\n    console.log(e);\n}\n\nif (!userTimezone || userTimezone==\"Etc/Unknown\") {\n    userTimezone = \"Asia/Shanghai\";\n}\n\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\nexport let timeZone = preferTimeZone ? preferTimeZone : userTimezone;\n\nexport function refreshTimeZone() {\n    timeZone = Auth.GetPreference(\"timeZone\");\n    timeZone = timeZone ? timeZone : userTimezone;\n}\n\nexport function formatLocalTime(time) {\n    return i18next.t(\"intlDateTime\", {\n        ns: \"common\",\n        val: dayjs(time).tz(timeZone).toDate(),\n        formatParams: {\n            val: {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: \"numeric\",\n            },\n        },\n    });\n}\n\nexport function validateTimeZone(name) {\n    try {\n        dayjs().tz(name).format();\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox,\n    LanguageC,\n    LanguageCpp,\n    LanguageGo,\n    LanguageJavascript,\n    LanguagePhp,\n    LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox,\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\nimport { MenuBook } from \"@material-ui/icons\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon,\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon,\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon,\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon,\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox,\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox,\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox,\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText,\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn,\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox,\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore,\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android,\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon,\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp,\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo,\n    },\n    python: {\n        color: \"#3776ab\",\n        icon: LanguagePython,\n    },\n    c: {\n        color: \"#a8b9cc\",\n        icon: LanguageC,\n    },\n    cpp: {\n        color: \"#004482\",\n        icon: LanguageCpp,\n    },\n    js: {\n        color: \"#f4d003\",\n        icon: LanguageJavascript,\n    },\n    epub: {\n        color: \"#81b315\",\n        icon: MenuBook,\n    },\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = (props) => {\n    const theme = useTheme();\n\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach((k) => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    const IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color,\n                    }}\n                >\n                    <IconComponent\n                        className={props.iconClassName}\n                        style={{\n                            color: theme.palette.background.paper,\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color,\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction NoAuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/home\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default NoAuthRoute;\n","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        fontSize: \"160px\",\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n    },\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst MyLoader = () => (\n    <ContentLoader\n        height={48}\n        width={192}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#e4e4e4\"\n    >\n        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"100%\" />\n    </ContentLoader>\n);\n\nfunction captchaPlacholder() {\n    return <MyLoader />;\n}\n\nexport default captchaPlacholder;\n","import React, {\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../middleware/Api\";\nimport {\n    FormControl,\n    Input,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport Placeholder from \"../component/Placeholder/Captcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\nimport { toggleSnackbar } from \"../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\n    { captchaRef, setLoading },\n    ref\n) {\n    const { t } = useTranslation();\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then((response) => {\n                setCaptchaData(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.captchaError\", { message: error.message }),\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        ref.current = refreshCaptcha;\n        refreshCaptcha();\n    }, []);\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    return (\n        <div className={classes.captchaInputContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <TextField\n                    variant={\"outlined\"}\n                    label={t(\"login.captcha\")}\n                    inputProps={{\n                        name: \"captcha\",\n                        id: \"captcha\",\n                    }}\n                    onChange={(e) => setCaptcha(e.target.value)}\n                    value={captcha}\n                    autoComplete\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position={\"end\"}>\n                                <div\n                                    className={classes.captchaImageContainer}\n                                    title={t(\"login.clickToRefresh\")}\n                                >\n                                    {captchaData === null && <Placeholder />}\n                                    {captchaData !== null && (\n                                        <img\n                                            className={classes.captchaImage}\n                                            src={captchaData}\n                                            alt=\"captcha\"\n                                            onClick={refreshCaptcha}\n                                        />\n                                    )}\n                                </div>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n            </FormControl>{\" \"}\n        </div>\n    );\n});\n\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function Normal() {\n            return (\n                <NormalCaptcha\n                    captchaRef={captchaParamsRef}\n                    ref={captchaRefreshRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, captchaRefreshRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (\n            this.props.grecaptcha &&\n            this.props.grecaptcha.render &&\n            this._widgetId === undefined\n        ) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge,\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (\n            this._executeRequested &&\n            this.props.grecaptcha &&\n            this._widgetId !== undefined\n        ) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\n};\nReCAPTCHA.defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\",\n};\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName,\n})(ReCAPTCHA);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FormControl } from \"@material-ui/core\";\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\n\nconst Recaptcha = ({ captchaRef, setLoading }) => {\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n\n    const reCaptchaKey = useSelector(\n        (state) => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    useEffect(() => setLoading(false), []);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <div>\n                    <ReCaptcha\n                        style={{\n                            display: \"inline-block\",\n                        }}\n                        sitekey={reCaptchaKey}\n                        onChange={(value) => setCaptcha(value)}\n                        id=\"captcha\"\n                        name=\"captcha\"\n                    />\n                </div>\n            </FormControl>{\" \"}\n        </div>\n    );\n};\n\nexport default function useRecaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function RecaptchaRender() {\n            return (\n                <Recaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React, { forwardRef, useCallback, useRef } from \"react\";\nimport Script from \"react-load-script\";\nimport { useSelector } from \"react-redux\";\n\nconst TCaptcha = forwardRef(function TCaptcha(\n    { captchaRef, setLoading, isValidateRef, submitRef },\n    ref\n) {\n    const appid = useSelector(\n        (state) => state.siteConfig.tcaptcha_captcha_app_id\n    );\n    const onLoad = () => {\n        try {\n            ref.current = new window.TencentCaptcha(appid, function (res) {\n                if (res.ret === 0) {\n                    captchaRef.current.ticket = res.ticket;\n                    captchaRef.current.randstr = res.randstr;\n\n                    isValidateRef.current.isValidate = true;\n                    submitRef.current.submit();\n                    console.log(submitRef);\n                } else {\n                    submitRef.current.setLoading(false);\n                }\n            });\n        } catch (e) {\n            console.error(e);\n        }\n        setLoading(false);\n    };\n    return (\n        <Script\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\n            onLoad={onLoad}\n        />\n    );\n});\n\nexport default function useTCaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: false,\n    });\n    const captchaParamsRef = useRef({\n        ticket: \"\",\n        randstr: \"\",\n    });\n    const submitRef = useRef({\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        submit: () => {},\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        setLoading: () => {},\n    });\n\n    const captchaRef = useRef();\n\n    const CaptchaRender = useCallback(\n        function TCaptchaRender() {\n            return (\n                <TCaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                    isValidateRef={isValidate}\n                    submitRef={submitRef}\n                    ref={captchaRef}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef]\n    );\n\n    return {\n        isValidate: isValidate,\n        validate: (submit, setLoading) => {\n            submitRef.current.submit = submit;\n            submitRef.current.setLoading = setLoading;\n            captchaRef.current.show();\n        },\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import { useSelector } from \"react-redux\";\nimport { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useNormalCaptcha from \"./normal\";\nimport useRecaptcha from \"./recaptcha\";\nimport useTCaptcha from \"./tcaptcha\";\n\nexport const useStyle = makeStyles((theme) => ({\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        alignItems: \"center\",\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            display: \"block\",\n        },\n    },\n    captchaInputContainer: {\n        marginTop: 0,\n    },\n    captchaImageContainer: {\n        cursor: \"pointer\",\n        marginLeft: \"1rem\",\n        [theme.breakpoints.down(\"sm\")]: {\n            marginLeft: 0,\n        },\n    },\n    captchaImage: {\n        borderRadius: theme.shape.borderRadius,\n        height: 48,\n        marginTop: 4,\n    },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\nexport const defaultValidate = (submit, setLoading) => {};\n\nexport const useCaptcha = () => {\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\n\n    const [captchaLoading, setCaptchaLoading] = useState(true);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const captchaRefreshRef = useRef(() => {});\n\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\n    const recaptcha = useRecaptcha(setCaptchaLoading);\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\n\n    switch (captchaType) {\n        case \"normal\":\n            return { ...normal, captchaRefreshRef, captchaLoading };\n        case \"recaptcha\":\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\n        case \"tcaptcha\":\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\n        default:\n            return { ...normal, captchaRefreshRef, captchaLoading };\n    }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\nimport {\n    EmailOutlined,\n    Fingerprint,\n    VpnKey,\n    VpnKeyOutlined,\n} from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useLocation } from \"react-router\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport {\n    applyThemes,\n    setSessionStatus,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const { t } = useTranslation();\n\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [twoFA, setTwoFA] = useState(false);\n    const [faCode, setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled\n    );\n    const title = useSelector((state) => state.siteConfig.title);\n    const authn = useSelector((state) => state.siteConfig.authn);\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback(\n        (theme) => dispatch(applyThemes(theme)),\n        [dispatch]\n    );\n    const SetSessionStatus = useCallback(\n        (status) => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const query = useQuery();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n    }, [location]);\n\n    const afterLogin = (data) => {\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        if (query.get(\"redirect\")) {\n            history.push(query.get(\"redirect\"));\n        } else {\n            history.push(\"/home\");\n        }\n        ToggleSnackbar(\"top\", \"right\", t(\"login.success\"), \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    const authnLogin = (e) => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.browserNotSupport\"),\n                \"warning\"\n            );\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then((response) => {\n                const credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function (listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    }\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey,\n                });\n            })\n            .then((assertion) => {\n                const authData = assertion.response.authenticatorData;\n                const clientDataJSON = assertion.response.clientDataJSON;\n                const rawId = assertion.rawId;\n                const sig = assertion.response.signature;\n                const userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const login = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && loginCaptcha) {\n            validate(() => login(e), setLoading);\n            return;\n        }\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setTwoFA(true);\n                } else {\n                    afterLogin(response.data);\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const twoFALogin = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\", {\n            code: faCode,\n        })\n            .then((response) => {\n                setLoading(false);\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA && (\n                <>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.title\", { title })}\n                        </Typography>\n                        {!useAuthn && (\n                            <form className={classes.form} onSubmit={login}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <TextField\n                                        label={t(\"login.email\")}\n                                        variant={\"outlined\"}\n                                        inputProps={{\n                                            id: \"email\",\n                                            type: \"email\",\n                                            name: \"email\",\n                                        }}\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        InputProps={{\n                                            startAdornment: !isMobile && (\n                                                <InputAdornment position=\"start\">\n                                                    <EmailOutlined />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <TextField\n                                        variant={\"outlined\"}\n                                        label={t(\"login.password\")}\n                                        inputProps={{\n                                            name: \"password\",\n                                            type: \"password\",\n                                            id: \"password\",\n                                        }}\n                                        onChange={(e) => setPwd(e.target.value)}\n                                        InputProps={{\n                                            startAdornment: !isMobile && (\n                                                <InputAdornment position=\"start\">\n                                                    <VpnKeyOutlined />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        value={pwd}\n                                        autoComplete\n                                    />\n                                </FormControl>\n                                {loginCaptcha && <CaptchaRender />}\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={\n                                        loading ||\n                                        (loginCaptcha ? captchaLoading : false)\n                                    }\n                                    className={classes.submit}\n                                >\n                                    {t(\"login.signIn\")}\n                                </Button>\n                            </form>\n                        )}\n                        {useAuthn && (\n                            <form className={classes.form}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <TextField\n                                        variant={\"outlined\"}\n                                        label={t(\"login.email\")}\n                                        InputProps={{\n                                            id: \"email\",\n                                            type: \"email\",\n                                            name: \"email\",\n                                            startAdornment: !isMobile && (\n                                                <InputAdornment position=\"start\">\n                                                    <EmailOutlined />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                        required\n                                    />\n                                </FormControl>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    onClick={authnLogin}\n                                    className={classes.submit}\n                                >\n                                    {t(\"login.continue\")}\n                                </Button>\n                            </form>\n                        )}\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link component={RouterLink} to={\"/forget\"}>\n                                    {t(\"login.forgetPassword\")}\n                                </Link>\n                            </div>\n                            <div>\n                                {registerEnabled && (\n                                    <Link component={RouterLink} to={\"/signup\"}>\n                                        {t(\"login.signUpAccount\")}\n                                    </Link>\n                                )}\n                            </div>\n                        </div>\n                    </Paper>\n\n                    {authn && (\n                        <div className={classes.authnLink}>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setUseAuthn(!useAuthn)}\n                            >\n                                {!useAuthn && (\n                                    <>\n                                        <Fingerprint\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        {t(\"login.useFIDO2\")}\n                                    </>\n                                )}\n                                {useAuthn && (\n                                    <>\n                                        <VpnKey\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        {t(\"login.usePassword\")}\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    )}\n                </>\n            )}\n            {twoFA && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <VpnIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {t(\"login.2FA\")}\n                    </Typography>\n                    <form className={classes.form} onSubmit={twoFALogin}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <TextField\n                                label={t(\"login.input2FACode\")}\n                                variant={\"outlined\"}\n                                inputProps={{\n                                    id: \"code\",\n                                    type: \"number\",\n                                    name: \"code\",\n                                }}\n                                onChange={(event) =>\n                                    setFACode(event.target.value)\n                                }\n                                autoComplete\n                                value={faCode}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            {t(\"login.continue\")}\n                        </Button>{\" \"}\n                    </form>{\" \"}\n                    <Divider />\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import Highlighter from \"react-highlight-words\";\nimport { trimPrefix } from \"../Uploader/core/utils\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    highlight: {\n        backgroundColor: theme.palette.warning.light,\n    },\n}));\n\nexport default function FileName({ name }) {\n    const classes = useStyles();\n    const search = useSelector((state) => state.explorer.search);\n    if (!search) {\n        return name;\n    }\n\n    return (\n        <Highlighter\n            highlightClassName={classes.highlight}\n            searchWords={trimPrefix(search.keywords, \"keywords/\").split(\" \")}\n            autoEscape={true}\n            textToHighlight={name}\n        />\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { Folder } from \"@material-ui/icons\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: theme.shape.borderRadius,\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass SmallIconCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <ButtonBase\n                focusRipple\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected,\n                    },\n                    classes.button\n                )}\n            >\n                <div\n                    onClick={this.props.onIconClick}\n                    className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected,\n                    })}\n                >\n                    {!isSelected && (\n                        <>\n                            {this.props.isFolder && <Folder />}\n                            {!this.props.isFolder && (\n                                <TypeIcon fileName={this.props.file.name} />\n                            )}\n                        </>\n                    )}\n                    {isSelected && (\n                        <Grow in={isSelected}>\n                            <CheckCircleRoundedIcon\n                                className={classes.checkIcon}\n                            />\n                        </Grow>\n                    )}\n                </div>\n                <Tooltip\n                    title={this.props.file.name}\n                    aria-label={this.props.file.name}\n                >\n                    <Typography\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                        variant=\"body2\"\n                    >\n                        <FileName name={this.props.file.name} />\n                    </Typography>\n                </Tooltip>\n            </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SmallIconCompoment));\n\nexport default SmallIcon;\n","import {\n    ButtonBase,\n    Divider,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { baseURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport statusHelper from \"../../utils/page\";\nimport Grow from \"@material-ui/core/Grow\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    container: {},\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: theme.shape.borderRadius,\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"12px 12px 0 0\",\n        backgroundColor: theme.palette.background.default,\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"12px 12px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\",\n    },\n    iconBig: {\n        fontSize: 50,\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"12px 12px 0 0\",\n        height: \"100%\",\n        width: \"100%\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    noDrag: {\n        userDrag: \"none\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        shareInfo: state.viewUpdate.shareInfo,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false,\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false,\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected,\n                        },\n                        classes.button\n                    )}\n                >\n                    {this.props.file.thumb && !this.state.showPicIcon && (\n                        <div className={classes.preview}>\n                            <LazyLoadImage\n                                className={classNames(\n                                    {\n                                        [classes.hide]: this.state.loading,\n                                        [classes.picPreview]:\n                                            !this.state.loading,\n                                    },\n                                    classes.noDrag\n                                )}\n                                src={\n                                    baseURL +\n                                    (isSharePage && this.props.shareInfo\n                                        ? \"/share/thumb/\" +\n                                          this.props.shareInfo.key +\n                                          \"/\" +\n                                          this.props.file.id +\n                                          \"?path=\" +\n                                          encodeURIComponent(\n                                              this.props.file.path\n                                          )\n                                        : \"/file/thumb/\" + this.props.file.id)\n                                }\n                                afterLoad={() =>\n                                    this.setState({ loading: false })\n                                }\n                                beforeLoad={() =>\n                                    this.setState({ loading: true })\n                                }\n                                onError={() =>\n                                    this.setState({ showPicIcon: true })\n                                }\n                            />\n                            <ContentLoader\n                                height={150}\n                                width={170}\n                                className={classNames(\n                                    {\n                                        [classes.hide]: !this.state.loading,\n                                    },\n                                    classes.loadingAnimation\n                                )}\n                            >\n                                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"150\" />\n                            </ContentLoader>\n                        </div>\n                    )}\n                    {(!this.props.file.thumb || this.state.showPicIcon) && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(!this.props.file.thumb || this.state.showPicIcon) && (\n                        <Divider />\n                    )}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                onClick={this.props.onIconClick}\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected,\n                                })}\n                            >\n                                {!isSelected && (\n                                    <TypeIcon fileName={this.props.file.name} />\n                                )}\n                                {isSelected && (\n                                    <Grow in={isSelected}>\n                                        <CheckCircleRoundedIcon\n                                            className={classes.checkIcon}\n                                        />\n                                    </Grow>\n                                )}\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]:\n                                        !isSelected,\n                                    [classes.shareFix]: this.props.share,\n                                })}\n                            >\n                                <FileName name={this.props.file.name} />\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    makeStyles,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"150px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: theme.shape.borderRadius,\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"table-cell\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        fontSize:'large',\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"10\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nexport default function Folder({ folder, isActive, onIconClick }) {\n    const selected = useSelector((state) => state.explorer.selected);\n    const classes = useStyles();\n    const isMobile = statusHelper.isMobile();\n    const isSelected =\n        selected.findIndex((value) => {\n            return value === folder;\n        }) !== -1;\n    const isempty = folder.isempty == 1;\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive,\n                },\n                classes.button\n            )}\n        >\n            <div\n                onClick={onIconClick}\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected,\n                })}\n            >\n                {!isSelected && <FolderIcon />}\n                {isSelected && (<CheckCircleRoundedIcon className={classes.checkIcon} />)}\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected,\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Folder from \"../Folder\";\n\nconst useStyles = makeStyles(() => ({\n    dragging: {\n        width: \"200px\",\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\",\n    },\n}));\n\nconst diliverIcon = (object, viewMethod, classes) => {\n    if (object.type === \"dir\") {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} isFolder />\n            </div>\n        );\n    }\n    if (object.type === \"file\" && viewMethod === \"icon\") {\n        return (\n            <div className={classes.dragging}>\n                <FileIcon file={object} />\n            </div>\n        );\n    }\n    if (\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\n        viewMethod === \"list\"\n    ) {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} />\n            </div>\n        );\n    }\n};\n\nconst Preview = (props) => {\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 &&\n                diliverIcon(props.object, viewMethod, classes)}\n            {selected.length > 0 && (\n                <>\n                    {selected.slice(0, 3).map((card, i) => (\n                        <div\n                            key={card.id}\n                            className={classes.cardDragged}\n                            style={{\n                                zIndex: selected.length - i,\n                                transform: `rotateZ(${-i * 2.5}deg)`,\n                            }}\n                        >\n                            {diliverIcon(card, viewMethod, classes)}\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\nexport default Preview;\n","import React, { useMemo } from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport Preview from \"./Preview\";\nimport { useSelector } from \"react-redux\";\n\nconst layerStyles = {\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n};\n\nfunction getItemStyles(\n    initialOffset,\n    currentOffset,\n    pointerOffset,\n    viewMethod\n) {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: \"none\",\n        };\n    }\n    let { x, y } = currentOffset;\n    if (viewMethod === \"list\") {\n        x += pointerOffset.x - initialOffset.x;\n        y += pointerOffset.y - initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        opacity: 0.5,\n        transform,\n        WebkitTransform: transform,\n    };\n}\nconst CustomDragLayer = (props) => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset,\n        pointerOffset,\n    } = useDragLayer((monitor) => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        pointerOffset: monitor.getInitialClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const image = useMemo(() => {\n        switch (itemType) {\n            case \"object\":\n                return <Preview object={item.object} />;\n            default:\n                return null;\n        }\n    }, [itemType, item]);\n    if (!isDragging) {\n        return null;\n    }\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialOffset,\n                    currentOffset,\n                    pointerOffset,\n                    viewMethod\n                )}\n            >\n                {image}\n            </div>\n        </div>\n    );\n};\nexport default CustomDragLayer;\n","import {\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport {\n    FolderDownload,\n    FolderUpload,\n    MagnetOn,\n    FilePlus,\n} from \"mdi-material-ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport Auth from \"../../middleware/Auth\";\nimport pathHelper from \"../../utils/page\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    batchGetSource,\n    openParentFolder,\n    openPreview,\n    openTorrentDownload,\n    setSelectedTarget,\n    startBatchDownload,\n    startDirectoryDownload,\n    startDownload,\n    toggleObjectInfoSidebar,\n} from \"../../redux/explorer/action\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    openCompressDialog,\n    openCopyDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openDecompressDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openRemoteDownloadDialog,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    refreshFileList,\n    setNavigatorLoadingStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport {\n    openFileSelector,\n    openFolderSelector,\n} from \"../../redux/viewUpdate/action\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = () => ({\n    propover: {},\n    divider: {\n        marginTop: 4,\n        marginBottom: 4,\n    },\n});\n\nconst StyledListItemIcon = withStyles({\n    root: {\n        minWidth: 38,\n    },\n})(ListItemIcon);\n\nconst mapStateToProps = (state) => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        withSourceEnabled: state.explorer.selectProps.withSourceEnabled,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownload());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        openPreview: (share) => {\n            dispatch(openPreview(share));\n        },\n        toggleObjectInfoSidebar: (open) => {\n            dispatch(toggleObjectInfoSidebar(open));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n        openFileSelector: () => {\n            dispatch(openFileSelector());\n        },\n        openFolderSelector: () => {\n            dispatch(openFolderSelector());\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n        batchGetSource: () => {\n            dispatch(batchGetSource());\n        },\n        startDirectoryDownload: (share) => {\n            dispatch(startDirectoryDownload(share));\n        },\n        openParentFolder: () => {\n            dispatch(openParentFolder());\n        },\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = (e) => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.startBatchDownload(this.props.share);\n    };\n\n    openDirectoryDownload = () => {\n        this.props.startDirectoryDownload(this.props.share);\n    };\n\n    openDownload = () => {\n        this.props.startDownload(this.props.share, this.props.selected[0]);\n    };\n\n    enterFolder = () => {\n        this.props.navigateTo(\n            pathJoin([this.props.path, this.props.selected[0].name])\n        );\n    };\n\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\n    renderMenuItems = (items) => {\n        const res = [];\n        let key = 0;\n\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\n            let visibleCount = 0;\n            items[position].forEach((item) => {\n                if (item.condition) {\n                    res.push(\n                        <MenuItem dense key={key} onClick={item.onClick}>\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <Typography variant=\"inherit\">\n                                {item.text}\n                            </Typography>\n                        </MenuItem>\n                    );\n                    key++;\n                    visibleCount++;\n                }\n            });\n            if (visibleCount > 0 && position != \"bottom\") {\n                res.push(\n                    <Divider key={key} className={this.props.classes.divider} />\n                );\n                key++;\n            }\n        });\n\n        return res;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const emptyMenuList = {\n            top: [\n                {\n                    condition: true,\n                    onClick: () => {\n                        this.props.refreshFileList();\n                        this.props.changeContextMenu(\n                            this.props.menuType,\n                            false\n                        );\n                    },\n                    icon: <RefreshIcon />,\n                    text: \"刷新\",\n                },\n            ],\n            center: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openFileSelector(),\n                    icon: <UploadIcon />,\n                    text: \"上传文件\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openFolderSelector(),\n                    icon: <FolderUpload />,\n                    text: \"上传目录\",\n                },\n                {\n                    condition: user.group.allowRemoteDownload,\n                    onClick: () => this.props.openRemoteDownloadDialog(),\n                    icon: <DownloadIcon />,\n                    text: \"离线下载\",\n                },\n            ],\n            bottom: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFolderDialog(),\n                    icon: <NewFolderIcon />,\n                    text: \"创建文件夹\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFileDialog(),\n                    icon: <FilePlus />,\n                    text: \"创建文件\",\n                },\n            ],\n        };\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <div>\n                            <MenuItem\n                                dense\n                                onClick={() => {\n                                    this.props.refreshFileList();\n                                    this.props.changeContextMenu(\n                                        this.props.menuType,\n                                        false\n                                    );\n                                }}\n                            >\n                                <StyledListItemIcon>\n                                    <RefreshIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.refresh\")}\n                                </Typography>\n                            </MenuItem>\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFileSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <UploadIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.uploadFiles\")}\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFolderSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <FolderUpload />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.uploadFolder\")}\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.newRemoteDownloads\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <NewFolderIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.newFolder\")}\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFileDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <FilePlus />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    {t(\"fileManager.newFile\")}\n                                </Typography>\n                            </MenuItem>\n                        </div>\n                    )}\n                    {this.props.menuType !== \"empty\" && (\n                        <div>\n                            {!this.props.isMultiple && this.props.withFolder && (\n                                <div>\n                                    <MenuItem dense onClick={this.enterFolder}>\n                                        <StyledListItemIcon>\n                                            <OpenFolderIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.enter\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <div>\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openPreview()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <OpenIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.open\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    </div>\n                                )}\n\n                            {this.props.search && !this.props.isMultiple && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openParentFolder()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <OpenFolderIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.openParentFolder\")}\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.openDownload(this.props.share)\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DownloadIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.download\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n\n                            {(this.props.isMultiple || this.props.withFolder) &&\n                                window.showDirectoryPicker &&\n                                window.isSecureContext && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.openDirectoryDownload()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <FolderDownload />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.download\")}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {(this.props.isMultiple ||\n                                this.props.withFolder) && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.openArchiveDownload()}\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.batchDownload\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {isHomePage &&\n                                user.group.sourceBatch > 0 &&\n                                this.props.withSourceEnabled && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.batchGetSource()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <LinkIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {this.props.isMultiple ||\n                                            (this.props.withFolder &&\n                                                !this.props.withFile)\n                                                ? t(\n                                                      \"fileManager.getSourceLinkInBatch\"\n                                                  )\n                                                : t(\n                                                      \"fileManager.getSourceLink\"\n                                                  )}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <MagnetOn />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\n                                                \"fileManager.createRemoteDownloadForTorrent\"\n                                            )}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <Unarchive />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.decompress\")}\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <Archive />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.compress\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <StyledListItemIcon>\n                                        <ShareIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.createShareLink\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.toggleObjectInfoSidebar(true)\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <InfoOutlined />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        {t(\"fileManager.viewDetails\")}\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <Divider className={classes.divider} />\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <RenameIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.rename\")}\n                                        </Typography>\n                                    </MenuItem>\n                                    {!this.props.search && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <FileCopyIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.copy\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n                                </div>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {!this.props.search && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <MoveIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                {t(\"fileManager.move\")}\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        dense\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DeleteIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            {t(\"fileManager.delete\")}\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired,\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(ContextMenuCompoment))));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../utils/index\";\nimport {\n    fade,\n    TableCell,\n    TableRow,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport pathHelper from \"../../utils/page\";\nimport statusHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport FileName from \"./FileName\";\n\nconst styles = (theme) => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary,\n    },\n    tableIcon: {\n        marginRight: \"20px\",\n        verticalAlign: \"middle\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\",\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    tableRow: {\n        padding: \"10px 16px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    active: {\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        } else if (this.props.file.type === \"up\") {\n            icon = <KeyboardReturnIcon className={classes.icon} />;\n        } else {\n            icon = (\n                <TypeIcon\n                    className={classes.tableIcon}\n                    fileName={this.props.file.name}\n                />\n            );\n        }\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <TableRow\n                ref={this.props.pref}\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames({\n                    [classes.selected]: isSelected && !isShare,\n                    [classes.selectedShared]: isSelected && isShare,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: this.props.isActive,\n                })}\n            >\n                <TableCell\n                    ref={this.props.dref}\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.tableRow}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        <div\n                            onClick={\n                                this.props.file.type !== \"up\"\n                                    ? this.props.onIconClick\n                                    : null\n                            }\n                        >\n                            {!isSelected && icon}\n                            {isSelected && (\n                                <Grow in={isSelected}>\n                                    <CheckCircleRoundedIcon\n                                        className={classNames(\n                                            classes.checkIcon,\n                                            classes.icon\n                                        )}\n                                    />\n                                </Grow>\n                            )}\n                        </div>\n                        <FileName name={this.props.file.name} />\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&\n                            this.props.file.type !== \"up\" &&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {formatLocalTime(this.props.file.date)}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\";\nimport classNames from \"classnames\";\nimport TableItem from \"../TableRow\";\nexport default function FolderDropWarpper({\n    isListView,\n    folder,\n    onIconClick,\n    contextMenu,\n    handleClick,\n    handleDoubleClick,\n    className,\n    pref,\n}) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n    const isActive = canDrop && isOver;\n    if (!isListView) {\n        return (\n            <div ref={drop}>\n                <Folder\n                    folder={folder}\n                    onIconClick={onIconClick}\n                    isActive={isActive}\n                />\n            </div>\n        );\n    }\n    return (\n        <TableItem\n            pref={pref}\n            dref={drop}\n            className={className}\n            onIconClick={onIconClick}\n            contextMenu={contextMenu}\n            handleClick={handleClick}\n            handleDoubleClick={handleDoubleClick}\n            file={folder}\n            isActive={isActive}\n        />\n    );\n}\n","import { useRef } from \"react\";\nimport { throttle } from \"lodash\";\n\nconst useDragScrolling = () => {\n    const isScrolling = useRef(false);\n    const target = document.querySelector(\"#explorer-container\");\n\n    const goDown = () => {\n        target.scrollTop += 10;\n\n        const { offsetHeight, scrollTop, scrollHeight } = target;\n        const isScrollEnd = offsetHeight + scrollTop >= scrollHeight;\n\n        if (isScrolling.current && !isScrollEnd) {\n            window.requestAnimationFrame(goDown);\n        }\n    };\n\n    const goUp = () => {\n        target.scrollTop -= 10;\n\n        if (isScrolling.current && target.scrollTop > 0) {\n            window.requestAnimationFrame(goUp);\n        }\n    };\n\n    const onDragOver = (event) => {\n        const isMouseOnTop = event.clientY < 100;\n        const isMouseOnDown = window.innerHeight - event.clientY < 100;\n\n        if (!isScrolling.current && (isMouseOnTop || isMouseOnDown)) {\n            isScrolling.current = true;\n\n            if (isMouseOnTop) {\n                window.requestAnimationFrame(goUp);\n            }\n\n            if (isMouseOnDown) {\n                window.requestAnimationFrame(goDown);\n            }\n        } else if (!isMouseOnTop && !isMouseOnDown) {\n            isScrolling.current = false;\n        }\n    };\n\n    const throttleOnDragOver = throttle(onDragOver, 300);\n\n    const addEventListenerForWindow = () => {\n        window.addEventListener(\"dragover\", throttleOnDragOver, false);\n    };\n\n    const removeEventListenerForWindow = () => {\n        window.removeEventListener(\"dragover\", throttleOnDragOver, false);\n        isScrolling.current = false;\n    };\n\n    return {\n        addEventListenerForWindow,\n        removeEventListenerForWindow,\n    };\n};\n\nexport default useDragScrolling;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useLocation } from \"react-router-dom\";\nimport { pathBack } from \"../../utils\";\nimport {\n    changeContextMenu,\n    dragAndDrop,\n    navigateTo,\n    openLoadingDialog,\n    openPreview,\n    selectFile,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport useDragScrolling from \"./DnD/Scrolling\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: \"7px\",\n    },\n    fixFlex: {\n        minWidth: 0,\n    },\n    dragging: {\n        opacity: 0.4,\n    },\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector((state) => state.navigator.path);\n    const shareInfo = useSelector((state) => state.viewUpdate.shareInfo);\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const navigatorPath = useSelector((state) => state.navigator.path);\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n\n    const NavitateTo = useCallback((targets) => dispatch(navigateTo(targets)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch]\n    );\n    const OpenLoadingDialog = useCallback(\n        (text) => dispatch(openLoadingDialog(text)),\n        [dispatch]\n    );\n    const OpenPreview = useCallback((share) => dispatch(openPreview(share)), [\n        dispatch,\n    ]);\n    const StartDownload = useCallback(\n        (share, file) => dispatch(StartDownload(share, file)),\n        [dispatch]\n    );\n\n    const classes = useStyles();\n\n    const contextMenu = (e) => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex((value) => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const SelectFile = (e) => {\n        dispatch(selectFile(props.file, e, props.index));\n    };\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\n        );\n    };\n    const handleClick = (e) => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n            return;\n        }\n\n        SelectFile(e);\n        if (\n            props.file.type === \"dir\" &&\n            !e.ctrlKey &&\n            !e.metaKey &&\n            !e.shiftKey\n        ) {\n            enterFolder();\n        }\n    };\n\n    const handleDoubleClick = () => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n\n        OpenPreview(shareInfo);\n    };\n\n    const handleIconClick = (e) => {\n        e.stopPropagation();\n        if (!e.shiftKey) {\n            e.ctrlKey = true;\n        }\n        SelectFile(e);\n        return false;\n    };\n\n    const {\n        addEventListenerForWindow,\n        removeEventListenerForWindow,\n    } = useDragScrolling();\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod,\n        },\n        begin: () => {\n            addEventListenerForWindow();\n        },\n        end: (item, monitor) => {\n            removeEventListenerForWindow();\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <>\n                {props.file.type === \"dir\" && (\n                    <DropWarpper\n                        isListView={true}\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type !== \"dir\" && (\n                    <TableItem\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        file={props.file}\n                    />\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging,\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper\n                        isListView={false}\n                        onIconClick={handleIconClick}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon\n                        onIconClick={handleIconClick}\n                        ref={drag}\n                        file={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon\n                        onIconClick={handleIconClick}\n                        file={props.file}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n","import {\n    CircularProgress,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\nimport explorer, {\n    changeContextMenu,\n    openRemoveDialog,\n    setSelectedTarget,\n} from \"../../redux/explorer\";\nimport { isMac } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport ContextMenu from \"./ContextMenu\";\nimport ImgPreivew from \"./ImgPreview\";\nimport ObjectIcon from \"./ObjectIcon\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { usePagination } from \"../../hooks/pagination\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\",\n    },\n    root: {\n        padding: \"10px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(100vh - 113px)\",\n        },\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(100vh - 113px)\",\n        },\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\",\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\",\n    },\n    errorBox: {\n        padding: theme.spacing(4),\n    },\n    errorMsg: {\n        marginTop: \"10px\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    flexFix: {\n        minWidth: 0,\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\",\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n    gridContainer: {\n        [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns:\n                \"repeat(auto-fill,minmax(180px,1fr))!important\",\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            gridTemplateColumns:\n                \"repeat(auto-fill,minmax(220px,1fr))!important\",\n        },\n        display: \"grid!important\",\n    },\n    gridItem: {\n        flex: \"1 1 220px!important\",\n    },\n}));\n\nconst keyMap = {\n    DELETE_FILE: \"del\",\n    SELECT_ALL_SHOWED: `${isMac() ? \"command\" : \"ctrl\"}+a`,\n    SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+shift+a`,\n    DESELECT_ALL: \"esc\",\n};\n\nexport default function Explorer({ share }) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const selected = useSelector((state) => state.explorer.selected);\n    const search = useSelector((state) => state.explorer.search);\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\n    const path = useSelector((state) => state.navigator.path);\n    const sortMethod = useSelector((state) => state.viewUpdate.sortMethod);\n    const navigatorErrorMsg = useSelector(\n        (state) => state.viewUpdate.navigatorErrorMsg\n    );\n    const navigatorError = useSelector(\n        (state) => state.viewUpdate.navigatorError\n    );\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n\n    const OpenRemoveDialog = useCallback(() => dispatch(openRemoveDialog()), [\n        dispatch,\n    ]);\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n    const ChangeContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(explorer.actions.changeSortMethod(method)),\n        [dispatch]\n    );\n    const SelectAll = useCallback(\n        () => dispatch(explorer.actions.selectAll()),\n        [dispatch]\n    );\n\n    const { dirList, fileList, startIndex } = usePagination();\n\n    const handlers = {\n        DELETE_FILE: () => {\n            if (selected.length > 0 && !share) {\n                OpenRemoveDialog();\n            }\n        },\n        SELECT_ALL_SHOWED: (e) => {\n            e.preventDefault();\n            if (selected.length >= dirList.length + fileList.length) {\n                SetSelectedTarget([]);\n            } else {\n                SetSelectedTarget([...dirList, ...fileList]);\n            }\n        },\n        SELECT_ALL: (e) => {\n            e.preventDefault();\n            SelectAll();\n        },\n        DESELECT_ALL: (e) => {\n            e.preventDefault();\n            SetSelectedTarget([]);\n        },\n    };\n\n    useEffect(\n        () =>\n            configure({\n                ignoreTags: [\"input\", \"select\", \"textarea\"],\n            }),\n        []\n    );\n\n    const contextMenu = (e) => {\n        e.preventDefault();\n        if (!search && !pathHelper.isSharePage(location.pathname)) {\n            if (!loading) {\n                ChangeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    const ClickAway = (e) => {\n        const element = e.target;\n        if (element.dataset.clickaway) {\n            SetSelectedTarget([]);\n        }\n    };\n\n    const classes = useStyles();\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const showView =\n        !loading && (dirList.length !== 0 || fileList.length !== 0);\n\n    const listView = useMemo(\n        () => (\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"namePos\" ||\n                                    sortMethod === \"nameRev\"\n                                }\n                                direction={\n                                    sortMethod === \"namePos\" ? \"asc\" : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"namePos\"\n                                            ? \"nameRev\"\n                                            : \"namePos\"\n                                    );\n                                }}\n                            >\n                                {t(\"name\")}\n                                {sortMethod === \"namePos\" ||\n                                sortMethod === \"nameRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"nameRev\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"sizePos\" ||\n                                    sortMethod === \"sizeRes\"\n                                }\n                                direction={\n                                    sortMethod === \"sizePos\" ? \"asc\" : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"sizePos\"\n                                            ? \"sizeRes\"\n                                            : \"sizePos\"\n                                    );\n                                }}\n                            >\n                                {t(\"size\")}\n                                {sortMethod === \"sizePos\" ||\n                                sortMethod === \"sizeRes\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    sortMethod === \"modifyTimePos\" ||\n                                    sortMethod === \"modifyTimeRev\"\n                                }\n                                direction={\n                                    sortMethod === \"modifyTimePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    ChangeSortMethod(\n                                        sortMethod === \"modifyTimePos\"\n                                            ? \"modifyTimeRev\"\n                                            : \"modifyTimePos\"\n                                    );\n                                }}\n                            >\n                                {t(\"lastModified\")}\n                                {sortMethod === \"modifyTimePos\" ||\n                                sortMethod === \"modifyTimeRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pathHelper.isMobile() && path !== \"/\" && (\n                        <ObjectIcon\n                            file={{\n                                type: \"up\",\n                                name: t(\"backToParentFolder\"),\n                            }}\n                        />\n                    )}\n                    {dirList.map((value, index) => (\n                        <ObjectIcon\n                            key={value.id}\n                            file={value}\n                            index={startIndex + index}\n                        />\n                    ))}\n                    {fileList.map((value, index) => (\n                        <ObjectIcon\n                            key={value.id}\n                            file={value}\n                            index={startIndex + dirList.length + index}\n                        />\n                    ))}\n                </TableBody>\n            </Table>\n        ),\n        [dirList, fileList, path, sortMethod, ChangeSortMethod, classes]\n    );\n\n    const normalView = useMemo(\n        () => (\n            <div className={classes.flexFix}>\n                {dirList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            {t(\"folders\")}\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {dirList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    className={classes.gridItem}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        file={value}\n                                        index={startIndex + index}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n                {fileList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            {t(\"files\")}\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {fileList.map((value, index) => (\n                                <Grid\n                                    className={classes.gridItem}\n                                    key={value.id}\n                                    item\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        index={\n                                            startIndex + dirList.length + index\n                                        }\n                                        file={value}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n            </div>\n        ),\n        [dirList, fileList, classes]\n    );\n\n    const view = viewMethod === \"list\" ? listView : normalView;\n\n    return (\n        <div\n            onContextMenu={contextMenu}\n            onClick={ClickAway}\n            className={classNames(\n                {\n                    [classes.root]: viewMethod !== \"list\",\n                    [classes.rootTable]: viewMethod === \"list\",\n                    [classes.rootShare]: share,\n                },\n                classes.button\n            )}\n        >\n            <GlobalHotKeys handlers={handlers} allowChanges keyMap={keyMap} />\n            <ContextMenu share={share} />\n            <ImgPreivew />\n            {navigatorError && (\n                <Paper elevation={1} className={classes.errorBox}>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        {t(\"listError\")}\n                    </Typography>\n                    <Typography\n                        color={\"textSecondary\"}\n                        className={classes.errorMsg}\n                    >\n                        {navigatorErrorMsg.message}\n                    </Typography>\n                </Paper>\n            )}\n\n            {loading && !navigatorError && (\n                <div className={classes.loading}>\n                    <CircularProgress />\n                </div>\n            )}\n\n            {!search &&\n                isHomePage &&\n                dirList.length === 0 &&\n                fileList.length === 0 &&\n                !loading &&\n                !navigatorError && (\n                    <Nothing\n                        primary={t(\"dropFileHere\")}\n                        secondary={t(\"orClickUploadButton\")}\n                    />\n                )}\n            {((search &&\n                dirList.length === 0 &&\n                fileList.length === 0 &&\n                !loading &&\n                !navigatorError) ||\n                (dirList.length === 0 &&\n                    fileList.length === 0 &&\n                    !loading &&\n                    !navigatorError &&\n                    !isHomePage)) && <Nothing primary={t(\"nothingFound\")} />}\n            {showView && view}\n        </div>\n    );\n}\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst paginate = (array, page_size, page_number) =>\n    page_size === -1\n        ? array\n        : array.slice((page_number - 1) * page_size, page_number * page_size);\n\nexport function usePagination() {\n    const files = useSelector((state) => state.explorer.fileList);\n    const folders = useSelector((state) => state.explorer.dirList);\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\n\n    const { dirList, fileList, startIndex } = useMemo(() => {\n        const all = paginate(\n            [...folders, ...files],\n            pagination.size,\n            pagination.page\n        );\n        const dirList = [];\n        const fileList = [];\n        all.forEach((v) =>\n            v.type === \"dir\" ? dirList.push(v) : fileList.push(v)\n        );\n        const startIndex = pagination.size * (pagination.page - 1);\n        return { dirList, fileList, startIndex };\n    }, [folders, files, pagination]);\n    return { dirList, fileList, startIndex };\n}\n","import React, { useEffect } from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    button: {\n        textTransform: \"none\",\n    },\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder,\n                    },\n                };\n            }\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (props.more && isActive) {\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <span onClick={props.onClick} ref={inputRef}>\n            <Button\n                ref={drop}\n                className={classNames(\n                    {\n                        [classes.active]: isActive,\n                    },\n                    classes.button\n                )}\n                component=\"span\"\n                title={props.title}\n            >\n                {props.more && <MoreIcon />}\n                {!props.more && (\n                    <>\n                        {props.folder}\n                        {props.last && (\n                            <ExpandMore className={classes.expandMore} />\n                        )}\n                    </>\n                )}\n            </Button>\n        </span>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light,\n    },\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder,\n                },\n            });\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id, isActive);\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive,\n            })}\n            onClick={(e) => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\nexport default function DropDown(props) {\n    let timer;\n    let first = props.folders.length;\n    const status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n    }\n\n    const setActiveStatus = (id, value) => {\n        status[id] = value;\n        if (value) {\n            clearTimeout(timer);\n        } else {\n            let shouldClose = true;\n            status.forEach((element) => {\n                if (element) {\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose) {\n                if (first <= 0) {\n                    timer = setTimeout(() => {\n                        props.onClose();\n                    }, 100);\n                } else {\n                    first--;\n                }\n            }\n        }\n        console.log(status);\n    };\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    key={id}\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus={setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport explorer, {\n    drawerToggleAction,\n    navigateTo,\n    navigateUp,\n    openCompressDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openShareDialog,\n    refreshFileList,\n    setNavigatorError,\n    setNavigatorLoadingStatus,\n    setSelectedTarget,\n} from \"../../../redux/explorer\";\nimport { fixUrlHash, setGetParameter } from \"../../../utils/index\";\nimport {\n    Divider,\n    ListItemIcon,\n    Menu,\n    MenuItem,\n    withStyles,\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../utils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Archive } from \"@material-ui/icons\";\nimport { FilePlus } from \"mdi-material-ui\";\nimport SubActions from \"./SubActions\";\nimport { setCurrentPolicy } from \"../../../redux/explorer/action\";\nimport { list } from \"../../../services/navigate\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        search: state.explorer.search,\n        sortMethod: state.viewUpdate.sortMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigateToPath: (path) => {\n            dispatch(navigateTo(path));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: (list) => {\n            dispatch(explorer.actions.updateFileList(list));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: (target) => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        setCurrentPolicy: (policy) => {\n            dispatch(setCurrentPolicy(policy));\n        },\n    };\n};\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst styles = (theme) => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\",\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\",\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\",\n    },\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\",\n    },\n});\n\nclass NavigatorComponent extends Component {\n    search = undefined;\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        const url = new URL(fixUrlHash(window.location.href));\n        const c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\" : c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n        // 后退操作时重新导航\n        window.onpopstate = () => {\n            const url = new URL(fixUrlHash(window.location.href));\n            const c = url.searchParams.get(\"path\");\n            if (c !== null) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\"),\n        });\n        const newPath = path !== null ? path : this.props.path;\n        list(\n            newPath,\n            this.props.share,\n            this.search ? this.search.keywords : \"\",\n            this.search ? this.search.searchPath : \"\"\n        )\n            .then((response) => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                if (!this.search) {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n                if (response.data.policy) {\n                    this.props.setCurrentPolicy({\n                        id: response.data.policy.id,\n                        name: response.data.policy.name,\n                        type: response.data.policy.type,\n                        maxSize: response.data.policy.max_size,\n                        allowedSuffix: response.data.policy.file_type,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = (path) => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.search !== nextProps.search) {\n            this.search = nextProps.search;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = (force) => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = (e) => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    performAction = (e) => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        const presentPath = this.props.path.split(\"/\");\n        const newTarget = [\n            {\n                id: this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\n            },\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            case \"newFile\":\n                this.props.openCreateFileDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        const presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    {t(\"fileManager.refresh\")}\n                </MenuItem>\n                {!this.props.search && isHomePage && (\n                    <div>\n                        <Divider />\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            {t(\"fileManager.share\")}\n                        </MenuItem>\n                        {user.group.compress && (\n                            <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                {t(\"fileManager.compress\")}\n                            </MenuItem>\n                        )}\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.performAction(\"newfolder\")}\n                        >\n                            <ListItemIcon>\n                                <NewFolderIcon />\n                            </ListItemIcon>\n                            {t(\"fileManager.newFolder\")}\n                        </MenuItem>\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\n                            <ListItemIcon>\n                                <FilePlus />\n                            </ListItemIcon>\n                            {t(\"fileManager.newFile\")}\n                        </MenuItem>\n                    </div>\n                )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare,\n                    },\n                    classes.container\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        {/*<span>*/}\n                        {/*    <PathButton*/}\n                        {/*        folder=\"/\"*/}\n                        {/*        path=\"/\"*/}\n                        {/*        onClick={(e) => this.navigateTo(e, -1)}*/}\n                        {/*    />*/}\n                        {/*    <RightIcon className={classes.rightIcon} />*/}\n                        {/*</span>*/}\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title={t(\"fileManager.showFullPath\")}\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={(e) =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={(e) =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        <SubActions isSmall />\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(NavigatorComponent))));\n\nexport default Navigator;\n","import React from \"react\";\nimport { BulletList } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"100%\",\n        // padding: 40,\n        // [theme.breakpoints.down(\"md\")]: {\n        //     width: \"100%\",\n        //     padding: 10\n        // }\n    },\n}));\n\nconst MyLoader = (props) => (\n    <BulletList\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction ListLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default ListLoading;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Clear, Folder } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { setSideBar } from \"../../../redux/explorer/action\";\nimport TypeIcon from \"../TypeIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../../middleware/Api\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TimeAgo from \"timeago-react\";\nimport ListLoading from \"../../Placeholder/ListLoading\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport { navigateTo, toggleSnackbar } from \"../../../redux/explorer\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        boxShadow:\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    header: {\n        display: \"flex\",\n        padding: theme.spacing(3),\n        placeContent: \"space-between\",\n    },\n    fileIcon: { width: 33, height: 33 },\n    fileIconSVG: { fontSize: 20 },\n    folderIcon: {\n        color: theme.palette.text.secondary,\n        width: 33,\n        height: 33,\n    },\n    fileName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        wordBreak: \"break-all\",\n        flexGrow: 2,\n    },\n    closeIcon: {\n        placeSelf: \"flex-start\",\n        marginTop: 2,\n    },\n    propsContainer: {\n        padding: theme.spacing(3),\n    },\n    propsLabel: {\n        color: theme.palette.text.secondary,\n        padding: theme.spacing(1),\n    },\n    propsTime: {\n        color: theme.palette.text.disabled,\n        padding: theme.spacing(1),\n    },\n    propsValue: {\n        padding: theme.spacing(1),\n        wordBreak: \"break-all\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SideDrawer() {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\n    const selected = useSelector((state) => state.explorer.selected);\n    const SetSideBar = useCallback((open) => dispatch(setSideBar(open)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const search = useSelector((state) => state.explorer.search);\n    const [target, setTarget] = useState(null);\n    const [details, setDetails] = useState(null);\n    const loadProps = (object) => {\n        API.get(\n            \"/object/property/\" +\n                object.id +\n                \"?trace_root=\" +\n                (search ? \"true\" : \"false\") +\n                \"&is_folder=\" +\n                (object.type === \"dir\").toString()\n        )\n            .then((response) => {\n                setDetails(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        setDetails(null);\n        if (sideBarOpen) {\n            if (selected.length !== 1) {\n                SetSideBar(false);\n            } else {\n                setTarget(selected[0]);\n                loadProps(selected[0]);\n            }\n        }\n    }, [selected, sideBarOpen]);\n\n    const classes = useStyles();\n    const propsItem = [\n        {\n            label: t(\"fileManager.size\"),\n            value: (d, target) =>\n                sizeToString(d.size) +\n                t(\"fileManager.bytes\", { bytes: d.size.toLocaleString() }),\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.storagePolicy\"),\n            value: (d, target) => d.policy,\n            show: (d) => d.type === \"file\",\n        },\n        {\n            label: t(\"fileManager.childFolders\"),\n            value: (d, target) =>\n                t(\"fileManager.childCount\", {\n                    num: d.child_folder_num.toLocaleString(),\n                }),\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: t(\"fileManager.childFiles\"),\n            value: (d, target) =>\n                t(\"fileManager.childCount\", {\n                    num: d.child_file_num.toLocaleString(),\n                }),\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: t(\"fileManager.parentFolder\"),\n            // eslint-disable-next-line react/display-name\n            value: (d, target) => {\n                const path = d.path === \"\" ? target.path : d.path;\n                const name = filename(path);\n                return (\n                    <Tooltip title={path}>\n                        <Link\n                            href={\"javascript:void\"}\n                            onClick={() => NavigateTo(path)}\n                        >\n                            {name === \"\" ? t(\"fileManager.rootFolder\") : name}\n                        </Link>\n                    </Tooltip>\n                );\n            },\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.modifiedAt\"),\n            value: (d, target) => formatLocalTime(d.updated_at),\n            show: (d) => true,\n        },\n        {\n            label: t(\"fileManager.createdAt\"),\n            value: (d) => formatLocalTime(d.created_at),\n            show: (d) => true,\n        },\n    ];\n    const content = (\n        <Grid container className={classes.propsContainer}>\n            {!details && <ListLoading />}\n            {details && (\n                <>\n                    {propsItem.map((item) => {\n                        if (item.show(target)) {\n                            return (\n                                <>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.propsLabel}\n                                    >\n                                        {item.label}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.propsValue}\n                                    >\n                                        {item.value(details, target)}\n                                    </Grid>\n                                </>\n                            );\n                        }\n                    })}\n                    {target.type === \"dir\" && (\n                        <Grid item xs={12} className={classes.propsTime}>\n                            <Trans\n                                i18nKey=\"fileManager.statisticAt\"\n                                components={[\n                                    <span key={0} />,\n                                    <TimeAgo\n                                        key={1}\n                                        datetime={details.query_date}\n                                        locale={t(\"timeAgoLocaleCode\", {\n                                            ns: \"common\",\n                                        })}\n                                    />,\n                                    <span key={2} />,\n                                ]}\n                            />\n                        </Grid>\n                    )}\n                </>\n            )}\n        </Grid>\n    );\n    return (\n        <>\n            <Hidden smUp>\n                <Dialog\n                    fullScreen\n                    open={sideBarOpen}\n                    TransitionComponent={Transition}\n                >\n                    {target && (\n                        <>\n                            <AppBar className={classes.appBar}>\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        color=\"inherit\"\n                                        onClick={() => SetSideBar(false)}\n                                        aria-label=\"close\"\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        {target.name}\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            {content}\n                        </>\n                    )}\n                </Dialog>\n            </Hidden>\n            <Hidden xsDown>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    open={sideBarOpen}\n                    anchor=\"right\"\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        {target && (\n                            <>\n                                <div className={classes.header}>\n                                    {target.type === \"dir\" && (\n                                        <Folder\n                                            className={classes.folderIcon}\n                                        />\n                                    )}\n                                    {target.type !== \"dir\" && (\n                                        <TypeIcon\n                                            isUpload\n                                            className={classes.fileIcon}\n                                            iconClassName={classes.fileIconSVG}\n                                            fileName={target.name}\n                                        />\n                                    )}\n                                    <div className={classes.fileName}>\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            {target.name}\n                                        </Typography>\n                                    </div>\n                                    <IconButton\n                                        onClick={() => SetSideBar(false)}\n                                        className={classes.closeIcon}\n                                        aria-label=\"close\"\n                                        size={\"small\"}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                </div>\n                            </>\n                        )}\n                        <Divider />\n                        {content}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </>\n    );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { PaginationItem } from \"@material-ui/lab\";\n\nexport default function CustomPaginationItem(props) {\n    const inputRef = useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (\n            isActive &&\n            props.onClick &&\n            props.type !== \"start-ellipsis\" &&\n            props.type !== \"end-ellipsis\"\n        ) {\n            console.log(\"ss\");\n            props.onClick();\n        }\n    }, [isActive, inputRef]);\n\n    if (\n        props.isMobile &&\n        (props.type === \"start-ellipsis\" ||\n            props.type === \"end-ellipsis\" ||\n            props.type === \"page\")\n    ) {\n        if (props.selected) {\n            return (\n                <div>\n                    {props.page} / {props.count}\n                </div>\n            );\n        }\n        return <></>;\n    }\n    return (\n        <div ref={inputRef}>\n            <PaginationItem ref={drop} {...props} />\n        </div>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Pagination } from \"@material-ui/lab\";\nimport CustomPaginationItem from \"./PaginationItem\";\nimport { setPagination } from \"../../redux/viewUpdate/action\";\nimport AutoHidden from \"../Dial/AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: \"fixed\",\n        bottom: 23,\n        /* left: 8px; */\n        background: theme.palette.background.paper,\n        borderRadius: 24,\n        boxShadow:\n            \" 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%)\",\n        padding: \"8px 4px 8px 4px\",\n        marginLeft: 20,\n    },\n    placeholder: {\n        marginTop: 80,\n    },\n}));\n\nexport default function PaginationFooter() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const files = useSelector((state) => state.explorer.fileList);\n    const folders = useSelector((state) => state.explorer.dirList);\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\n    const location = useLocation();\n\n    const SetPagination = useCallback((p) => dispatch(setPagination(p)), [\n        dispatch,\n    ]);\n\n    const handleChange = (event, value) => {\n        SetPagination({ ...pagination, page: value });\n    };\n\n    const count = useMemo(\n        () => Math.ceil((files.length + folders.length) / pagination.size),\n        [files, folders, pagination.size]\n    );\n\n    const isMobile = statusHelper.isMobile();\n    const isSharePage = statusHelper.isSharePage(location.pathname);\n\n    if (count > 1 && !loading) {\n        return (\n            <>\n                {!isMobile && !isSharePage && (\n                    <div className={classes.placeholder} />\n                )}\n                <AutoHidden\n                    enable\n                    element={\n                        isMobile || isSharePage\n                            ? null\n                            : document.querySelector(\"#explorer-container\")\n                    }\n                >\n                    <div className={classes.root}>\n                        <Pagination\n                            renderItem={(item) => (\n                                <CustomPaginationItem\n                                    count={count}\n                                    isMobile={isMobile}\n                                    {...item}\n                                />\n                            )}\n                            color=\"secondary\"\n                            count={count}\n                            page={pagination.page}\n                            onChange={handleChange}\n                        />\n                    </div>\n                </AutoHidden>\n            </>\n        );\n    }\n    return <div></div>;\n}\n","import React, { Component } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport DragLayer from \"./DnD/DragLayer\";\nimport Explorer from \"./Explorer\";\nimport Modals from \"./Modals\";\nimport Navigator from \"./Navigator/Navigator\";\nimport SideDrawer from \"./Sidebar/SideDrawer\";\nimport classNames from \"classnames\";\nimport {\n    closeAllModals,\n    navigateTo,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport PaginationFooter from \"./Pagination\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"calc(100vh - 64px)\",\n        [theme.breakpoints.down(\"xs\")]: {\n            height: \"100%\",\n        },\n    },\n    rootShare: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        minHeight: 500,\n    },\n    explorer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflowY: \"auto\",\n    },\n});\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSubTitle: (text) => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n    };\n};\n\nclass FileManager extends Component {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n    }\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navigateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            this.props.changeSubTitle(null);\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                className={classNames({\n                    [classes.rootShare]: this.props.share,\n                    [classes.root]: !this.props.share,\n                })}\n            >\n                <DndProvider backend={HTML5Backend}>\n                    <Modals share={this.props.share} />\n                    <Navigator\n                        isShare={this.props.isShare}\n                        share={this.props.share}\n                    />\n                    <div className={classes.explorer} id={\"explorer-container\"}>\n                        <Explorer share={this.props.share} />\n                        <PaginationFooter />\n                    </div>\n\n                    <DragLayer />\n                </DndProvider>\n                <SideDrawer />\n            </div>\n        );\n    }\n}\n\nFileManager.propTypes = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileManager)));\n","import React from \"react\";\nimport {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function SelectMenu({\n    options,\n    anchorEl,\n    handleClose,\n    callback,\n    selected,\n    showIcon = true,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n        >\n            {options.map((item) => (\n                <>\n                    <MenuItem\n                        style={{ whiteSpace: \"normal\" }}\n                        dense\n                        onClick={() => callback(item)}\n                    >\n                        {showIcon && (\n                            <ListItemIcon className={classes.icon}>\n                                {item.name !== selected ? (\n                                    <Icon />\n                                ) : (\n                                    <CheckIcon />\n                                )}\n                            </ListItemIcon>\n                        )}\n\n                        {item.name}\n                    </MenuItem>\n                </>\n            ))}\n        </Menu>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { getPreviewURL } from \"../../middleware/Api\";\nimport { useHistory } from \"react-router-dom\";\nimport { basename, fileNameNoExt, isMobileSafari } from \"../../utils\";\nimport { list } from \"../../services/navigate\";\nimport { getViewerURL } from \"../../redux/explorer/action\";\nimport { subtitleSuffix, videoPreviewSuffix } from \"../../config\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport { Launch, PlaylistPlay, Subtitles } from \"@material-ui/icons\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport SelectMenu from \"./SelectMenu\";\nimport { getDownloadURL } from \"../../services/file\";\nimport { sortMethodFuncs } from \"../../redux/explorer/action\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Artplayer = React.lazy(() =>\n    import(\n        /* webpackChunkName: \"artplayer\" */ \"artplayer/examples/react/Artplayer\"\n    )\n);\n\nconst externalPlayers = [\n    {\n        name: \"PotPlayer\",\n        url: (source, title) => `potplayer://${source}`,\n    },\n    {\n        name: \"VLC\",\n        url: (source, title) => `vlc://${source}`,\n    },\n    {\n        name: \"IINA\",\n        url: (source, title) => `iina://weblink?url=${source}`,\n    },\n    {\n        name: \"nPlayer\",\n        url: (source, title) => `nplayer-${source}`,\n    },\n    {\n        name: \"MXPlayer (Free)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.ad;S.title=${title};end`,\n    },\n    {\n        name: \"MXPlayer (Pro)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.pro;S.title=${title};end`,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 20,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    player: {\n        height: \"100vh\",\n        maxHeight: \"calc(100vh - 180px)\",\n    },\n    actions: {\n        marginTop: theme.spacing(2),\n    },\n    actionButton: {\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    \"@global\": {\n        \"video,.art-video-player,.art-bottom\":{\n            borderRadius: theme.shape.borderRadius,\n        }\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer() {\n    const { t } = useTranslation();\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const { title, path } = UseFileSubTitle(query, math, location);\n    const theme = useTheme();\n    const [art, setArt] = useState(null);\n    const history = useHistory();\n    const [files, setFiles] = useState([]);\n    const [subtitles, setSubtitles] = useState([]);\n    const [playlist, setPlaylist] = useState([]);\n    const [subtitleOpen, setSubtitleOpen] = useState(null);\n    const [subtitleSelected, setSubtitleSelected] = useState(\"\");\n    const [playlistOpen, setPlaylistOpen] = useState(null);\n    const [externalPlayerOpen, setExternalPlayerOpen] = useState(null);\n    const isShare = pathHelper.isSharePage(location.pathname);\n    const sortMethod = useSelector((state) => state.viewUpdate.sortMethod);\n    const sortFunc = sortMethodFuncs[sortMethod];\n\n    useEffect(() => {\n        art &&\n            art.on(\"ready\", () => {\n                art.autoHeight = true;\n            });\n        return () => {\n            if (\n                art !== null &&\n                !isMobileSafari() &&\n                document.pictureInPictureEnabled &&\n                art.playing\n            ) {\n                art.pip = true;\n                art.query(\".art-video\").addEventListener(\n                    \"leavepictureinpicture\",\n                    () => {\n                        art.pause();\n                    },\n                    false\n                );\n            }\n        };\n    }, [art]);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (art !== null) {\n            const newURL = getPreviewURL(\n                isShare,\n                id,\n                query.get(\"id\"),\n                query.get(\"share_path\")\n            );\n            if (newURL !== art.url) {\n                if (art.subtitle) {\n                    art.subtitle.show = false;\n                }\n                art.switchUrl(newURL);\n                if (path && path !== \"\") {\n                    list(\n                        basename(path),\n                        isShare ? { key: id } : null,\n                        \"\",\n                        \"\"\n                    ).then((res) => {\n                        setFiles(\n                            res.data.objects.sort(sortFunc).filter((o) => o.type === \"file\")\n                        );\n                        setPlaylist(\n                            res.data.objects.filter(\n                                (o) =>\n                                    o.type === \"file\" &&\n                                    videoPreviewSuffix.indexOf(\n                                        o.name.split(\".\").pop().toLowerCase()\n                                    ) !== -1\n                            )\n                        );\n                    });\n                }\n            }\n        }\n    }, [art, id, location, path]);\n\n    const switchSubtitle = (f) => {\n        if (art !== null) {\n            const fileType = f.name.split(\".\").pop().toLowerCase();\n            art.subtitle.switch(\n                getPreviewURL(\n                    isShare,\n                    id,\n                    f.id,\n                    pathJoin([basename(query.get(\"share_path\")), f.name])\n                ),\n                {\n                    type: fileType,\n                }\n            );\n            art.subtitle.show = true;\n            setSubtitleSelected(f.name);\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                t(\"fileManager.subtitleSwitchTo\", {\n                    subtitle: f.name,\n                }),\n                \"info\"\n            );\n        }\n    };\n\n    useEffect(() => {\n        if (files.length > 0) {\n            const fileNameMatch = fileNameNoExt(title) + \".\";\n            const options = files.filter((f) => {\n                const fileType = f.name.split(\".\").pop().toLowerCase();\n                return subtitleSuffix.indexOf(fileType) !== -1;\n            }).sort((a, b) => {\n                return (a.name.startsWith(fileNameMatch) && !b.name.startsWith(fileNameMatch)) ? -1 : 0;\n            });\n            if (options.length > 0 && options[0].name.startsWith(fileNameMatch)) {\n                switchSubtitle(options[0]);\n            }\n            setSubtitles(options);\n        }\n    }, [files]);\n\n    const switchVideo = (file) => {\n        setSubtitleSelected(null);\n        if (isShare) {\n            file.key = id;\n        }\n        if (isMobileSafari()) {\n            window.location.href = getViewerURL(\"video\", file, isShare);\n        } else {\n            history.push(getViewerURL(\"video\", file, isShare));\n        }\n    };\n\n    const setSubtitle = (sub) => {\n        setSubtitleOpen(null);\n        switchSubtitle(sub);\n    };\n\n    const startSelectSubTitle = (e) => {\n        if (subtitles.length === 0) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"fileManager.noSubtitleAvailable\"),\n                \"warning\"\n            );\n            return;\n        }\n        setSubtitleOpen(e.currentTarget);\n    };\n\n    const openInExternalPlayer = (player) => {\n        const current = { name: title };\n        current.id = query.get(\"id\");\n        current.path = basename(path);\n        if (isShare) {\n            current.key = id;\n        }\n\n        setExternalPlayerOpen(null);\n        getDownloadURL(current)\n            .then((response) => {\n                window.location.assign(player.url(response.data, title));\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <Suspense fallback={<TextLoading />}>\n                    <Artplayer\n                        option={{\n                            title: title,\n                            theme: theme.palette.secondary.main,\n                            flip: true,\n                            setting: true,\n                            playbackRate: true,\n                            aspectRatio: true,\n                            hotkey: true,\n                            pip: true,\n                            fullscreen: true,\n                            fullscreenWeb: true,\n                            autoHeight: true,\n                            whitelist: [\"*\"],\n                            moreVideoAttr: {\n                                \"webkit-playsinline\": true,\n                                playsInline: true,\n                            },\n                            lang: t(\"artPlayerLocaleCode\", { ns: \"common\" }),\n                        }}\n                        className={classes.player}\n                        getInstance={(a) => setArt(a)}\n                    />\n                </Suspense>\n            </Paper>\n            <div className={classes.actions}>\n                <Button\n                    onClick={startSelectSubTitle}\n                    className={classes.actionButton}\n                    startIcon={<Subtitles />}\n                    variant=\"outlined\"\n                >\n                    {t(\"fileManager.subtitle\")}\n                </Button>\n                {playlist.length >= 2 && (\n                    <Button\n                        onClick={(e) => setPlaylistOpen(e.currentTarget)}\n                        className={classes.actionButton}\n                        startIcon={<PlaylistPlay />}\n                        variant=\"outlined\"\n                    >\n                        {t(\"fileManager.playlist\")}\n                    </Button>\n                )}\n                <Button\n                    onClick={(e) => setExternalPlayerOpen(e.currentTarget)}\n                    className={classes.actionButton}\n                    startIcon={<Launch />}\n                    variant=\"outlined\"\n                >\n                    {t(\"fileManager.openInExternalPlayer\")}\n                </Button>\n            </div>\n            <SelectMenu\n                selected={subtitleSelected}\n                options={subtitles}\n                callback={setSubtitle}\n                anchorEl={subtitleOpen}\n                handleClose={() => setSubtitleOpen(null)}\n            />\n            <SelectMenu\n                selected={title}\n                options={playlist}\n                callback={switchVideo}\n                anchorEl={playlistOpen}\n                handleClose={() => setPlaylistOpen(null)}\n            />\n            <SelectMenu\n                showIcon={false}\n                options={externalPlayers}\n                callback={openInExternalPlayer}\n                anchorEl={externalPlayerOpen}\n                handleClose={() => setExternalPlayerOpen(null)}\n            />\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Avatar,\n    Card,\n    CardHeader,\n    Grid,\n    IconButton,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n    cardAction: {\n        marginTop: 0,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const { t: tGlobal } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const query = useQuery();\n    const location = useLocation();\n    const history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = useCallback((keywords, page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords)\n        )\n            .then((response) => {\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"listLoadingError\"), \"error\");\n            });\n    }, []);\n\n    useEffect(() => {\n        const keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", t(\"enterKeywords\"), \"warning\");\n        }\n    }, [location]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = (event) => {\n        setOrderBy(event.target.value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        {t(\"searchResult\")}\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                {t(\"createdAtDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                {t(\"createdAtAsc\")}\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                {t(\"downloadsDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                {t(\"downloadsAsc\")}\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                {t(\"viewsDesc\")}\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                {t(\"viewsAsc\")}\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.length === 0 && <Nothing primary={t(\"noRecords\")} />}\n                {shareList.map((value) => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                classes={{\n                                    action: classes.cardAction,\n                                }}\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={tGlobal(\"fileManager.open\")}\n                                    >\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\"/s/\" + value.key)\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : t(\"sourceNotFound\")\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : t(\"sourceNotFound\")}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={\n                                    <span>\n                                        <Trans\n                                            i18nKey=\"share.sharedAt\"\n                                            components={[\n                                                <TimeAgo\n                                                    key={0}\n                                                    datetime={value.create_date}\n                                                    locale={tGlobal(\n                                                        \"timeAgoLocaleCode\",\n                                                        {\n                                                            ns: \"common\",\n                                                        }\n                                                    )}\n                                                />,\n                                            ]}\n                                        />\n                                    </span>\n                                }\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardHeader,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withRouter } from \"react-router-dom\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy: \"created_at DESC\",\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, this.state.orderBy);\n    };\n\n    showPwd = (pwd) => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = (id) => {\n        API.delete(\"/share/\" + id)\n            .then(() => {\n                let oldList = this.state.shareList;\n                oldList = oldList.filter((value) => {\n                    return value.key !== id;\n                });\n                this.setState({\n                    shareList: oldList,\n                    total: this.state.total - 1,\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.shareCanceled\"),\n                    \"success\"\n                );\n                if (oldList.length === 0) {\n                    this.loadList(1, this.state.orderBy);\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePermission = (id) => {\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"password\",\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\n        })\n            .then((response) => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePreviewOption = (id) => {\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"preview_enabled\",\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\n        })\n            .then((response) => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadList = (page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1]\n        )\n            .then((response) => {\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.listLoadingError\"),\n                    \"error\"\n                );\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value,\n        });\n        this.loadList(value, this.state.orderBy);\n    };\n\n    handleOrderChange = (event) => {\n        this.setState({\n            orderBy: event.target.value,\n        });\n        this.loadList(this.state.page, event.target.value);\n    };\n\n    isExpired = (share) => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n                            {t(\"share.sharedFiles\")}\n                        </Typography>\n                    </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select\n                                color={\"secondary\"}\n                                onChange={this.handleOrderChange}\n                                value={this.state.orderBy}\n                            >\n                                <MenuItem value={\"created_at DESC\"}>\n                                    {t(\"share.createdAtDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>\n                                    {t(\"share.createdAtAsc\")}\n                                </MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>\n                                    {t(\"share.downloadsDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>\n                                    {t(\"share.downloadsAsc\")}\n                                </MenuItem>\n                                <MenuItem value={\"views DESC\"}>\n                                    {t(\"share.viewsDesc\")}\n                                </MenuItem>\n                                <MenuItem value={\"views ASC\"}>\n                                    {t(\"share.viewsAsc\")}\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} className={classes.gird}>\n                    {this.state.shareList.length === 0 && (\n                        <Nothing primary={t(\"share.noRecords\")} />\n                    )}\n                    {this.state.shareList.map((value) => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={6}\n                            md={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : t(\"share.sourceNotFound\")\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : t(\"share.sourceNotFound\")}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {formatLocalTime(value.create_date)}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label={t(\"share.expired\")}\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\",\n                                    }}\n                                >\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={t(\"fileManager.open\")}\n                                    >\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/s/\" +\n                                                        value.key +\n                                                        (value.password === \"\"\n                                                            ? \"\"\n                                                            : \"?password=\" +\n                                                              value.password)\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={t(\n                                                    \"share.changeToPublic\"\n                                                )}\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title={t(\"share.viewPassword\")}\n                                                onClick={() =>\n                                                    this.showPwd(value.password)\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={t(\"share.changeToPrivate\")}\n                                            onClick={() =>\n                                                this.changePermission(value.key)\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon\n                                                    fontSize={\"small\"}\n                                                />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? t(\"share.disablePreview\")\n                                                : t(\"share.enablePreview\")\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <ToggleIcon\n                                                on={value.preview}\n                                                onIcon={\n                                                    <EyeIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                                offIcon={\n                                                    <VisibilityOff\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                            />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={t(\"share.cancelShare\")}\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                        count={Math.ceil(this.state.total / 18)}\n                        onChange={this.handlePageChange}\n                        color=\"secondary\"\n                    />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> {t(\"share.sharePassword\")} </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(MyShareCompoment))));\n\nexport default MyShare;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    content: {\n        padding: 0,\n    },\n    scroll: {\n        maxHeight: \"calc(100vh - 200px)\",\n    },\n}));\n\nexport default function SelectFileDialog(props) {\n    const { t } = useTranslation();\n    const [files, setFiles] = useState(props.files);\n\n    useEffect(() => {\n        setFiles(props.files);\n    }, [props.files]);\n\n    const handleChange = (index) => (event) => {\n        const filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v, k) => {\n            if (v.index === index) {\n                filesCopy[k] = {\n                    ...filesCopy[k],\n                    selected: event.target.checked ? \"true\" : \"false\",\n                };\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = () => {\n        const index = [];\n        // eslint-disable-next-line\n        files.map((v) => {\n            if (v.selected === \"true\") {\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"download.selectDownloadingFile\")}\n            </DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                <Virtuoso\n                    style={{ height: 54 * files.length }}\n                    className={classes.scroll}\n                    data={files}\n                    itemContent={(index, v) => (\n                        <MenuItem key={index}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange(v.index)}\n                                            checked={v.selected === \"true\"}\n                                            value=\"checkedA\"\n                                        />\n                                    }\n                                    label={v.path}\n                                />\n                            </FormGroup>\n                        </MenuItem>\n                    )}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        onClick={submit}\n                        disabled={props.modalsLoading}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport { hex2bin, sizeToString } from \"../../utils\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\nimport { useHistory } from \"react-router\";\nimport { TableVirtuoso } from \"react-virtuoso\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFile: {\n        width: \"100%\",\n        minWidth: 300,\n        wordBreak: \"break-all\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    subFileSize: {\n        minWidth: 120,\n    },\n    subFilePercent: {\n        minWidth: 105,\n    },\n    scroll: {\n        overflow: \"auto\",\n        maxHeight: \"300px\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n        textAlign: \"left\",\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        textAlign: \"left\",\n        paddingLeft:theme.spacing(1),\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default,\n    },\n}));\n\nexport default function DownloadingCard(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\n    const { t: tGlobal } = useTranslation();\n    const canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\n                ];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield, task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter((v) => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const deleteFile = (index) => {\n        setLoading(true);\n        const current = activeFiles();\n        const newIndex = [];\n        const newFiles = [];\n        // eslint-disable-next-line\n        current.map((v) => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\",\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\",\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex,\n        })\n            .then(() => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles,\n                    },\n                });\n                ToggleSnackbar(\"top\", \"right\", t(\"taskFileDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? t(\"unknownTaskName\") : task.name;\n    }, [task]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"taskCanceled\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const changeSelectedFile = (fileIndex) => {\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"operationSubmitted\"),\n                    \"success\"\n                );\n                setSelectDialogOpen(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const subFileList = useMemo(() => {\n        const processStyle = (value) => ({\n            background:\n                \"linear-gradient(to right, \" +\n                (theme.palette.type ===\n                    \"dark\"\n                    ? darken(\n                        theme.palette\n                            .primary\n                            .main,\n                        0.4\n                    )\n                    : lighten(\n                        theme.palette\n                            .primary\n                            .main,\n                        0.85\n                    )) +\n                \" 0%,\" +\n                (theme.palette.type ===\n                    \"dark\"\n                    ? darken(\n                        theme.palette\n                            .primary\n                            .main,\n                        0.4\n                    )\n                    : lighten(\n                        theme.palette\n                            .primary\n                            .main,\n                        0.85\n                    )) +\n                \" \" +\n                getPercent(\n                    value.completedLength,\n                    value.length\n                ).toFixed(0) +\n                \"%,\" +\n                theme.palette.background\n                    .paper +\n                \" \" +\n                getPercent(\n                    value.completedLength,\n                    value.length\n                ).toFixed(0) +\n                \"%,\" +\n                theme.palette.background\n                    .paper +\n                \" 100%)\",\n        });\n\n        const subFileCell = (value) => (\n            <>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFile}\n                >\n                    <Typography\n                        className={\n                            classes.subFileName\n                        }\n                    >\n                        <TypeIcon\n                            className={\n                                classes.subFileIcon\n                            }\n                            fileName={\n                                value.path\n                            }\n                        />\n                        {value.path}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFileSize}\n                >\n                    <Typography noWrap>\n                        {\" \"}\n                        {sizeToString(\n                            value.length\n                        )}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFilePercent}\n                >\n                    <Typography noWrap>\n                        {getPercent(\n                            value.completedLength,\n                            value.length\n                        ).toFixed(2)}\n                        %\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Tooltip\n                        title={t(\n                            \"deleteThisFile\"\n                        )}\n                    >\n                        <IconButton\n                            onClick={() =>\n                                deleteFile(\n                                    value.index\n                                )\n                            }\n                            disabled={loading}\n                            size={\"small\"}\n                        >\n                            <HighlightOff />\n                        </IconButton>\n                    </Tooltip>\n                </TableCell>\n            </>\n        );\n\n        return activeFiles().length > 5 ? (\n            <TableVirtuoso\n                style={{ height: 43 * activeFiles().length }}\n                className={classes.scroll}\n                components={{\n                    // eslint-disable-next-line react/display-name\n                    Table: (props) => <Table {...props} size={\"small\"} />,\n                    // eslint-disable-next-line react/display-name\n                    TableRow: (props) => {\n                        const index = props[\"data-index\"];\n                        const value = activeFiles()[index];\n                        return (\n                            <TableRow\n                                {...props}\n                                key={index}\n                                style={processStyle(value)}\n                            />\n                        );\n                    },\n                }}\n                data={activeFiles()}\n                itemContent={(index, value) => (\n                    subFileCell(value)\n                )}\n            />\n        ) : (\n            <div className={classes.scroll}>\n                <Table size=\"small\">\n                    <TableBody>\n                        {activeFiles().map((value) => {\n                            return (\n                                <TableRow\n                                    key={value.index}\n                                    style={processStyle(value)}\n                                >\n                                    {subFileCell(value)}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }, [\n        classes,\n        theme,\n        activeFiles,\n    ]);\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open={selectDialogOpen}\n                onClose={() => setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={selectFileOption}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" && subFileList}\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/home?path=\" + encodeURIComponent(task.dst)\n                                )\n                            }\n                        >\n                            {t(\"openDstFolder\")}\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" && (\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => {\n                                    setSelectDialogOpen(true);\n                                    setSelectFileOption([\n                                        ...props.task.info.files,\n                                    ]);\n                                }}\n                            >\n                                {t(\"selectDownloadingFile\")}\n                            </Button>\n                        )}\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            {t(\"cancelTask\")}\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"updatedAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={task.update}\n                                        locale={tGlobal(\"timeAgoLocaleCode\", {\n                                            ns: \"common\",\n                                        })}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"uploaded\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"uploadSpeed\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                            {task.info.bittorrent.mode !== \"\" && (\n                                <>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"InfoHash\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak: \"break-all\",\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={5}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"seederCount\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={5}\n                                            className={classes.infoTitle}\n                                        >\n                                            {t(\"seeding\")}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={7}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? t(\"isSeeding\")\n                                                : t(\"notSeeding\")}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"chunkSize\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"chunkNumbers\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                            {props.task.node && <Grid container xs={12} sm={4}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"downloadNode\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {props.task.node}\n                                </Grid>\n                            </Grid>}\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport { sizeToString } from \"../../utils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { TableVirtuoso } from \"react-virtuoso\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n        textAlign: \"left\",\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFile: {\n        width: \"100%\",\n        minWidth: 300,\n        wordBreak: \"break-all\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    subFileSize: {\n        minWidth: 115,\n    },\n    subFilePercent: {\n        minWidth: 100,\n    },\n    scroll: {\n        overflow: \"auto\",\n        maxHeight: \"300px\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n        textAlign: \"left\",\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        textAlign: \"left\",\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\nexport default function FinishedCard(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = () => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + props.task.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                window.location.reload();\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? t(\"unknownTaskName\") : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter((v) => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = (error) => {\n        try {\n            const res = JSON.parse(error);\n            return res.msg + \"：\" + res.error;\n        } catch (e) {\n            return t(\"transferFailed\");\n        }\n    };\n\n    const subFileList = useMemo(() => {\n        const subFileCell = (value) => (\n            <>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFile}\n                >\n                    <Typography className={classes.subFileName}>\n                        <TypeIcon\n                            className={classes.subFileIcon}\n                            fileName={value.path}\n                        />\n                        {value.path}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFileSize}\n                >\n                    <Typography noWrap>\n                        {\" \"}\n                        {sizeToString(value.length)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.subFilePercent}\n                >\n                    <Typography noWrap>\n                        {getPercent(\n                            value.completedLength,\n                            value.length\n                        ).toFixed(2)}\n                        %\n                    </Typography>\n                </TableCell>\n            </>\n        );\n\n        return activeFiles().length > 5 ? (\n            <TableVirtuoso\n                style={{ height: 57 * activeFiles().length }}\n                className={classes.scroll}\n                components={{\n                    // eslint-disable-next-line react/display-name\n                    Table: (props) => <Table {...props} />,\n                }}\n                data={activeFiles()}\n                itemContent={(index, value) => subFileCell(value)}\n            />\n        ) : (\n            <div className={classes.scroll}>\n                <Table>\n                    <TableBody>\n                        {activeFiles().map((value) => {\n                            return (\n                                <TableRow key={value.index}>\n                                    {subFileCell(value)}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }, [classes, activeFiles]);\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3 && (\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    {t(\"downloadFailed\", {\n                                        msg: props.task.error,\n                                    })}\n                                </Typography>\n                            </Tooltip>\n                        )}\n                        {props.task.status === 5 && (\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                {t(\"canceledStatus\")}\n                                {props.task.error !== \"\" && (\n                                    <span>({props.task.error})</span>\n                                )}\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 4 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.main,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"finishedStatus\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 0 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"pending\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 1 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    {t(\"transferring\")}\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 2 && (\n                                <Tooltip\n                                    title={getTaskError(props.task.task_error)}\n                                >\n                                    <Typography\n                                        variant=\"body2\"\n                                        color={\"error\"}\n                                        noWrap\n                                    >\n                                        {getTaskError(props.task.task_error)}\n                                    </Typography>\n                                </Tooltip>\n                            )}\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]: expanded,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length > 1 && subFileList}\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/home?path=\" +\n                                        encodeURIComponent(props.task.dst)\n                                )\n                            }\n                        >\n                            {t(\"openDstFolder\")}\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            {t(\"deleteRecord\")}\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"createdAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {formatLocalTime(props.task.create)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={5} className={classes.infoTitle}>\n                                    {t(\"updatedAt\")}\n                                </Grid>\n                                <Grid item xs={7} className={classes.infoValue}>\n                                    {formatLocalTime(props.task.update)}\n                                </Grid>\n                            </Grid>\n                            {props.task.node && (\n                                <Grid container xs={12} sm={6}>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.infoTitle}\n                                    >\n                                        {t(\"downloadNode\")}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.infoValue}\n                                    >\n                                        {props.task.node}\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport Modals from \"../FileManager/Modals\";\nimport { openRemoteDownloadDialog } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n}));\n\nexport default function RemoteDownloadButton() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const OpenRemoteDownloadDialog = useCallback(\n        () => dispatch(openRemoteDownloadDialog()),\n        [dispatch]\n    );\n\n    return (\n        <>\n            <Modals />\n            <AutoHidden enable>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    onClick={() => OpenRemoteDownloadDialog()}\n                >\n                    <Add />\n                </Fab>\n            </AutoHidden>\n        </>\n    );\n}\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\nimport RemoteDownloadButton from \"../Dial/Aria2\";\nimport Auth from \"../../middleware/Auth\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    actions: {\n        display: \"flex\",\n    },\n    title: {\n        marginTop: \"20px\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n    },\n    margin: {\n        marginTop: theme.spacing(2),\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n    previousDownloading = -1;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true,\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/downloading\")\n            .then((response) => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false,\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if (response.data.length > 0) {\n                    this.interval = setTimeout(\n                        this.loadDownloading,\n                        1000 *\n                            response.data.reduce(function (prev, current) {\n                                return prev.interval < current.interval\n                                    ? prev\n                                    : current;\n                            }).interval\n                    );\n                }\n\n                // 下载中条目变更时刷新已完成列表\n                if (response.data.length !== this.previousDownloading) {\n                    this.page = 0;\n                    this.setState({\n                        finishedList: [],\n                        continue: true,\n                    });\n                    this.loadMore();\n                }\n                this.previousDownloading = response.data.length;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/finished?page=\" + ++this.page)\n            .then((response) => {\n                this.setState({\n                    finishedList: [\n                        ...this.state.finishedList,\n                        ...response.data,\n                    ],\n                    loading: false,\n                    continue: response.data.length >= 10,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"download.failedToLoad\"),\n                    \"error\"\n                );\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n\n        return (\n            <div className={classes.layout}>\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    {t(\"download.active\")}\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.length === 0 && (\n                    <Nothing primary={t(\"download.activeEmpty\")} />\n                )}\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={k} task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    {t(\"download.finished\")}\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.length === 0 && (\n                        <Nothing primary={t(\"download.finishedEmpty\")} />\n                    )}\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return <FinishedCard key={k} task={value} />;\n                        }\n                        return null;\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        {t(\"download.loadMore\")}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withTranslation()(DownloadComponent)));\n\nexport default Download;\n","import React from \"react\";\nimport { Facebook } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\",\n        },\n\n        marginTop: 30,\n    },\n}));\n\nconst MyLoader = (props) => {\n    return (\n        <Facebook\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n            className={props.className}\n        />\n    );\n};\n\nfunction PageLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\",\n            }}\n        >\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Divider,\n    TextField,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    continue: {\n        marginLeft: \"auto\",\n        marginRight: \"10px\",\n        marginRottom: \"10px\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass LockedFileCompoment extends Component {\n    constructor(props) {\n        super(props);\n        const query = new URLSearchParams(this.props.location.search);\n        this.state = {\n            pwd: query.get(\"password\"),\n        };\n    }\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        if (this.state.pwd === \"\") {\n            return;\n        }\n        this.props.setPassowrd(this.state.pwd);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={\n                                    \"/api/v3/user/avatar/\" +\n                                    this.props.share.creator.key +\n                                    \"/l\"\n                                }\n                            />\n                        }\n                        title={t(\"share.privateShareTitle\", {\n                            nick: this.props.share.creator.nick,\n                        })}\n                        subheader={formatLocalTime(\n                            this.props.share.create_date\n                        )}\n                    />\n                    <Divider />\n                    <CardContent>\n                        <form onSubmit={this.submit}>\n                            <TextField\n                                id=\"pwd\"\n                                label={t(\"share.enterPassword\")}\n                                value={this.state.pwd}\n                                onChange={this.handleChange(\"pwd\")}\n                                margin=\"normal\"\n                                type=\"password\"\n                                autoFocus\n                                fullWidth\n                                color=\"secondary\"\n                            />\n                        </form>\n                    </CardContent>\n                    <CardActions\n                        className={classes.actions}\n                        disableActionSpacing\n                    >\n                        <Button\n                            onClick={this.submit}\n                            color=\"secondary\"\n                            className={classes.continue}\n                            variant=\"contained\"\n                            disabled={\n                                this.state.pwd === \"\" || this.props.loading\n                            }\n                        >\n                            {t(\"share.continue\")}\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst LockedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(LockedFileCompoment))));\n\nexport default LockedFile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    boxHeader: {\n        textAlign: \"center\",\n        padding: 24,\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: \"0 auto\",\n        width: 50,\n        height: 50,\n        cursor: \"pointer\",\n    },\n    shareDes: {\n        marginTop: 12,\n    },\n    shareInfo: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n}));\n\nexport default function Creator(props) {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const getSecondDes = () => {\n        if (props.share.expire > 0) {\n            if (props.share.expire >= 24 * 3600) {\n                return t(\"expireInXDays\", {\n                    num: Math.round(props.share.expire / (24 * 3600)),\n                });\n            }\n\n            return t(\"expireInXHours\", {\n                num: Math.round(props.share.expire / 3600),\n            });\n        }\n        return formatLocalTime(props.share.create_date);\n    };\n\n    const userProfile = () => {\n        history.push(\"/profile/\" + props.share.creator.key);\n        props.onClose && props.onClose();\n    };\n\n    return (\n        <div className={classes.boxHeader}>\n            <Avatar\n                className={classes.avatar}\n                alt={props.share.creator.nick}\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\n                onClick={() => userProfile()}\n            />\n            <Typography variant=\"h6\" className={classes.shareDes}>\n                {props.isFolder && (\n                    <Trans\n                        i18nKey=\"share.createdBy\"\n                        values={{\n                            nick: props.share.creator.nick,\n                        }}\n                        components={[\n                            <Link\n                                key={0}\n                                onClick={() => userProfile()}\n                                href={\"javascript:void(0)\"}\n                                color=\"inherit\"\n                            />,\n                        ]}\n                    />\n                )}\n                {!props.isFolder && (\n                    <Trans\n                        i18nKey=\"share.sharedBy\"\n                        values={{\n                            num: 1,\n                            nick: props.share.creator.nick,\n                        }}\n                        components={[\n                            <Link\n                                key={0}\n                                onClick={() => userProfile()}\n                                href={\"javascript:void(0)\"}\n                                color=\"inherit\"\n                            />,\n                        ]}\n                    />\n                )}\n            </Typography>\n            <Typography className={classes.shareInfo}>\n                {t(\"statistics\", {\n                    views: props.share.views,\n                    downloads: props.share.downloads,\n                    time: getSecondDes(),\n                })}\n            </Typography>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport { isPreviewable } from \"../../config\";\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router-dom\";\nimport Creator from \"./Creator\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    showAudioPreview,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { startDownload } from \"../../redux/explorer/action\";\nimport { withTranslation } from \"react-i18next\";\n\nvhCheck();\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"90px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginTop: \"90px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0,\n        },\n        justifyContent: \"center\",\n        display: \"flex\",\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    fileCotainer: {\n        width: \"200px\",\n        margin: \"0 auto\",\n    },\n    buttonCotainer: {\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\",\n        marginTop: \"20px\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    icon: {\n        borderRadius: \"10%\",\n        marginTop: 2,\n    },\n\n    box: {\n        width: \"100%\",\n        maxWidth: 440,\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 56px)\",\n            borderRadius: 0,\n            maxWidth: 1000,\n        },\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    boxContent: {\n        padding: 24,\n        display: \"flex\",\n        flex: \"1\",\n    },\n    fileName: {\n        marginLeft: 20,\n    },\n    fileSize: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n    boxFooter: {\n        display: \"flex\",\n        padding: \"20px 16px\",\n        justifyContent: \"space-between\",\n    },\n    downloadButton: {\n        marginLeft: 8,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: (first) => {\n            dispatch(showAudioPreview(first));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        startDownload: (share, file) => {\n            dispatch(startDownload(share, file));\n        },\n    };\n};\n\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\n\nclass SharedFileCompoment extends Component {\n    state = {\n        anchorEl: null,\n        open: false,\n        purchaseCallback: null,\n        loading: false,\n    };\n\n    downloaded = false;\n\n    // TODO merge into react thunk\n    preview = () => {\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.pleaseLogin\"),\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        switch (isPreviewable(this.props.share.source.name)) {\n            case \"img\":\n                this.props.showImgPreivew({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name,\n                });\n                return;\n            case \"msDoc\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/doc?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name,\n                    type: \"share\",\n                });\n                return;\n            case \"video\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/video?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"edit\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/text?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"pdf\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/pdf?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"code\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/code?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"epub\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/epub?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            default:\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"share.cannotShare\"),\n                    \"warning\"\n                );\n                return;\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n    }\n\n    scoreHandle = (callback) => (event) => {\n        callback(event);\n    };\n\n    download = () => {\n        this.props.startDownload(this.props.share, null);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        return (\n            <div className={classes.layout}>\n                <Modals />\n                <ImgPreview />\n                <div className={classes.box}>\n                    <Creator share={this.props.share} />\n                    <Divider />\n                    <div className={classes.boxContent}>\n                        <TypeIcon\n                            className={classes.icon}\n                            isUpload\n                            fileName={this.props.share.source.name}\n                        />\n                        <div className={classes.fileName}>\n                            <Typography style={{ wordBreak: \"break-all\" }}>\n                                {this.props.share.source.name}\n                            </Typography>\n                            <Typography className={classes.fileSize}>\n                                {sizeToString(this.props.share.source.size)}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.boxFooter}>\n                        <div className={classes.actionLeft}>\n                            {this.props.share.preview && (\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={this.scoreHandle(this.preview)}\n                                    disabled={this.state.loading}\n                                >\n                                    {t(\"share.preview\")}\n                                </Button>\n                            )}\n                        </div>\n                        <div className={classes.actions}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.downloadButton}\n                                onClick={this.download}\n                                disabled={this.state.loading}\n                            >\n                                {t(\"fileManager.download\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst SharedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(SharedFileCompoment))));\n\nexport default SharedFile;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Creator from \"./Creator\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    setShareUserPopover,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { setShareInfo } from \"../../redux/viewUpdate/action\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 30,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n    },\n    managerContainer: {\n        overflowY: \"auto\",\n    },\n});\n\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\n        fileList: state.explorer.fileList,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        setShareUserPopover: (e) => {\n            dispatch(setShareUserPopover(e));\n        },\n        setShareInfo: (s) => {\n            dispatch(setShareInfo(s));\n        },\n    };\n};\n\nclass SharedFolderComponent extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n        this.props.setShareInfo(this.props.share);\n    }\n\n    componentWillUnmount() {\n        this.props.setShareInfo(null);\n        this.props.setSelectedTarget([]);\n    }\n\n    handleClickAway = (e) => {\n        const ignore = e && e.clientY && e.clientY <= 64;\n        if (!pathHelper.isMobile() && !ignore) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        let readmeShowed = false;\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\n\n        return (\n            <div className={classes.layout}>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <Paper className={classes.managerContainer}>\n                        <FileManager isShare share={this.props.share} />\n                    </Paper>\n                </ClickAwayListener>\n                {/* eslint-disable-next-line */}\n                {this.props.fileList.map((value) => {\n                    if (\n                        (value.name.toLowerCase() === \"readme.md\" ||\n                            value.name.toLowerCase() === \"readme.txt\") &&\n                        !readmeShowed\n                    ) {\n                        readmeShowed = true;\n                        return <ReadMe share={this.props.share} file={value} />;\n                    }\n                })}\n                <Popover\n                    id={id}\n                    open={this.props.anchorEl !== null}\n                    anchorEl={this.props.anchorEl}\n                    onClose={() => this.props.setShareUserPopover(null)}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\",\n                    }}\n                >\n                    <Typography>\n                        <Creator\n                            isFolder\n                            onClose={() => this.props.setShareUserPopover(null)}\n                            share={this.props.share}\n                        />\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nconst SharedFolder = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\n\nexport default SharedFolder;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\nimport LockedFile from \"./LockedFile\";\nimport SharedFile from \"./SharedFile\";\nimport SharedFolder from \"./SharedFolder\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function SharePreload() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(\n                    t(\"privateShareTitle\", { nick: share.creator.nick })\n                );\n                if (password !== \"\") {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"incorrectPassword\"),\n                        \"warning\"\n                    );\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n    }, [share, SetSubTitle, ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then((response) => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password, ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={t(\"shareNotExist\")} />}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share && !share.locked && !share.is_dir && (\n                <SharedFile share={share} />\n            )}\n            {share && !share.locked && share.is_dir && (\n                <SharedFolder share={share} />\n            )}\n        </Suspense>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    closeAllModals,\n    openShareDialog,\n    setModalsLoading,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport i18n from \"i18next\";\nimport CreatShare from \"../Modals/CreateShare\";\n\nconst useStyles = makeStyles(() => ({\n    layout: {\n        width: \"auto\",\n    },\n    \"@global\": {\n        iframe: {\n            border: \"none\",\n            width: \"100%\",\n            height: \"calc(100vh - 64px)\",\n            marginBottom: -10,\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer() {\n    const [session, setSession] = useState(null);\n    const [file, setFile] = useState(null);\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n    const { title } = UseFileSubTitle(query, math, location);\n\n    const shareOpened = useSelector((state) => state.viewUpdate.modals.share);\n    const modalLoading = useSelector((state) => state.viewUpdate.modalsLoading);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const CloseAllModals = useCallback(\n        () => dispatch(closeAllModals()),\n        [dispatch]\n    );\n    const OpenShareDialog = useCallback(\n        () => dispatch(openShareDialog()),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => dispatch(setModalsLoading(status)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/doc/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n        API.get(requestURL)\n            .then((response) => {\n                if (response.data.access_token) {\n                    response.data.url = response.data.url.replaceAll(\n                        \"lng\",\n                        i18n.resolvedLanguage.toLowerCase()\n                    );\n                    response.data.url = response.data.url.replaceAll(\n                        \"darkmode\",\n                        theme.palette.type === \"dark\" ? \"2\" : \"1\"\n                    );\n                }\n\n                setSession(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n\n    const handlePostMessage = (e) => {\n        console.log(\"Received PostMessage from \" + e.origin, e.data);\n        let msg;\n        try {\n            msg = JSON.parse(e.data);\n        } catch (e) {\n            return;\n        }\n\n        if (msg.MessageId === \"UI_Sharing\") {\n            setFile([\n                {\n                    name: title,\n                    id: query.get(\"id\"),\n                    type: \"file\",\n                },\n            ]);\n            OpenShareDialog();\n        }\n    };\n\n    useEffect(() => {\n        const frameholder = document.getElementById(\"frameholder\");\n        const office_frame = document.createElement(\"iframe\");\n        if (session && session.access_token && frameholder) {\n            office_frame.name = \"office_frame\";\n            office_frame.id = \"office_frame\";\n\n            // The title should be set for accessibility\n            office_frame.title = \"Office Frame\";\n\n            // This attribute allows true fullscreen mode in slideshow view\n            // when using PowerPoint's 'view' action.\n            office_frame.setAttribute(\"allowfullscreen\", \"true\");\n\n            // The sandbox attribute is needed to allow automatic redirection to the O365 sign-in page in the business user flow\n            office_frame.setAttribute(\n                \"sandbox\",\n                \"allow-scripts allow-same-origin allow-forms allow-popups allow-top-navigation allow-popups-to-escape-sandbox\"\n            );\n            frameholder.appendChild(office_frame);\n            document.getElementById(\"office_form\").submit();\n            window.addEventListener(\"message\", handlePostMessage, false);\n\n            return () => {\n                window.removeEventListener(\"message\", handlePostMessage, false);\n            };\n        }\n    }, [session]);\n\n    return (\n        <div className={classes.layout}>\n            <CreatShare\n                open={shareOpened}\n                onClose={() => CloseAllModals()}\n                modalsLoading={modalLoading}\n                setModalsLoading={SetModalsLoading}\n                selected={file}\n            />\n            {session && !session.access_token && (\n                <iframe title={\"ms\"} src={session.url} />\n            )}\n            {session && session.access_token && (\n                <>\n                    <form\n                        id=\"office_form\"\n                        name=\"office_form\"\n                        target=\"office_frame\"\n                        action={session.url}\n                        method=\"post\"\n                    >\n                        <input\n                            name=\"access_token\"\n                            value={session.access_token}\n                            type=\"hidden\"\n                        />\n                        <input\n                            name=\"access_token_ttl\"\n                            value={session.access_token_ttl}\n                            type=\"hidden\"\n                        />\n                    </form>\n                    <span id=\"frameholder\"></span>\n                </>\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Dialog, makeStyles } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1),\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary,\n    },\n    input: {\n        width: 250,\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24,\n    },\n    button: {\n        marginTop: 8,\n    },\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const { t } = useTranslation();\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\",\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = (name) => (e) => {\n        setValue({\n            ...value,\n            [name]: e.target.value,\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\n        });\n        setPathSelectDialog(false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"navbar.addTagDialog.selectFolder\")}\n                </DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label={t(\"setting.annotation\")}\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label={t(\"setting.rootFolder\")}\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                {t(\"navbar.addTagDialog.selectFolder\")}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <Button\n                    disabled={value.path === \"\" || value.name === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    {t(\"ok\", { ns: \"common\" })}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport { randomStr } from \"../../utils\";\nimport classNames from \"classnames\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    blur: {\n        filter: \"blur(8px)\",\n    },\n    container: {\n        position: \"relative\",\n        width: 128,\n    },\n    progress: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginLeft: -12,\n        marginTop: -12,\n        zIndex: 1,\n    },\n    qrcode: {\n        transition: \"all .3s ease-in\",\n    },\n}));\n\nexport default function AppQRCode() {\n    const [content, setContent] = useState(randomStr(32));\n    const [loading, setLoading] = useState(true);\n    const { t } = useTranslation(\"application\", { keyPrefix: \"setting\" });\n    const theme = useTheme();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const refresh = () => {\n        setLoading(true);\n        API.get(\"/user/session\")\n            .then((response) => {\n                setContent(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        refresh();\n        const interval = window.setInterval(refresh, 1000 * 45);\n        return () => {\n            window.clearInterval(interval);\n        };\n    }, []);\n\n    return (\n        <Box className={classes.container}>\n            {loading && (\n                <CircularProgress size={24} className={classes.progress} />\n            )}\n            <QRCodeSVG\n                className={classNames(classes.qrcode, {\n                    [classes.blur]: loading,\n                })}\n                value={content}\n            />\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useTheme, fade } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { useSelector } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport AppQRCode from \"./AppQRCode\";\n\nconst PhoneSkeleton = () => {\n    const theme = useTheme();\n\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x={0}\n            y={0}\n            enableBackground=\"new 0 0 444 908\"\n            viewBox=\"0 0 444 908\"\n        >\n            <path\n                fill={theme.palette.background.paper}\n                stroke={theme.palette.divider}\n                strokeMiterlimit=\"10\"\n                d=\"M378.8.5H65.6C29.6.5.5 29.6.5 65.6V843c0 35.9 29.1 65.1 65.1 65.1h313.2c35.9 0 65.1-29.1 65.1-65.1V65.6c0-36-29.2-65.1-65.1-65.1zm46.5 838.8c0 28-21.8 50.7-48.8 50.7H67.9c-26.9 0-48.8-22.7-48.8-50.7V74.1c0-28 21.8-50.7 48.8-50.7h35.3c4 0 7.2 3.4 7.2 7.5 0 14.9 11.6 27 26 27h171.5c14.4.1 26-12 26-27 0-4.1 3.2-7.5 7.2-7.5h35.4c26.9 0 48.8 22.7 48.8 50.7v765.2z\"\n            ></path>\n            <path\n                fill=\"none\"\n                stroke={theme.palette.divider}\n                strokeMiterlimit=\"10\"\n                strokeWidth=\"4\"\n                d=\"M243.3 37.3h-46.4c-2 0-3.6-1.6-3.6-3.6h0c0-2 1.6-3.6 3.6-3.6h46.4c2 0 3.6 1.6 3.6 3.6h0c0 2-1.6 3.6-3.6 3.6z\"\n            ></path>\n            <circle\n                cx=\"270\"\n                cy=\"33.7\"\n                r=\"5.5\"\n                fill=\"none\"\n                stroke={theme.palette.divider}\n                strokeMiterlimit=\"10\"\n                strokeWidth=\"4\"\n            ></circle>\n        </svg>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    phoneContainer: {\n        maxWidth: 450,\n        position: \"relative\",\n        marginX: \"auto\",\n        perspective: 1500,\n        transformStyle: \"preserve-3d\",\n        perspectiveOrigin: 0,\n    },\n    phoneFrame: {\n        position: \"relative\",\n        borderRadius: \"2.75rem\",\n        boxShadow: 1,\n        width: \"75% !important\",\n        marginX: \"auto\",\n        transform: \"rotateY(-35deg) rotateX(15deg) translateZ(0)\",\n    },\n    phoneImage: {\n        objectFit: \"cover\",\n        borderRadius: \"2.5rem\",\n        filter: theme.palette.type === \"dark\" ? \"brightness(0.7)\" : \"none\",\n    },\n    highlight: {\n        background: `linear-gradient(180deg, transparent 82%, ${fade(\n            theme.palette.secondary.main,\n            0.3\n        )} 0%)`,\n    },\n    bold: {\n        fontWeight: 700,\n    },\n    frameContainer: {\n        verticalAlign: \"middle\",\n    },\n    grid: {\n        padding: theme.spacing(2),\n        paddingTop: 0,\n        paddingBottom: theme.spacing(4),\n    },\n    \"@global\": {\n        ol: {\n            paddingInlineStart: 24,\n        },\n        \"li::marker\": {\n            fontSize: \"1.25rem\",\n        },\n        li: {\n            marginBottom: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function AppPromotion() {\n    const { t } = useTranslation(\"application\", { keyPrefix: \"setting\" });\n    const theme = useTheme();\n    const title = useSelector((state) => state.siteConfig.title);\n\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.grid}>\n            <Grid item container alignItems={\"center\"} xs={12} md={7}>\n                <Box>\n                    <Box marginBottom={2}>\n                        <Typography\n                            variant=\"h4\"\n                            className={classes.bold}\n                            color=\"text.primary\"\n                        >\n                            <Trans\n                                i18nKey={\"setting.connectByiOS\"}\n                                values={{ title }}\n                                components={[\n                                    <Typography\n                                        key={0}\n                                        color={\"primary\"}\n                                        component={\"span\"}\n                                        variant={\"inherit\"}\n                                        className={classes.highlight}\n                                    />,\n                                ]}\n                            />\n                        </Typography>\n                    </Box>\n                    <Box color=\"text.secondary\">\n                        <ol>\n                            <li>\n                                <Typography variant=\"h6\" component=\"p\">\n                                    {t(\"downloadOurApp\")}\n                                </Typography>\n                                <Box marginTop={1}>\n                                    <Box\n                                        component={\"a\"}\n                                        href={\n                                            \"https://apps.apple.com/us/app/cloudreve/id1619480823\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        <Box\n                                            component={\"img\"}\n                                            src={\"/static/img/appstore.svg\"}\n                                        />\n                                    </Box>\n                                </Box>\n                            </li>\n                            <li>\n                                <Typography variant=\"h6\" component=\"p\">\n                                    {t(\"fillInEndpoint\")}\n                                </Typography>\n                                <Box marginTop={1}>\n                                    <AppQRCode />\n                                </Box>\n                            </li>\n                            <li>\n                                <Typography variant=\"h6\" component=\"p\">\n                                    {t(\"loginApp\")}\n                                </Typography>\n                            </li>\n                        </ol>\n                    </Box>\n                </Box>\n            </Grid>\n            <Grid item xs={12} md={5}>\n                <Box className={classes.phoneContainer}>\n                    <Box className={classes.phoneFrame}>\n                        <Box>\n                            <Box\n                                position={\"relative\"}\n                                zIndex={2}\n                                maxWidth={1}\n                                height={\"auto\"}\n                                className={classes.frameContainer}\n                            >\n                                <PhoneSkeleton />\n                            </Box>\n                            <Box\n                                position={\"absolute\"}\n                                top={\"2.4%\"}\n                                left={\"4%\"}\n                                width={\"92.4%\"}\n                                height={\"96%\"}\n                            >\n                                <Box\n                                    component={\"img\"}\n                                    src={\n                                        \"https://cloudreve.org/imgs/ios/\" +\n                                        (theme.palette.type === \"light\"\n                                            ? \"main.png\"\n                                            : \"main_dark.jpg\")\n                                    }\n                                    alt=\"Image Description\"\n                                    effect=\"blur\"\n                                    width={1}\n                                    height={1}\n                                    className={classes.phoneImage}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\nimport Link from \"@material-ui/core/Link\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useTranslation } from \"react-i18next\";\nimport AppPromotion from \"./AppPromotion\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { Pencil, PencilOff } from \"mdi-material-ui\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    copy: {\n        marginLeft: 10,\n    },\n}));\n\nexport default function WebDAV() {\n    const { t } = useTranslation();\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n\n    const appPromotion = useSelector((state) => state.siteConfig.app_promotion);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const copyToClipboard = (text) => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(text);\n            ToggleSnackbar(\"top\", \"center\", t(\"setting.copied\"), \"success\");\n        } else {\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                t(\"setting.pleaseManuallyCopy\"),\n                \"warning\"\n            );\n        }\n    };\n\n    const loadList = () => {\n        API.get(\"/webdav/accounts\")\n            .then((response) => {\n                setAccounts(response.data.accounts);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const deleteAccount = (id) => {\n        const account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(() => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const toggleAccountReadonly = (id) => {\n        const account = accounts[id];\n        API.patch(\"/webdav/accounts\", {\n            id: account.ID,\n            readonly: !account.Readonly,\n        })\n            .then((response) => {\n                account.Readonly = response.data.readonly;\n                const accountCopy = [...accounts];\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = (account) => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name,\n        })\n            .then((response) => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path,\n                        Readonly: account.Readonly,\n                    },\n                    ...accounts,\n                ]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                {t(\"navbar.connect\")}\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label={t(\"setting.webdavAccounts\")} />\n                    {appPromotion && <Tab label={t(\"setting.iOSApp\")} />}\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                {t(\"setting.webdavHint\", {\n                                    url: window.location.origin + \"/dav\",\n                                    name: user.user_name,\n                                })}\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>\n                                                {t(\"setting.annotation\")}\n                                            </TableCell>\n                                            <TableCell>\n                                                {t(\"login.password\")}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {t(\"setting.rootFolder\")}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {t(\"setting.createdAt\")}\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                {t(\"setting.action\")}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Password}\n                                                    <Link\n                                                        className={classes.copy}\n                                                        onClick={() =>\n                                                            copyToClipboard(\n                                                                row.Password\n                                                            )\n                                                        }\n                                                        href={\"javascript:void\"}\n                                                    >\n                                                        {t(\"copyToClipboard\", {\n                                                            ns: \"common\",\n                                                        })}\n                                                    </Link>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale={t(\n                                                            \"timeAgoLocaleCode\",\n                                                            {\n                                                                ns: \"common\",\n                                                            }\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <Tooltip\n                                                        placement=\"top\"\n                                                        title={\n                                                            row.Readonly\n                                                                ? t(\n                                                                      \"setting.readonlyOff\"\n                                                                  )\n                                                                : t(\n                                                                      \"setting.readonlyOn\"\n                                                                  )\n                                                        }\n                                                        onClick={() =>\n                                                            toggleAccountReadonly(\n                                                                id\n                                                            )\n                                                        }\n                                                    >\n                                                        <IconButton>\n                                                            <ToggleIcon\n                                                                on={\n                                                                    row.Readonly\n                                                                }\n                                                                onIcon={\n                                                                    <PencilOff\n                                                                        fontSize={\n                                                                            \"small\"\n                                                                        }\n                                                                    />\n                                                                }\n                                                                offIcon={\n                                                                    <Pencil\n                                                                        fontSize={\n                                                                            \"small\"\n                                                                        }\n                                                                    />\n                                                                }\n                                                            />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                    <Tooltip\n                                                        placement=\"top\"\n                                                        title={t(\n                                                            \"setting.delete\"\n                                                        )}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <IconButton\n                                                            fontSize={\"small\"}\n                                                        >\n                                                            <Delete />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                {accounts.length === 0 && (\n                                    <Nothing primary={t(\"setting.listEmpty\")} />\n                                )}\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                {t(\"setting.createNewAccount\")}\n                            </Button>\n                        </div>\n                    )}\n                    {tab === 1 && <AppPromotion />}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX: \"auto\",\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    noWrap: {\n        wordBreak: \"keepAll\",\n    },\n    footer: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function Tasks() {\n    const { t } = useTranslation();\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = (page) => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then((response) => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return `${res.msg}: ${res.error}`;\n        } catch (e) {\n            return t(\"uploader.unknownStatus\");\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                {t(\"navbar.taskQueue\")}\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">\n                                {t(\"setting.createdAt\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.taskType\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.taskStatus\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                {t(\"setting.lastProgress\")}\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\">\n                                {t(\"setting.errorDetails\")}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell\n                                    nowrap=\"nowrap\"\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    {formatLocalTime(row.create_date)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskStatus(row.status)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type, row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {tasks.length === 0 && (\n                    <Nothing primary={t(\"setting.listEmpty\")} />\n                )}\n                <div className={classes.footer}>\n                    <Pagination\n                        count={Math.ceil(total / 10)}\n                        onChange={(e, v) => setPage(v)}\n                        color=\"secondary\"\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    Avatar,\n    Grid,\n    Paper,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tabs,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    userNav: {\n        borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\",\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\",\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\",\n    },\n    th: {\n        minWidth: \"106px\",\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\",\n        },\n    },\n    tableLink: {\n        cursor: \"pointer\",\n    },\n    navigator: {\n        padding: theme.spacing(2),\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\",\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\",\n    },\n    infoContainer: {\n        marginTop: \"30px\",\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user: null,\n        total: 0,\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page, order) => {\n        API.get(\n            \"/user/profile/\" +\n                this.props.match.params.id +\n                \"?page=\" +\n                page +\n                \"&type=\" +\n                order\n        )\n            .then((response) => {\n                this.setState({\n                    shareList: response.data.items,\n                    user: response.data.user,\n                    total: response.data.total,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null && <div></div>}\n                {this.state.user !== null && (\n                    <Paper>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.state.user.id +\n                                        \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label={t(\"setting.allShares\")} />\n                            <Tab label={t(\"setting.trendingShares\")} />\n                            <Tab label={t(\"setting.profile\")} />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.uid\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.nickname\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.group\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.totalShares\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            {t(\"setting.regTime\")}\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>\n                                                    {t(\"setting.fileName\")}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={\n                                                        classes.mobileHide\n                                                    }\n                                                >\n                                                    {t(\"setting.shareDate\")}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    {t(\n                                                        \"setting.downloadNumber\"\n                                                    )}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    {t(\"setting.viewNumber\")}\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.shareList.map(\n                                                (row, id) => (\n                                                    <TableRow\n                                                        key={id}\n                                                        className={\n                                                            classes.tableLink\n                                                        }\n                                                        onClick={() =>\n                                                            this.props.history.push(\n                                                                \"/s/\" + row.key\n                                                            )\n                                                        }\n                                                    >\n                                                        <TableCell>\n                                                            <Typography>\n                                                                {row.source\n                                                                    ? row.source\n                                                                          .name\n                                                                    : \"[\" +\n                                                                      t(\n                                                                          \"share.expired\"\n                                                                      ) +\n                                                                      \"]\"}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell\n                                                            nowrap={\"nowrap\"}\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {formatLocalTime(\n                                                                row.create_date\n                                                            )}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.downloads}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.views}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                    this.state.listType === 0 && (\n                                        <div className={classes.navigator}>\n                                            <Pagination\n                                                count={Math.ceil(\n                                                    this.state.total / 10\n                                                )}\n                                                onChange={(e, v) =>\n                                                    this.loadList(\n                                                        v,\n                                                        this.state.listType ===\n                                                            0\n                                                            ? \"default\"\n                                                            : \"hot\"\n                                                    )\n                                                }\n                                                color=\"secondary\"\n                                            />\n                                        </div>\n                                    )}\n                            </div>\n                        )}\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(ProfileCompoment))));\n\nexport default Profile;\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport { bufferDecode, bufferEncode } from \"../../utils\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n}));\n\nexport default function Authn(props) {\n    const { t } = useTranslation();\n    const [selected, setSelected] = useState(\"\");\n    const [confirm, setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteCredential = (id) => {\n        API.patch(\"/user/setting/authn\", {\n            id: id,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"setting.authenticatorRemoved\"),\n                    \"success\"\n                );\n                props.remove(id);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setConfirm(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    const addCredential = () => {\n        if (!navigator.credentials) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"setting.browserNotSupported\"),\n                \"warning\"\n            );\n\n            return;\n        }\n        API.put(\"/user/authn\", {})\n            .then((response) => {\n                const credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        let i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                        ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey,\n                });\n            })\n            .then((credential) => {\n                const attestationObject = credential.response.attestationObject;\n                const clientDataJSON = credential.response.clientDataJSON;\n                const rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                props.add(response.data);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"setting.authenticatorAdded\"),\n                    \"success\"\n                );\n                return;\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\n                <DialogTitle>{t(\"setting.removedAuthenticator\")}</DialogTitle>\n                <DialogContent>\n                    {t(\"setting.removedAuthenticatorConfirm\")}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\n                        {t(\"cancel\", { ns: \"common\" })}\n                    </Button>\n                    <Button\n                        onClick={() => deleteCredential(selected)}\n                        color=\"primary\"\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                {t(\"setting.hardwareAuthenticator\")}\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map((v) => (\n                        <>\n                            <ListItem\n                                button\n                                style={{\n                                    paddingRight: 60,\n                                }}\n                                onClick={() => {\n                                    setConfirm(true);\n                                    setSelected(v.id);\n                                }}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() => deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff\n                                        className={classes.rightIcon}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={() => addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={t(\"setting.addNewAuthenticator\")}\n                        />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexContainer}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n    refreshTimeZone,\n    timeZone,\n    validateTimeZone,\n} from \"../../utils/datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function TimeZoneDialog(props) {\n    const { t } = useTranslation();\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const saveZoneInfo = () => {\n        if (!validateTimeZone(timeZoneValue)) {\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\n            return;\n        }\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\n        refreshTimeZone();\n        props.onClose();\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {t(\"setting.timeZone\")}\n            </DialogTitle>\n\n            <DialogContent>\n                <FormControl>\n                    <TextField\n                        label={t(\"setting.timeZoneCode\")}\n                        value={timeZoneValue}\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    {t(\"cancel\", { ns: \"common\" })}\n                </Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={timeZoneValue === \"\"}\n                        onClick={() => saveZoneInfo()}\n                    >\n                        {t(\"ok\", { ns: \"common\" })}\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch,\n} from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport {\n    Brightness3,\n    GitHub,\n    Home,\n    ListAlt,\n    PermContactCalendar,\n    Schedule,\n    Translate,\n} from \"@material-ui/icons\";\nimport Authn from \"./Authn\";\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\nimport TimeZoneDialog from \"../Modals/TimeZone\";\nimport {\n    applyThemes,\n    changeViewMethod,\n    toggleDaylightMode,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { Trans, withTranslation } from \"react-i18next\";\nimport { selectLanguage } from \"../../redux/viewUpdate/action\";\nimport OptionSelector from \"../Modals/OptionSelector\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    infoText: {\n        marginRight: \"17px\",\n        [theme.breakpoints.down(\"xs\")]: {\n            maxWidth: 100,\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n        },\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\",\n        [theme.breakpoints.down(\"xs\")]: {\n            maxWidth: 100,\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n        },\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\",\n        },\n    },\n    desText: {\n        marginTop: \"10px\",\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\",\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\",\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\",\n    },\n    paddingBottom: {\n        marginBottom: \"30px\",\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2),\n    },\n    qrcode: {\n        width: 128,\n        marginTop: 16,\n        marginRight: 16,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.siteConfig.title,\n        authn: state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: (color) => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode: () => {\n            dispatch(toggleDaylightMode());\n        },\n        changeView: (method) => {\n            dispatch(changeViewMethod(method));\n        },\n        selectLanguage: () => {\n            dispatch(selectLanguage());\n        },\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        changeTimeZone: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\",\n                },\n                options: [],\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn: [],\n        },\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false,\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then((response) => {\n                const theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\",\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.avatarUpdated\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\",\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.nickChanged\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\",\n        });\n        const formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.avatarUpdated\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.settingSaved\"),\n                    \"success\"\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage,\n                    },\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                this.props.t(\"login.passwordNotMatch\"),\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\",\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"login.passwordReset\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\",\n        });\n        API.patch(\"/user/setting/theme\", {\n            theme: this.state.chosenTheme,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.themeColorChanged\"),\n                    \"success\"\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\",\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd,\n            })\n            .then((response) => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor) {\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then((response) => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\",\n        });\n        API.patch(\"/user/setting/2fa\", {\n            code: this.state.authCode,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    this.props.t(\"setting.settingSaved\"),\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                    settings: {\n                        ...this.state.settings,\n                        two_factor: !this.state.settings.two_factor,\n                    },\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = (current) => {\n        const newMode =\n            current === null ? \"light\" : current === \"light\" ? \"dark\" : null;\n        this.props.toggleDaylightMode();\n        Auth.SetPreference(\"theme_mode\", newMode);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\");\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.profile\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary={t(\"setting.avatar\")} />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.uid\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.nickname\")} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"login.email\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.group\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.regTime\")} />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {formatLocalTime(user.created_at)}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.privacyAndSecurity\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.profilePage\")}\n                                />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.accountPassword\")}\n                                />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.2fa\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? t(\"setting.disabled\")\n                                            : t(\"setting.enabled\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add={(credential) => {\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: [\n                                        ...this.state.settings.authn,\n                                        credential,\n                                    ],\n                                },\n                            });\n                        }}\n                        remove={(id) => {\n                            let credentials = [...this.state.settings.authn];\n                            credentials = credentials.filter((v) => {\n                                return v.id !== id;\n                            });\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: credentials,\n                                },\n                            });\n                        }}\n                    />\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        {t(\"setting.appearance\")}\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={t(\"setting.themeColor\")}\n                                />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor} />\n                                    <div className={classes.secondColor} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleThemeMode(dark)}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.darkMode\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark &&\n                                            (dark === \"dark\"\n                                                ? t(\"setting.enabled\")\n                                                : t(\"setting.disabled\"))}\n                                        {dark === null &&\n                                            t(\"setting.syncWithSystem\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleViewMethod()}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.fileList\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" &&\n                                            t(\"fileManager.gridViewLarge\")}\n                                        {this.props.viewMethod === \"list\" &&\n                                            t(\"fileManager.listView\")}\n                                        {this.props.viewMethod ===\n                                            \"smallIcon\" &&\n                                            t(\"fileManager.gridViewSmall\")}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() =>\n                                    this.setState({ changeTimeZone: true })\n                                }\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Schedule />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.timeZone\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {timeZone}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() => this.props.selectLanguage()}\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Translate />\n                                </ListItemIcon>\n                                <ListItemText primary={t(\"setting.language\")} />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.webdavServer\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.userName\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={t(\"setting.manageAccount\")}\n                                        />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )}\n\n                    {/*<Typography*/}\n                    {/*    className={classes.sectionTitle}*/}\n                    {/*    variant=\"subtitle2\"*/}\n                    {/*>*/}\n                    {/*    {t(\"setting.aboutCloudreve\")}*/}\n                    {/*</Typography>*/}\n                    {/*<Paper>*/}\n                    {/*    <List className={classes.desenList}>*/}\n                    {/*        <ListItem*/}\n                    {/*            button*/}\n                    {/*            onClick={() =>*/}\n                    {/*                window.open(*/}\n                    {/*                    \"https://github.com/cloudreve/cloudreve\"*/}\n                    {/*                )*/}\n                    {/*            }*/}\n                    {/*        >*/}\n                    {/*            <ListItemIcon className={classes.iconFix}>*/}\n                    {/*                <GitHub />*/}\n                    {/*            </ListItemIcon>*/}\n                    {/*            <ListItemText primary={t(\"setting.githubRepo\")} />*/}\n\n                    {/*            <ListItemSecondaryAction*/}\n                    {/*                className={classes.flexContainer}*/}\n                    {/*            >*/}\n                    {/*                <RightIcon*/}\n                    {/*                    className={classes.rightIconWithText}*/}\n                    {/*                />*/}\n                    {/*            </ListItemSecondaryAction>*/}\n                    {/*        </ListItem>*/}\n                    {/*        <Divider />*/}\n                    {/*        <ListItem*/}\n                    {/*            button*/}\n                    {/*            onClick={() =>*/}\n                    {/*                window.open(\"https://cloudreve.org\")*/}\n                    {/*            }*/}\n                    {/*        >*/}\n                    {/*            <ListItemIcon className={classes.iconFix}>*/}\n                    {/*                <Home />*/}\n                    {/*            </ListItemIcon>*/}\n                    {/*            <ListItemText primary={t(\"setting.homepage\")} />*/}\n\n                    {/*            <ListItemSecondaryAction*/}\n                    {/*                className={classes.flexContainer}*/}\n                    {/*            >*/}\n                    {/*                <RightIcon*/}\n                    {/*                    className={classes.rightIconWithText}*/}\n                    {/*                />*/}\n                    {/*            </ListItemSecondaryAction>*/}\n                    {/*        </ListItem>*/}\n                    {/*    </List>*/}\n                    {/*</Paper>*/}\n\n                    <div className={classes.paddingBottom} />\n                </div>\n                <TimeZoneDialog\n                    onClose={() => this.setState({ changeTimeZone: false })}\n                    open={this.state.changeTimeZone}\n                />\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.avatar\")}</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={t(\"setting.uploadImage\")} />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary={t(\"setting.useGravatar\")}\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>{t(\"setting.changeNick\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label={t(\"setting.nickname\")}\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"login.resetPassword\")}</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"setting.originalPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"login.newPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label={t(\"login.repeatNewPassword\")}\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>\n                        {this.state.settings.two_factor\n                            ? t(\"setting.disable2FA\")\n                            : t(\"setting.enable2FA\")}\n                    </DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n                            {!this.state.settings.two_factor && (\n                                <div className={classes.qrcode}>\n                                    <QRCodeSVG\n                                        value={\n                                            \"otpauth://totp/\" +\n                                            this.props.title +\n                                            \"?secret=\" +\n                                            this.state.two_fa_secret\n                                        }\n                                    />\n                                </div>\n                            )}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && (\n                                    <Typography>\n                                        {t(\"setting.2faDescription\")}\n                                    </Typography>\n                                )}\n                                {this.state.settings.two_factor && (\n                                    <Typography>\n                                        {t(\"setting.inputCurrent2FACode\")}\n                                    </Typography>\n                                )}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label={t(\"login.input2FACode\")}\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor\n                                ? t(\"setting.disable2FA\")\n                                : t(\"setting.enable2FA\")}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.themeColor\")}</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                )\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"cancel\", { ns: \"common\" })}\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            {t(\"ok\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.webdavServer\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={window.location.origin + \"/dav\"}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>{t(\"setting.userName\")}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            {t(\"close\", { ns: \"common\" })}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <OptionSelector />\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(UserSettingCompoment))));\n\nexport default UserSetting;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { EmailOutlined, VpnKeyOutlined } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n    avatarSuccess: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nfunction Register() {\n    const { t } = useTranslation();\n\n    const [input, setInput] = useState({\n        email: \"\",\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n\n    const title = useSelector((state) => state.siteConfig.title);\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const classes = useStyles();\n\n    const register = (e) => {\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.passwordNotMatch\"),\n                \"warning\"\n            );\n            return;\n        }\n\n        setLoading(true);\n        if (!isValidate.current.isValidate && regCaptcha) {\n            validate(() => register(e), setLoading);\n            return;\n        }\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setEmailActive(true);\n                } else {\n                    history.push(\"/login?username=\" + input.email);\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        t(\"login.signUpSuccess\"),\n                        \"success\"\n                    );\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <RegIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.sinUpTitle\", { title })}\n                        </Typography>\n\n                        <form className={classes.form} onSubmit={register}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <TextField\n                                    variant={\"outlined\"}\n                                    label={t(\"login.email\")}\n                                    inputProps={{\n                                        name: \"email\",\n                                        type: \"email\",\n                                        id: \"email\",\n                                    }}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <EmailOutlined />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    onChange={handleInputChange(\"email\")}\n                                    autoComplete\n                                    value={input.email}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <TextField\n                                    variant={\"outlined\"}\n                                    label={t(\"login.password\")}\n                                    inputProps={{\n                                        name: \"password\",\n                                        type: \"password\",\n                                        id: \"password\",\n                                    }}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <VpnKeyOutlined />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    onChange={handleInputChange(\"password\")}\n                                    value={input.password}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <TextField\n                                    label={t(\"login.repeatPassword\")}\n                                    variant={\"outlined\"}\n                                    inputProps={{\n                                        name: \"pwdRepeat\",\n                                        type: \"password\",\n                                        id: \"pwdRepeat\",\n                                    }}\n                                    onChange={handleInputChange(\n                                        \"password_repeat\"\n                                    )}\n                                    InputProps={{\n                                        startAdornment: !isMobile && (\n                                            <InputAdornment position=\"start\">\n                                                <VpnKeyOutlined />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    value={input.password_repeat}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            {regCaptcha && <CaptchaRender />}\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={\n                                    loading ||\n                                    (regCaptcha ? captchaLoading : false)\n                                }\n                                className={classes.submit}\n                            >\n                                {t(\"login.signUp\")}\n                            </Button>\n                        </form>\n\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link component={RouterLink} to={\"/login\"}>\n                                    {t(\"login.backToSingIn\")}\n                                </Link>\n                            </div>\n                            <div>\n                                <Link component={RouterLink} to={\"/forget\"}>\n                                    {t(\"login.forgetPassword\")}\n                                </Link>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                {emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatarSuccess}>\n                            <EmailIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t(\"login.activateTitle\")}\n                        </Typography>\n                        <Typography style={{ marginTop: \"10px\" }}>\n                            {t(\"login.activateDescription\")}\n                        </Typography>\n                    </Paper>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    const { t } = useTranslation();\n    const query = useQuery();\n    const location = useLocation();\n\n    const [success, setSuccess] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        API.get(\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\n        )\n            .then((response) => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {t(\"login.activateSuccess\")}\n                    </Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>\n                        {t(\"login.accountActivated\")}\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push(\"/login?username=\" + email)}\n                    >\n                        {t(\"login.backToSingIn\")}\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { VpnKeyOutlined } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    const { t } = useTranslation();\n    const query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                t(\"login.passwordNotMatch\"),\n                \"warning\"\n            );\n            return;\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.passwordReset\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {t(\"login.findMyPassword\")}\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <TextField\n                            variant={\"outlined\"}\n                            label={t(\"login.newPassword\")}\n                            inputProps={{\n                                type: \"password\",\n                                id: \"pwd\",\n                                name: \"pwd\",\n                            }}\n                            InputProps={{\n                                startAdornment: !isMobile && (\n                                    <InputAdornment position=\"start\">\n                                        <VpnKeyOutlined />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <TextField\n                            variant={\"outlined\"}\n                            label={t(\"login.repeatNewPassword\")}\n                            inputProps={{\n                                type: \"password\",\n                                id: \"pwdRepeat\",\n                                name: \"pwdRepeat\",\n                            }}\n                            InputProps={{\n                                startAdornment: !isMobile && (\n                                    <InputAdornment position=\"start\">\n                                        <VpnKeyOutlined />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        {t(\"login.resetPassword\")}\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link component={RouterLink} to={\"/login\"}>\n                            {t(\"login.backToSingIn\")}\n                        </Link>\n                    </div>\n                    <div>\n                        {registerEnabled && (\n                            <Link component={RouterLink} to={\"/signup\"}>\n                                {t(\"login.signUpAccount\")}\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { EmailOutlined } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction Reset() {\n    const { t } = useTranslation();\n\n    const [input, setInput] = useState({\n        email: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(\n        (state) => state.siteConfig.forgetCaptcha\n    );\n    const registerEnabled = useSelector(\n        (state) => state.siteConfig.registerEnabled\n    );\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && forgetCaptcha) {\n            validate(() => submit(e), setLoading);\n            return;\n        }\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            ...captchaParamsRef.current,\n        })\n            .then(() => {\n                setLoading(false);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    t(\"login.resetEmailSent\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {t(\"login.findMyPassword\")}\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <TextField\n                            variant={\"outlined\"}\n                            label={t(\"login.email\")}\n                            inputProps={{\n                                name: \"email\",\n                                id: \"email\",\n                                type: \"email\",\n                            }}\n                            InputProps={{\n                                startAdornment: !isMobile && (\n                                    <InputAdornment position=\"start\">\n                                        <EmailOutlined />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && <CaptchaRender />}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={\n                            loading || (forgetCaptcha ? captchaLoading : false)\n                        }\n                        className={classes.submit}\n                    >\n                        {t(\"login.sendMeAnEmail\")}\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link component={RouterLink} to={\"/login\"}>\n                            {t(\"login.backToSingIn\")}\n                        </Link>\n                    </div>\n                    <div>\n                        {registerEnabled && (\n                            <Link component={RouterLink} to={\"/signup\"}>\n                                {t(\"login.signUpAccount\")}\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    List,\n    Slider,\n    withStyles,\n} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MusicNote from \"@material-ui/icons/MusicNote\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport PlayNext from \"@material-ui/icons/SkipNext\";\nimport PlayPrev from \"@material-ui/icons/SkipPrevious\";\nimport Pause from \"@material-ui/icons/Pause\";\nimport { Repeat, RepeatOne, Shuffle } from \"@material-ui/icons\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { audioPreviewSuffix } from \"../../config\";\nimport { baseURL } from \"../../middleware/Api\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport pathHelper from \"../../utils/page\";\nimport {\n    audioPreviewSetIsOpen,\n    audioPreviewSetPlaying,\n    showAudioPreview,\n} from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = (theme) => ({\n    list: {\n        //maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: \"relative\",\n        overflow: \"auto\",\n        maxHeight: 300,\n    },\n    slider_root: {\n        \"vertical-align\": \"middle\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.audioPreview.first,\n        other: state.explorer.audioPreview.other,\n        isOpen: state.explorer.audioPreview.isOpen,\n        playingName: state.explorer.audioPreview.playingName,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showAudioPreview: (first) => {\n            dispatch(showAudioPreview(first));\n        },\n        audioPreviewSetIsOpen: (first) => {\n            dispatch(audioPreviewSetIsOpen(first));\n        },\n        audioPreviewSetPlaying: (playingName, paused) => {\n            dispatch(audioPreviewSetPlaying(playingName, paused));\n        },\n    };\n};\n\nclass MusicPlayerComponent extends Component {\n    state = {\n        items: [],\n        currentIndex: 0,\n        //isOpen: false,\n        //isPlay:false,\n        currentTime: 0,\n        duration: 0,\n        progressText: \"00:00/00:00\",\n        looptype: 0,\n    };\n    myAudioRef = React.createRef();\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newItem = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newItem);\n                this.setState({\n                    currentIndex: firstOne,\n                    items: items,\n                    //isOpen: true,\n                });\n                this.props.audioPreviewSetIsOpen(true);\n                this.props.showAudioPreview(\n                    explorer.initState.audioPreview.first\n                );\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (audioPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newItem = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newItem);\n                }\n            });\n            this.setState({\n                currentIndex: firstOne,\n                items: items,\n                //isOpen: true,\n            });\n            this.props.audioPreviewSetIsOpen(true);\n            this.props.showAudioPreview(explorer.initState.audioPreview.first);\n        }\n    };\n\n    handleItemClick = (currentIndex) => () => {\n        this.setState({\n            currentIndex: currentIndex,\n        });\n    };\n\n    handleClose = () => {\n        /*this.setState({\n            isOpen: false,\n        });*/\n        this.setState({\n            currentIndex: -1,\n        });\n        this.pause();\n        this.props.audioPreviewSetPlaying(null, false);\n        this.props.audioPreviewSetIsOpen(false);\n    };\n    backgroundPlay = () => {\n        this.props.audioPreviewSetIsOpen(false);\n    };\n\n    componentDidMount() {\n        if (this.myAudioRef.current) {\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }\n    componentDidUpdate() {\n        if (this.myAudioRef.current) {\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }\n    componentWillUnmount() {\n        this.unbindEvents(this.myAudioRef.current);\n    }\n\n    bindEvents = (ele) => {\n        if (ele) {\n            ele.addEventListener(\"canplay\", this.readyPlay);\n            ele.addEventListener(\"ended\", this.loopnext);\n            ele.addEventListener(\"timeupdate\", this.timeUpdate);\n        }\n    };\n\n    unbindEvents = (ele) => {\n        if (ele) {\n            ele.removeEventListener(\"canplay\", this.readyPlay);\n            ele.removeEventListener(\"ended\", this.loopnext);\n            ele.removeEventListener(\"timeupdate\", this.timeUpdate);\n        }\n    };\n\n    readyPlay = () => {\n        this.play();\n    };\n\n    formatTime = (s) => {\n        if (isNaN(s)) return \"00:00\";\n        const minute = Math.floor(s / 60);\n        const second = Math.floor(s % 60);\n        return (\n            `${minute}`.padStart(2, \"0\") + \":\" + `${second}`.padStart(2, \"0\")\n        );\n    };\n\n    timeUpdate = () => {\n        const currentTime = Math.floor(this.myAudioRef.current.currentTime); //this.myAudioRef.current.currentTime;//\n        this.setState({\n            currentTime: currentTime,\n            duration: this.myAudioRef.current.duration,\n            progressText:\n                this.formatTime(currentTime) +\n                \"/\" +\n                this.formatTime(this.myAudioRef.current.duration),\n        });\n    };\n\n    play = () => {\n        this.myAudioRef.current.play();\n        /*this.setState({\n            isPlay: true\n        });*/\n        this.props.audioPreviewSetPlaying(\n            this.state.items[this.state.currentIndex].intro,\n            false\n        );\n    };\n\n    pause = () => {\n        if (this.myAudioRef.current) {\n            this.myAudioRef.current.pause();\n        }\n        /*this.setState({\n            isPlay: false\n        })*/\n        this.props.audioPreviewSetPlaying(\n            this.state.items[this.state.currentIndex]?.intro,\n            true\n        );\n    };\n\n    playOrPaues = () => {\n        if (this.state.isPlay) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    };\n    changeLoopType = () => {\n        let lt = this.state.looptype + 1;\n        if (lt >= 3) {\n            lt = 0;\n        }\n        this.setState({\n            looptype: lt,\n        });\n    };\n    loopnext = () => {\n        let index = this.state.currentIndex;\n        if (this.state.looptype == 0) {\n            //all\n            index = index + 1;\n            if (index >= this.state.items.length) {\n                index = 0;\n            }\n        } else if (this.state.looptype == 1) {\n            //single\n            //index=index;\n        } else if (this.state.looptype == 2) {\n            //random\n            if (this.state.items.length <= 2) {\n                index = index + 1;\n                if (index >= this.state.items.length) {\n                    index = 0;\n                }\n            } else {\n                while (index == this.state.currentIndex) {\n                    index = Math.floor(Math.random() * this.state.items.length);\n                }\n            }\n        }\n        if (this.state.currentIndex == index) {\n            this.myAudioRef.current.currentTime = 0;\n            this.play();\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    prev = () => {\n        let index = this.state.currentIndex - 1;\n        if (index < 0) {\n            index = this.state.items.length - 1;\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    next = () => {\n        let index = this.state.currentIndex + 1;\n        if (index >= this.state.items.length) {\n            index = 0;\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    handleProgress = (e, newValue) => {\n        this.myAudioRef.current.currentTime = newValue;\n    };\n\n    render() {\n        const { currentIndex, items } = this.state;\n        const { isOpen, classes, t } = this.props;\n        return (\n            <Dialog\n                open={isOpen}\n                onClose={this.backgroundPlay}\n                aria-labelledby=\"form-dialog-title\"\n                maxWidth=\"xs\"\n                fullWidth\n                keepMounted\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    {t(\"fileManager.musicPlayer\")}\n                </DialogTitle>\n                <DialogContent>\n                    <List className={classes.list} dense>\n                        {items.map((value, idx) => {\n                            const labelId = `label-${value.intro}`;\n                            return (\n                                <ListItem\n                                    key={value.src}\n                                    dense\n                                    button\n                                    onClick={this.handleItemClick(idx)}\n                                    selected={idx === currentIndex}\n                                >\n                                    <ListItemIcon>\n                                        {idx === currentIndex ? (\n                                            <PlayArrow />\n                                        ) : (\n                                            <MusicNote />\n                                        )}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        id={labelId}\n                                        primary={`${value.intro}`}\n                                    />\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                    <audio\n                        ref={this.myAudioRef}\n                        src={items[currentIndex]?.src}\n                    />\n                    <div style={{ \"padding-top\": 8 }} />\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs>\n                            <Slider\n                                classes={{ root: classes.slider_root }}\n                                value={this.state.currentTime}\n                                onChange={this.handleProgress}\n                                step={1}\n                                min={0}\n                                max={this.state.duration}\n                                aria-labelledby=\"continuous-slider\"\n                            />\n                        </Grid>\n                        <Grid item>{this.state.progressText}</Grid>\n                    </Grid>\n                    <Grid\n                        container\n                        spacing={2}\n                        justifyContent=\"center\"\n                        justify=\"center\"\n                    >\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.changeLoopType}\n                            >\n                                {this.state.looptype === 0 ? (\n                                    <Repeat />\n                                ) : this.state.looptype === 1 ? (\n                                    <RepeatOne />\n                                ) : (\n                                    <Shuffle />\n                                )}\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.prev}\n                            >\n                                <PlayPrev />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.pause}\n                            >\n                                <Pause />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.play}\n                            >\n                                <PlayArrow />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"\"\n                                onClick={this.next}\n                            >\n                                <PlayNext />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose}>\n                        {t(\"fileManager.closeAndStop\")}\n                    </Button>\n                    <Button onClick={this.backgroundPlay}>\n                        {t(\"fileManager.playInBackground\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nMusicPlayerComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst MusicPlayer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(withTranslation()(MusicPlayerComponent))));\n\nexport default MusicPlayer;\n","import React, { Suspense, useCallback, useMemo, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { getPreviewURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\n\nconst ReactReader = React.lazy(() =>\n    import(/* webpackChunkName: \"ReactReader\" */ \"react-reader\").then((m) => ({\n        default: m.ReactReader,\n    }))\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        height: \"calc(100vh - 64px)\",\n    },\n    paper: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function EpubViewer() {\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const { path } = UseFileSubTitle(query, math, location);\n    const isShare = pathHelper.isSharePage(location.pathname);\n\n    const [currentLocation, setLocation] = useState(null);\n    const locationChanged = (epubcifi) => {\n        setLocation(epubcifi);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const fileUrl = useMemo(\n        () =>\n            getPreviewURL(\n                isShare,\n                id,\n                query.get(\"id\"),\n                query.get(\"share_path\")\n            ),\n        [id, location, path]\n    );\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Suspense fallback={<TextLoading />}>\n                <ReactReader\n                    location={currentLocation}\n                    locationChanged={locationChanged}\n                    epubInitOptions={{\n                        openAs: \"epub\",\n                    }}\n                    showToc={false}\n                    className={classes.container}\n                    url={fileUrl}\n                />\n            </Suspense>\n        </div>\n    );\n}\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport NoAuthRoute from \"./middleware/NoAuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { changeThemeColor } from \"./utils\";\nimport NotFound from \"./component/Share/NotFound\";\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\";\nimport FileManager from \"./component/FileManager/FileManager.js\";\nimport VideoPreview from \"./component/Viewer/Video.js\";\nimport SearchResult from \"./component/Share/SearchResult\";\nimport MyShare from \"./component/Share/MyShare\";\nimport Download from \"./component/Download/Download\";\nimport SharePreload from \"./component/Share/SharePreload\";\nimport DocViewer from \"./component/Viewer/Doc\";\nimport TextViewer from \"./component/Viewer/Text\";\nimport WebDAV from \"./component/Setting/WebDAV\";\nimport Tasks from \"./component/Setting/Tasks\";\nimport Profile from \"./component/Setting/Profile\";\nimport UserSetting from \"./component/Setting/UserSetting\";\nimport Register from \"./component/Login/Register\";\nimport Activation from \"./component/Login/Activication\";\nimport ResetForm from \"./component/Login/ResetForm\";\nimport Reset from \"./component/Login/Reset\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport CodeViewer from \"./component/Viewer/Code\";\nimport MusicPlayer from \"./component/FileManager/MusicPlayer\";\nimport EpubViewer from \"./component/Viewer/Epub\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PDFViewer = React.lazy(() =>\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\n);\n\nexport default function App() {\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n    const { t } = useTranslation();\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        const prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        const theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main,\n                },\n            },\n            shape: {\n                ...themeConfig.shape,\n                borderRadius: 12,\n            },\n            overrides: {\n                MuiButton: {\n                    root: {\n                        textTransform: \"none\",\n                    },\n                },\n                MuiTab: {\n                    root: {\n                        textTransform: \"none\",\n                    },\n                },\n            },\n        });\n        changeThemeColor(\n            themeConfig.palette.type === \"dark\"\n                ? theme.palette.background.default\n                : theme.palette.primary.main\n        );\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(0),\n            minWidth: 0,\n        },\n        toolbar: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n    const { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\",\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\n                                <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\n                                <CodeViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}epub`} isLogin={isLogin}>\n                                <EpubViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                <MyShare />\n                            </AuthRoute>\n\n                            <Route path={`${path}search`} isLogin={isLogin}>\n                                <SearchResult />\n                            </Route>\n\n                            <Route path={`${path}setting`} isLogin={isLogin}>\n                                <UserSetting />\n                            </Route>\n\n                            <AuthRoute\n                                path={`${path}profile/:id`}\n                                isLogin={isLogin}\n                            >\n                                <Profile />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                <Tasks />\n                            </AuthRoute>\n\n                            <NoAuthRoute\n                                exact\n                                path={`${path}login`}\n                                isLogin={isLogin}\n                            >\n                                <LoginForm />\n                            </NoAuthRoute>\n\n                            <NoAuthRoute\n                                exact\n                                path={`${path}signup`}\n                                isLogin={isLogin}\n                            >\n                                <Register />\n                            </NoAuthRoute>\n\n                            <Route path={`${path}activate`} exact>\n                                <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                <Reset />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                <TextViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/pdf(/)*`}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </Route>\n\n                            <Route path={`${path}s/:id/code(/)*`}>\n                                <CodeViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/epub(/)*`}>\n                                <EpubViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound\n                                    msg={t(\"pageNotFound\", { ns: \"common\" })}\n                                />\n                            </Route>\n                        </Switch>\n                    </main>\n                    <MusicPlayer />\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import API from \"./Api\";\nimport Auth from \"./Auth\";\nimport pathHelper from \"../utils/page\";\nimport {\n    changeViewMethod,\n    setSiteConfig,\n    toggleSnackbar,\n} from \"../redux/explorer\";\nimport i18next from \"../i18n\";\nimport { msDocPreviewSuffix, setWopiExts } from \"../config\";\n\nconst initUserConfig = (siteConfig) => {\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\n        const themes = JSON.parse(siteConfig.themes);\n        const user = siteConfig.user;\n        delete siteConfig.user;\n\n        //更换用户自定配色\n        if (\n            user[\"preferred_theme\"] !== \"\" &&\n            themes[user[\"preferred_theme\"]] !== undefined\n        ) {\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig;\n};\n\nexport const InitSiteConfig = (rawStore) => {\n    // 从缓存获取默认配置\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache;\n    }\n    // 检查是否有path参数\n    const url = new URL(window.location.href);\n    const c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c === null ? \"/\" : c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n\n    return rawStore;\n};\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\")\n        .then(function (response) {\n            const themes = JSON.parse(response.data.themes);\n            response.data.theme = themes[response.data.defaultTheme];\n            response.data = initUserConfig(response.data);\n            store.dispatch(setSiteConfig(response.data));\n            localStorage.setItem(\n                \"siteConfigCache\",\n                JSON.stringify(response.data)\n            );\n\n            // 更新 office WOPI 预览后缀\n            if (response.data.wopi_exts) {\n                setWopiExts(response.data.wopi_exts);\n            }\n\n            // 偏爱的列表样式\n            const preferListMethod = Auth.GetPreference(\"view_method\");\n            if (preferListMethod) {\n                store.dispatch(changeViewMethod(preferListMethod));\n            } else {\n                if (pathHelper.isSharePage(window.location.pathname)) {\n                    store.dispatch(\n                        changeViewMethod(response.data.share_view_method)\n                    );\n                } else {\n                    store.dispatch(\n                        changeViewMethod(response.data.home_view_method)\n                    );\n                }\n            }\n        })\n        .catch(function (error) {\n            store.dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    i18next.t(\"errLoadingSiteConfig\", { ns: \"common\" }) +\n                        error.message,\n                    \"error\"\n                )\n            );\n        });\n}\n","import { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\nimport { CloudreveFile, SortMethod } from \"../../types\";\n\nexport interface ViewUpdateState {\n    isLogin: boolean;\n    open: boolean;\n    explorerViewMethod: string;\n    sortMethod: SortMethod;\n    subTitle: string | null;\n    contextType: string;\n    contextOpen: boolean;\n    menuOpen: boolean;\n    navigatorLoading: boolean;\n    navigatorError: boolean;\n    navigatorErrorMsg: string | null;\n    modalsLoading: boolean;\n    storageRefresh: boolean;\n    userPopoverAnchorEl: any;\n    shareUserPopoverAnchorEl: any;\n    modals: {\n        createNewFolder: boolean;\n        createNewFile: boolean;\n        rename: boolean;\n        move: boolean;\n        remove: boolean;\n        share: boolean;\n        music: boolean;\n        remoteDownload: boolean;\n        remoteDownloadTorrent: CloudreveFile | null;\n        getSource: string;\n        copy: boolean;\n        resave: boolean;\n        compress: boolean;\n        decompress: boolean;\n        loading: boolean;\n        loadingText: string;\n        directoryDownloading: boolean;\n        directoryDownloadLog: string;\n        directoryDownloadDone: boolean;\n        option?: {\n            options: {\n                open: boolean;\n                key: string;\n                name: string;\n                description?: string;\n            }[];\n            title: string;\n            callback: any;\n            onClose: any;\n        };\n    };\n    snackbar: {\n        toggle: boolean;\n        vertical: string;\n        horizontal: string;\n        msg: string;\n        color: string;\n    };\n    pagination: {\n        page: number;\n        size: number;\n    };\n    openFileSelector: number;\n    openFolderSelector: number;\n    shareInfo: any;\n}\nexport const initState: ViewUpdateState = {\n    // 是否登录\n    isLogin: Auth.Check(),\n    open: false,\n    explorerViewMethod: \"icon\",\n    sortMethod: Auth.GetPreferenceWithDefault(\"sort\", \"timePos\"),\n    subTitle: null,\n    contextType: \"none\",\n    contextOpen: false,\n    menuOpen: false,\n    navigatorLoading: true,\n    navigatorError: false,\n    navigatorErrorMsg: null,\n    modalsLoading: false,\n    storageRefresh: false,\n    userPopoverAnchorEl: null,\n    shareUserPopoverAnchorEl: null,\n    modals: {\n        createNewFolder: false,\n        createNewFile: false,\n        rename: false,\n        move: false,\n        remove: false,\n        share: false,\n        music: false,\n        remoteDownload: false,\n        remoteDownloadTorrent: null,\n        getSource: \"\",\n        copy: false,\n        resave: false,\n        compress: false,\n        decompress: false,\n        loading: false,\n        loadingText: \"\",\n        directoryDownloading: false,\n        directoryDownloadLog: \"\",\n        directoryDownloadDone: false,\n    },\n    snackbar: {\n        toggle: false,\n        vertical: \"top\",\n        horizontal: \"center\",\n        msg: \"\",\n        color: \"\",\n    },\n    pagination: {\n        page: 1,\n        size: Auth.GetPreferenceWithDefault(\"pagination\", 100),\n    },\n    openFileSelector: 0,\n    openFolderSelector: 0,\n    shareInfo: null,\n};\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\n    switch (action.type) {\n        case \"DRAWER_TOGGLE\":\n            return Object.assign({}, state, {\n                open: action.open,\n            });\n        case \"CHANGE_VIEW_METHOD\":\n            return Object.assign({}, state, {\n                explorerViewMethod: action.method,\n            });\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\n            return Object.assign({}, state, {\n                navigatorLoading: action.status,\n            });\n        case \"SET_NAVIGATOR_ERROR\":\n            return Object.assign({}, state, {\n                navigatorError: action.status,\n                navigatorErrorMsg: action.msg,\n            });\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_CREATE_FILE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFile: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RENAME_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    rename: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remove: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    move: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RESAVE_DIALOG\":\n            // window.shareKey = action.key;\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    resave: true,\n                }),\n                contextOpen: false,\n            });\n        case \"SET_USER_POPOVER\":\n            return Object.assign({}, state, {\n                userPopoverAnchorEl: action.anchor,\n            });\n        case \"SET_SHARE_USER_POPOVER\":\n            return Object.assign({}, state, {\n                shareUserPopoverAnchorEl: action.anchor,\n            });\n        case \"OPEN_SHARE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    share: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MUSIC_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    music: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true,\n                    remoteDownloadTorrent: action.selected,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_DECOMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    decompress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    compress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_GET_SOURCE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getSource: action.source,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COPY_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    copy: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_LOADING_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    loading: true,\n                    loadingText: action.text,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_DIRECTORY_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    directoryDownloading: action.downloading,\n                    directoryDownloadLog: action.log,\n                    directoryDownloadDone: action.done,\n                }),\n                contextOpen: false,\n            });\n        case \"CLOSE_CONTEXT_MENU\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n            });\n        case \"CLOSE_ALL_MODALS\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: false,\n                    createNewFile: false,\n                    rename: false,\n                    move: false,\n                    remove: false,\n                    share: false,\n                    music: false,\n                    remoteDownload: false,\n                    remoteDownloadTorrent: null,\n                    getSource: \"\",\n                    resave: false,\n                    copy: false,\n                    loading: false,\n                    compress: false,\n                    decompress: false,\n                    option: undefined,\n                    directoryDownloading: false,\n                    directoryDownloadLog: \"\",\n                    directoryDownloadDone: false,\n                }),\n            });\n        case \"TOGGLE_SNACKBAR\":\n            return Object.assign({}, state, {\n                snackbar: {\n                    toggle: !state.snackbar.toggle,\n                    vertical: action.vertical,\n                    horizontal: action.horizontal,\n                    msg: action.msg,\n                    color: action.color,\n                },\n            });\n        case \"SET_MODALS_LOADING\":\n            return Object.assign({}, state, {\n                modalsLoading: action.status,\n            });\n        case \"SET_SESSION_STATUS\":\n            return {\n                ...state,\n                isLogin: action.status,\n            };\n        case \"REFRESH_STORAGE\":\n            return Object.assign({}, state, {\n                storageRefresh: !state.storageRefresh,\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: true,\n            });\n        case \"CHANGE_CONTEXT_MENU\":\n            if (state.contextOpen && action.open) {\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                contextOpen: action.open,\n                contextType: action.menuType,\n            });\n        case \"SET_SUBTITLE\":\n            return Object.assign({}, state, {\n                subTitle: action.title,\n            });\n        case \"SET_SORT_METHOD\":\n            return {\n                ...state,\n                sortMethod: action.method,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: action.navigatorLoading,\n            };\n        case \"SET_OPTION_MODAL\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    option: action.option,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_FILE_SELECTOR\":\n            return {\n                ...state,\n                openFileSelector: state.openFileSelector + 1,\n                contextOpen: false,\n            };\n        case \"OPEN_FOLDER_SELECTOR\":\n            return {\n                ...state,\n                openFolderSelector: state.openFolderSelector + 1,\n                contextOpen: false,\n            };\n        case \"SET_PAGINATION\":\n            return {\n                ...state,\n                pagination: action.pagination,\n            };\n        case \"SET_SHARE_INFO\":\n            return {\n                ...state,\n                shareInfo: action.shareInfo,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default viewUpdate;\n","/* eslint-disable no-case-declarations */\nimport { InitSiteConfig } from \"../middleware/Init\";\nimport { combineReducers } from \"../redux/combineReducers\";\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\nimport explorer from \"../redux/explorer/reducer\";\nimport { connectRouter } from \"connected-react-router\";\nimport i18next from \"../i18n\";\n\nconst doNavigate = (path, state) => {\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator: Object.assign({}, state.navigator, {\n            path: path,\n        }),\n    });\n};\n\nexport const initState = {\n    siteConfig: {\n        title: window.subTitle,\n        siteICPId: \"\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes: null,\n        authn: false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\",\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\",\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\",\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\",\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\",\n                },\n            },\n        },\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_type: \"normal\",\n        tcaptcha_captcha_app_id: \"\",\n        wopi_exts: [],\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true,\n    },\n};\n\nconst defaultStatus = InitSiteConfig(initState);\n\n// TODO: 将cloureveApp切分成小的reducer\nconst cloudreveApp = (state = defaultStatus, action) => {\n    switch (action.type) {\n        case \"SET_NAVIGATOR\":\n            return doNavigate(action.path, state);\n        case \"TOGGLE_DAYLIGHT_MODE\": {\n            const copy = Object.assign({}, state);\n            if (\n                copy.siteConfig.theme.palette.type === undefined ||\n                copy.siteConfig.theme.palette.type === \"light\"\n            ) {\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme: {\n                            ...state.siteConfig.theme,\n                            palette: {\n                                ...state.siteConfig.theme.palette,\n                                type: \"dark\",\n                            },\n                        },\n                    },\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme: {\n                        ...state.siteConfig.theme,\n                        palette: {\n                            ...state.siteConfig.theme.palette,\n                            type: \"light\",\n                        },\n                    },\n                },\n            };\n        }\n        case \"APPLY_THEME\":\n            if (state.siteConfig.themes !== null) {\n                const themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined) {\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme: themes[action.theme],\n                    }),\n                });\n            }\n            break;\n        case \"NAVIGATOR_UP\":\n            return doNavigate(action.path, state);\n        case \"SET_SITE_CONFIG\":\n            return Object.assign({}, state, {\n                siteConfig: action.config,\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh: !state.navigator.refresh,\n                }),\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/\" + i18next.t(\"fileManager.searchResult\"),\n                    refresh: !state.explorer.search\n                        ? state.navigator.refresh\n                        : !state.navigator.refresh,\n                }),\n            });\n        default:\n            return state;\n    }\n};\n\nexport default (history) => (state, action) => {\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\n        state || {};\n    const appState = cloudreveApp(state, action);\n    const combinedState = combineReducers({\n        viewUpdate,\n        explorer,\n        router: connectRouter(history),\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\n    return {\n        ...appState,\n        ...combinedState,\n    };\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport { withTranslation } from \"react-i18next\";\n\nconst styles = {\n    h1: {\n        color: \"#a4a4a4\",\n        margin: \"5px 0px\",\n    },\n    h2: {\n        margin: \"15px 0px\",\n    },\n};\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        });\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        if (this.state.hasError) {\n            return (\n                <>\n                    <h1 className={classes.h1}>:(</h1>\n                    <h2 className={classes.h2}>{t(\"renderError\")}</h2>\n                    {this.state.error &&\n                        this.state.errorInfo &&\n                        this.state.errorInfo.componentStack && (\n                            <details>\n                                <summary>{t(\"errorDetails\")}</summary>\n                                <pre>\n                                    <code>{this.state.error.toString()}</code>\n                                </pre>\n                                <pre>\n                                    <code>\n                                        {this.state.errorInfo.componentStack}\n                                    </code>\n                                </pre>\n                            </details>\n                        )}\n                </>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default withTranslation([\"common\"])(withStyles(styles)(ErrorBoundary));\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nimport { createBrowserHistory } from \"history\";\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\nimport i18next from \"./i18n\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport { removeI18nCache } from \"./utils\";\n\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nif (window.location.hash !== \"\") {\n    window.location.href = window.location.hash.split(\"#\")[1];\n}\nserviceWorker.register({\n    onUpdate: (registration) => {\n        removeI18nCache();\n        alert(i18next.t(\"newVersionRefresh\", { ns: \"common\" }));\n        if (registration && registration.waiting) {\n            registration.waiting.postMessage({ type: \"SKIP_WAITING\" });\n        }\n        window.location.reload();\n    },\n});\n\nexport const history = createBrowserHistory();\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\nif (\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nconst store = createStore(cloureveApp(history), reduxEnhance);\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <Suspense fallback={<PageLoading />}>\n        <ErrorBoundary>\n            <Provider store={store}>\n                <ConnectedRouter history={history}>\n                    <Switch>\n                        <Route path=\"/admin\">\n                            <Admin />\n                        </Route>\n                        <Route exact path=\"\">\n                            <App />\n                        </Route>\n                    </Switch>\n                </ConnectedRouter>\n            </Provider>\n        </ErrorBoundary>\n    </Suspense>,\n    document.getElementById(\"root\")\n);\n","import {\n    combineReducers as combine,\n    ReducersMapObject,\n    AnyAction,\n} from \"redux\";\nimport invariant from \"invariant\";\n\nexport const combineReducers = (reducers: ReducersMapObject) => {\n    const combinedReducer = combine(reducers);\n    // TODO: define state type\n    return (state: any, action: AnyAction) => {\n        if (\n            action.type &&\n            !action.type.startsWith(\"@@\") &&\n            action.type.split(\"/\").length > 1\n        ) {\n            const namespace = action.type.split(\"/\")[0];\n            const reducer = reducers[namespace];\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\n            return reducer && reducer(state, action);\n        }\n        return combinedReducer(state, action);\n    };\n};\n","import React from \"react\";\nimport { PackageVariant } from \"mdi-material-ui\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    emptyContainer: {\n        bottom: \"0\",\n\n        color: theme.palette.action.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.action.disabled,\n    },\n    emptyInfoSmall: {\n        color: theme.palette.action.disabled,\n    },\n}));\n\nexport default function Nothing({ primary, secondary, top = 20, size = 1 }) {\n    const classes = useStyles();\n    return (\n        <div\n            style={{\n                margin: `${50 * size}px auto`,\n                paddingTop: top,\n            }}\n            className={classes.emptyContainer}\n        >\n            <PackageVariant\n                style={{\n                    fontSize: 160 * size,\n                }}\n            />\n            <div\n                style={{\n                    fontSize: 25 * size,\n                }}\n                className={classes.emptyInfoBig}\n            >\n                {primary}\n            </div>\n            {secondary !== \"\" && (\n                <div className={classes.emptyInfoSmall}>{secondary}</div>\n            )}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport {\n    IconButton,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    MenuItem,\n    MenuList,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { withTranslation } from \"react-i18next\";\n\nconst mapStateToProps = (state) => {\n    return {\n        search: state.explorer.search,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconWhite: {\n        color: theme.palette.common.white,\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main + \"!important\",\n        \"& $primary, & $icon\": {\n            color: theme.palette.common.white,\n        },\n    },\n    primary: {},\n    icon: {},\n    buttonIcon: {},\n    selector: {\n        minWidth: \"300px\",\n    },\n    container: {\n        maxHeight: \"330px\",\n        overflowY: \" auto\",\n    },\n});\n\nclass PathSelectorCompoment extends Component {\n    state = {\n        presentPath: \"/\",\n        dirList: [],\n        selectedTarget: null,\n    };\n\n    componentDidMount = () => {\n        const toBeLoad = this.props.presentPath;\n        this.enterFolder(!this.props.search ? toBeLoad : \"/\");\n    };\n\n    back = () => {\n        const paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        const toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\n    };\n\n    enterFolder = (toBeLoad) => {\n        API.get(\n            (this.props.api ? this.props.api : \"/directory\") +\n                encodeURIComponent(toBeLoad)\n        )\n            .then((response) => {\n                const dirList = response.data.objects.filter((x) => {\n                    return (\n                        x.type === \"dir\" &&\n                        this.props.selected.findIndex((value) => {\n                            return (\n                                value.name === x.name && value.path === x.path\n                            );\n                        }) === -1\n                    );\n                });\n                dirList.forEach((value) => {\n                    value.displayName = value.name;\n                });\n                if (toBeLoad === \"/\") {\n                    dirList.unshift({ name: \"/\", path: \"\", displayName: \"/\" });\n                } else {\n                    let path = toBeLoad;\n                    let name = toBeLoad;\n                    const displayNames = [\"fileManager.currentFolder\", \"fileManager.backToParentFolder\"];\n                    for (let i = 0; i < 2; i++) {\n                        const paths = path.split(\"/\");\n                        name = paths.pop();\n                        name = name === \"\" ? \"/\" : name;\n                        path = paths.join(\"/\");\n                        dirList.unshift({\n                            name: name,\n                            path: path,\n                            displayName: this.props.t(\n                                displayNames[i]\n                            ),\n                        });\n                    }\n                }\n                this.setState({\n                    presentPath: toBeLoad,\n                    dirList: dirList,\n                    selectedTarget: null,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            });\n    };\n\n    handleSelect = (index) => {\n        this.setState({ selectedTarget: index });\n        this.props.onSelect(this.state.dirList[index]);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n\n        const showActionIcon = (index) => {\n            if (this.state.presentPath === \"/\") {\n                return index !== 0;\n            }\n            return index !== 1;\n        };\n\n        const actionIcon = (index) => {\n            if (this.state.presentPath === \"/\") {\n                return <RightIcon />;\n            }\n\n            if (index === 0) {\n                return <UpIcon />;\n            }\n            return <RightIcon />;\n        };\n\n        return (\n            <div className={classes.container}>\n                <MenuList className={classes.selector}>\n                    {this.state.dirList.map((value, index) => (\n                        <MenuItem\n                            classes={{\n                                selected: classes.selected,\n                            }}\n                            key={index}\n                            selected={this.state.selectedTarget === index}\n                            onClick={() => this.handleSelect(index)}\n                        >\n                            <ListItemIcon className={classes.icon}>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                classes={{ primary: classes.primary }}\n                                primary={value.displayName}\n                                primaryTypographyProps={{\n                                    style: { whiteSpace: \"normal\" },\n                                }}\n                            />\n                            {showActionIcon(index) && (\n                                <ListItemSecondaryAction\n                                    className={classes.buttonIcon}\n                                >\n                                    <IconButton\n                                        className={classNames({\n                                            [classes.iconWhite]:\n                                                this.state.selectedTarget ===\n                                                index,\n                                        })}\n                                        onClick={() =>\n                                            index === 0\n                                                ? this.back()\n                                                : this.enterFolder(\n                                                      value.path === \"/\"\n                                                          ? value.path +\n                                                                value.name\n                                                          : value.path +\n                                                                \"/\" +\n                                                                value.name\n                                                  )\n                                        }\n                                    >\n                                        {actionIcon(index)}\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            )}\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath: PropTypes.string.isRequired,\n    selected: PropTypes.array.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withTranslation()(PathSelectorCompoment)));\n"],"sourceRoot":""}